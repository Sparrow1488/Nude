2023-05-06 22:02:01.543 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-06 22:02:02.054 +03:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-05-06 22:02:02.081 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-05-06 22:02:02.106 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT migration_id, product_version
FROM "__EFMigrationsHistory"
ORDER BY migration_id;
2023-05-06 22:02:02.141 +03:00 [INF] Applying migration '20230506092223_0.0.11'.
2023-05-06 22:02:02.229 +03:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE collection_image;
2023-05-06 22:02:02.257 +03:00 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE collection_image_entry (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    entry_id integer NOT NULL,
    collection_id integer NOT NULL,
    CONSTRAINT pk_collection_image_entry PRIMARY KEY (id),
    CONSTRAINT fk_collection_image_entry_image_collections_collection_id FOREIGN KEY (collection_id) REFERENCES image_collections (id) ON DELETE CASCADE,
    CONSTRAINT fk_collection_image_entry_images_entry_id FOREIGN KEY (entry_id) REFERENCES images (id) ON DELETE CASCADE
);
2023-05-06 22:02:02.272 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE view (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    user_id integer NOT NULL,
    manga_id integer NULL,
    image_id integer NULL,
    image_collection_id integer NULL,
    CONSTRAINT pk_view PRIMARY KEY (id),
    CONSTRAINT fk_view_image_collections_image_collection_id FOREIGN KEY (image_collection_id) REFERENCES image_collections (id),
    CONSTRAINT fk_view_images_image_id FOREIGN KEY (image_id) REFERENCES images (id),
    CONSTRAINT fk_view_mangas_manga_id FOREIGN KEY (manga_id) REFERENCES mangas (id),
    CONSTRAINT fk_view_users_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);
2023-05-06 22:02:02.284 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_collection_image_entry_collection_id ON collection_image_entry (collection_id);
2023-05-06 22:02:02.293 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_collection_image_entry_entry_id ON collection_image_entry (entry_id);
2023-05-06 22:02:02.304 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_view_image_collection_id ON view (image_collection_id);
2023-05-06 22:02:02.315 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_view_image_id ON view (image_id);
2023-05-06 22:02:02.324 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_view_manga_id ON view (manga_id);
2023-05-06 22:02:02.335 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_view_user_id ON view (user_id);
2023-05-06 22:02:02.341 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
VALUES ('20230506092223_0.0.11', '6.0.16');
2023-05-06 22:02:02.362 +03:00 [INF] Applying migration '20230506094310_0.0.12'.
2023-05-06 22:02:02.390 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE view DROP CONSTRAINT fk_view_image_collections_image_collection_id;
2023-05-06 22:02:02.395 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE view DROP CONSTRAINT fk_view_images_image_id;
2023-05-06 22:02:02.400 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE view DROP CONSTRAINT fk_view_mangas_manga_id;
2023-05-06 22:02:02.405 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE view DROP CONSTRAINT fk_view_users_user_id;
2023-05-06 22:02:02.410 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE view DROP CONSTRAINT pk_view;
2023-05-06 22:02:02.415 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE view RENAME TO views;
2023-05-06 22:02:02.419 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER INDEX ix_view_user_id RENAME TO ix_views_user_id;
2023-05-06 22:02:02.424 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER INDEX ix_view_manga_id RENAME TO ix_views_manga_id;
2023-05-06 22:02:02.430 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER INDEX ix_view_image_id RENAME TO ix_views_image_id;
2023-05-06 22:02:02.434 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER INDEX ix_view_image_collection_id RENAME TO ix_views_image_collection_id;
2023-05-06 22:02:02.443 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE views ADD CONSTRAINT pk_views PRIMARY KEY (id);
2023-05-06 22:02:02.451 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE views ADD CONSTRAINT fk_views_image_collections_image_collection_id FOREIGN KEY (image_collection_id) REFERENCES image_collections (id);
2023-05-06 22:02:02.459 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE views ADD CONSTRAINT fk_views_images_image_id FOREIGN KEY (image_id) REFERENCES images (id);
2023-05-06 22:02:02.465 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE views ADD CONSTRAINT fk_views_mangas_manga_id FOREIGN KEY (manga_id) REFERENCES mangas (id);
2023-05-06 22:02:02.471 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE views ADD CONSTRAINT fk_views_users_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE;
2023-05-06 22:02:02.476 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
VALUES ('20230506094310_0.0.12', '6.0.16');
2023-05-06 22:02:02.483 +03:00 [INF] Applying migration '20230506135835_0.0.13'.
2023-05-06 22:02:02.515 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE users ADD blacklist_id integer NULL;
2023-05-06 22:02:02.525 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE blacklists (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    user_id integer NOT NULL,
    CONSTRAINT pk_blacklists PRIMARY KEY (id)
);
2023-05-06 22:02:02.537 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE blacklist_tag (
    blacklists_id integer NOT NULL,
    tags_id integer NOT NULL,
    CONSTRAINT pk_blacklist_tag PRIMARY KEY (blacklists_id, tags_id),
    CONSTRAINT fk_blacklist_tag_blacklists_blacklists_id FOREIGN KEY (blacklists_id) REFERENCES blacklists (id) ON DELETE CASCADE,
    CONSTRAINT fk_blacklist_tag_tags_tags_id FOREIGN KEY (tags_id) REFERENCES tags (id) ON DELETE CASCADE
);
2023-05-06 22:02:02.547 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX ix_users_blacklist_id ON users (blacklist_id);
2023-05-06 22:02:02.558 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_blacklist_tag_tags_id ON blacklist_tag (tags_id);
2023-05-06 22:02:02.564 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE users ADD CONSTRAINT fk_users_blacklists_blacklist_id FOREIGN KEY (blacklist_id) REFERENCES blacklists (id) ON DELETE SET NULL;
2023-05-06 22:02:02.569 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
VALUES ('20230506135835_0.0.13', '6.0.16');
2023-05-06 22:02:02.580 +03:00 [INF] Seeding default admin users
2023-05-06 22:02:02.591 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-06 22:02:02.877 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.discriminator, a.owner_id, a.username, u.id, u.blacklist_id
FROM accounts AS a
INNER JOIN users AS u ON a.owner_id = u.id
WHERE a.username = @__username_0
LIMIT 1
2023-05-06 22:02:03.012 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-05-06 22:02:03.027 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.blacklist_id, t.id0, t.user_id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id, u.blacklist_id, b.id AS id0, b.user_id
    FROM users AS u
    LEFT JOIN blacklists AS b ON u.blacklist_id = b.id
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, t.id0, a.id
2023-05-06 22:02:03.058 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.discriminator, a.owner_id, a.username, u.id, u.blacklist_id
FROM accounts AS a
INNER JOIN users AS u ON a.owner_id = u.id
WHERE a.username = @__username_0
LIMIT 1
2023-05-06 22:02:03.062 +03:00 [INF] Found 1 users in DB. Setting claim.role.administrator claims them
2023-05-06 22:02:03.129 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM claims
WHERE id = @p0;
2023-05-06 22:02:03.179 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?', @p1='?', @p2='?' (DbType = Int32), @p3='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO claims (issuer, type, user_id, value)
VALUES (@p0, @p1, @p2, @p3)
RETURNING id;
2023-05-06 22:02:03.214 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.blacklist_id
FROM users AS u
LEFT JOIN blacklists AS b ON u.blacklist_id = b.id
WHERE (b.id IS NULL)
2023-05-06 22:02:03.219 +03:00 [INF] Found 1 users without blacklists
2023-05-06 22:02:03.253 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.normalize_value, t.type, t.value
FROM tags AS t
WHERE t.normalize_value IN ('ЯОЙ', 'ТРАП', 'ФУРРИ', 'ФУТАНАРИ')
2023-05-06 22:02:03.274 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO blacklists (user_id)
VALUES (@p0)
RETURNING id;
2023-05-06 22:02:03.282 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p2='?' (DbType = Int32), @p1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE users SET blacklist_id = @p1
WHERE id = @p2;
2023-05-06 22:02:03.521 +03:00 [INF] User profile is available. Using 'C:\Users\ilyao\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-05-06 22:02:03.602 +03:00 [INF] FormatsWorker job started
2023-05-06 22:02:03.629 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-06 22:02:03.660 +03:00 [INF] ContentTicketsWorker job started
2023-05-06 22:02:03.665 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE (NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)) AND EXISTS (
    SELECT 1
    FROM manga_images AS m1
    WHERE m.id = m1.manga_entry_id)
LIMIT 1
2023-05-06 22:02:03.665 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-06 22:02:03.677 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE (NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image_entry AS c
    WHERE i.id = c.collection_id) <= 45)) AND EXISTS (
    SELECT 1
    FROM collection_image_entry AS c0
    WHERE i.id = c0.collection_id)
LIMIT 1
2023-05-06 22:02:03.686 +03:00 [INF] FormatsWorker completed in 00:00:00.00
2023-05-06 22:02:03.688 +03:00 [INF] FormatsWorker job ended
2023-05-06 22:02:03.700 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-06 22:02:03.704 +03:00 [INF] ContentTicketsWorker job ended
2023-05-06 22:02:03.712 +03:00 [INF] Now listening on: http://localhost:3001
2023-05-06 22:02:03.714 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-05-06 22:02:03.715 +03:00 [INF] Hosting environment: Production
2023-05-06 22:02:03.716 +03:00 [INF] Content root path: C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\
2023-05-06 22:02:05.711 +03:00 [INF] FormatsWorker job started
2023-05-06 22:02:05.714 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-06 22:02:05.721 +03:00 [INF] ContentTicketsWorker job started
2023-05-06 22:02:05.725 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE (NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)) AND EXISTS (
    SELECT 1
    FROM manga_images AS m1
    WHERE m.id = m1.manga_entry_id)
LIMIT 1
2023-05-06 22:02:05.727 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-06 22:02:05.737 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE (NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image_entry AS c
    WHERE i.id = c.collection_id) <= 45)) AND EXISTS (
    SELECT 1
    FROM collection_image_entry AS c0
    WHERE i.id = c0.collection_id)
LIMIT 1
2023-05-06 22:02:05.742 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-06 22:02:05.745 +03:00 [INF] FormatsWorker completed in 00:00:00.00
2023-05-06 22:02:05.750 +03:00 [INF] ContentTicketsWorker job ended
2023-05-06 22:02:05.755 +03:00 [INF] FormatsWorker job ended
2023-05-06 22:02:07.783 +03:00 [INF] ContentTicketsWorker job started
2023-05-06 22:02:07.783 +03:00 [INF] FormatsWorker job started
2023-05-06 22:02:07.789 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-06 22:02:07.796 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-06 22:02:07.814 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-06 22:02:07.828 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE (NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)) AND EXISTS (
    SELECT 1
    FROM manga_images AS m1
    WHERE m.id = m1.manga_entry_id)
LIMIT 1
2023-05-06 22:02:07.834 +03:00 [INF] ContentTicketsWorker job ended
2023-05-06 22:02:07.850 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE (NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image_entry AS c
    WHERE i.id = c.collection_id) <= 45)) AND EXISTS (
    SELECT 1
    FROM collection_image_entry AS c0
    WHERE i.id = c0.collection_id)
LIMIT 1
2023-05-06 22:02:07.858 +03:00 [INF] FormatsWorker completed in 00:00:00.00
2023-05-06 22:02:07.861 +03:00 [INF] FormatsWorker job ended
2023-05-06 22:02:09.849 +03:00 [INF] ContentTicketsWorker job started
2023-05-06 22:02:09.855 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-06 22:02:09.868 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-06 22:02:09.869 +03:00 [INF] FormatsWorker job started
2023-05-06 22:02:09.877 +03:00 [INF] ContentTicketsWorker job ended
2023-05-06 22:02:09.882 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-06 22:02:09.902 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE (NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)) AND EXISTS (
    SELECT 1
    FROM manga_images AS m1
    WHERE m.id = m1.manga_entry_id)
LIMIT 1
2023-05-06 22:02:09.920 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE (NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image_entry AS c
    WHERE i.id = c.collection_id) <= 45)) AND EXISTS (
    SELECT 1
    FROM collection_image_entry AS c0
    WHERE i.id = c0.collection_id)
LIMIT 1
2023-05-06 22:02:09.934 +03:00 [INF] FormatsWorker completed in 00:00:00.00
2023-05-06 22:02:09.939 +03:00 [INF] FormatsWorker job ended
2023-05-06 22:02:11.889 +03:00 [INF] ContentTicketsWorker job started
2023-05-06 22:02:11.894 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-06 22:02:11.907 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-06 22:02:11.915 +03:00 [INF] ContentTicketsWorker job ended
2023-05-06 22:02:11.984 +03:00 [INF] FormatsWorker job started
2023-05-06 22:02:11.991 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-06 22:02:12.011 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE (NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)) AND EXISTS (
    SELECT 1
    FROM manga_images AS m1
    WHERE m.id = m1.manga_entry_id)
LIMIT 1
2023-05-06 22:02:12.029 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE (NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image_entry AS c
    WHERE i.id = c.collection_id) <= 45)) AND EXISTS (
    SELECT 1
    FROM collection_image_entry AS c0
    WHERE i.id = c0.collection_id)
LIMIT 1
2023-05-06 22:02:12.041 +03:00 [INF] FormatsWorker completed in 00:00:00.00
2023-05-06 22:02:12.045 +03:00 [INF] FormatsWorker job ended
2023-05-06 22:02:12.797 +03:00 [INF] Application is shutting down...
