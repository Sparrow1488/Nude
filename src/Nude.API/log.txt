2023-05-01 19:52:06.801 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:07.153 +03:00 [INF] Executed DbCommand (80ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE "Nude.API";
2023-05-01 19:52:07.284 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "__EFMigrationsHistory" (
    migration_id character varying(150) NOT NULL,
    product_version character varying(32) NOT NULL,
    CONSTRAINT pk___ef_migrations_history PRIMARY KEY (migration_id)
);
2023-05-01 19:52:07.323 +03:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-05-01 19:52:07.332 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT migration_id, product_version
FROM "__EFMigrationsHistory"
ORDER BY migration_id;
2023-05-01 19:52:07.356 +03:00 [INF] Applying migration '20230411224146_0.0.2'.
2023-05-01 19:52:07.413 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE content_tickets (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    content_key text NOT NULL,
    content_url text NOT NULL,
    CONSTRAINT pk_content_tickets PRIMARY KEY (id)
);
2023-05-01 19:52:07.429 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE external_metas (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    source_id text NULL,
    source_url text NULL,
    CONSTRAINT pk_external_metas PRIMARY KEY (id)
);
2023-05-01 19:52:07.445 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE servers (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name text NOT NULL,
    notifications_callback_url text NULL,
    CONSTRAINT pk_servers PRIMARY KEY (id)
);
2023-05-01 19:52:07.461 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE tags (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    value text NOT NULL,
    normalize_value text NULL,
    type integer NOT NULL,
    CONSTRAINT pk_tags PRIMARY KEY (id)
);
2023-05-01 19:52:07.474 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE urls (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    value text NOT NULL,
    CONSTRAINT pk_urls PRIMARY KEY (id)
);
2023-05-01 19:52:07.489 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE mangas (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    content_key text NOT NULL,
    title text NOT NULL,
    description text NOT NULL,
    external_meta_id integer NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    CONSTRAINT pk_mangas PRIMARY KEY (id),
    CONSTRAINT fk_mangas_external_metas_external_meta_id FOREIGN KEY (external_meta_id) REFERENCES external_metas (id)
);
2023-05-01 19:52:07.504 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE formats (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    type integer NOT NULL,
    manga_entry_id integer NOT NULL,
    discriminator text NOT NULL,
    url text NULL,
    CONSTRAINT pk_formats PRIMARY KEY (id),
    CONSTRAINT fk_formats_mangas_manga_entry_id FOREIGN KEY (manga_entry_id) REFERENCES mangas (id) ON DELETE CASCADE
);
2023-05-01 19:52:07.513 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE manga_entry_tag (
    mangas_id integer NOT NULL,
    tags_id integer NOT NULL,
    CONSTRAINT pk_manga_entry_tag PRIMARY KEY (mangas_id, tags_id),
    CONSTRAINT fk_manga_entry_tag_mangas_mangas_id FOREIGN KEY (mangas_id) REFERENCES mangas (id) ON DELETE CASCADE,
    CONSTRAINT fk_manga_entry_tag_tags_tags_id FOREIGN KEY (tags_id) REFERENCES tags (id) ON DELETE CASCADE
);
2023-05-01 19:52:07.525 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE manga_images (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    url_id integer NOT NULL,
    manga_entry_id integer NOT NULL,
    CONSTRAINT pk_manga_images PRIMARY KEY (id),
    CONSTRAINT fk_manga_images_mangas_manga_entry_id FOREIGN KEY (manga_entry_id) REFERENCES mangas (id) ON DELETE CASCADE,
    CONSTRAINT fk_manga_images_urls_url_id FOREIGN KEY (url_id) REFERENCES urls (id) ON DELETE CASCADE
);
2023-05-01 19:52:07.539 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_formats_manga_entry_id ON formats (manga_entry_id);
2023-05-01 19:52:07.549 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_manga_entry_tag_tags_id ON manga_entry_tag (tags_id);
2023-05-01 19:52:07.557 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_manga_images_manga_entry_id ON manga_images (manga_entry_id);
2023-05-01 19:52:07.565 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_manga_images_url_id ON manga_images (url_id);
2023-05-01 19:52:07.574 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_mangas_external_meta_id ON mangas (external_meta_id);
2023-05-01 19:52:07.577 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
VALUES ('20230411224146_0.0.2', '6.0.16');
2023-05-01 19:52:07.590 +03:00 [INF] Applying migration '20230412212750_0.0.3'.
2023-05-01 19:52:07.602 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE servers;
2023-05-01 19:52:07.605 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
VALUES ('20230412212750_0.0.3', '6.0.16');
2023-05-01 19:52:07.610 +03:00 [INF] Applying migration '20230412222528_0.0.4'.
2023-05-01 19:52:07.637 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE images (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    url text NOT NULL,
    content_key text NOT NULL,
    external_meta_id integer NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    CONSTRAINT pk_images PRIMARY KEY (id),
    CONSTRAINT fk_images_external_metas_external_meta_id FOREIGN KEY (external_meta_id) REFERENCES external_metas (id)
);
2023-05-01 19:52:07.647 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE image_entry_tag (
    images_id integer NOT NULL,
    tags_id integer NOT NULL,
    CONSTRAINT pk_image_entry_tag PRIMARY KEY (images_id, tags_id),
    CONSTRAINT fk_image_entry_tag_images_images_id FOREIGN KEY (images_id) REFERENCES images (id) ON DELETE CASCADE,
    CONSTRAINT fk_image_entry_tag_tags_tags_id FOREIGN KEY (tags_id) REFERENCES tags (id) ON DELETE CASCADE
);
2023-05-01 19:52:07.657 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_image_entry_tag_tags_id ON image_entry_tag (tags_id);
2023-05-01 19:52:07.665 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_images_external_meta_id ON images (external_meta_id);
2023-05-01 19:52:07.669 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
VALUES ('20230412222528_0.0.4', '6.0.16');
2023-05-01 19:52:07.674 +03:00 [INF] Applying migration '20230414112608_0.0.5'.
2023-05-01 19:52:07.691 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE formats ADD image_collection_id integer NULL;
2023-05-01 19:52:07.706 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE image_collections (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    title text NOT NULL,
    description text NULL,
    content_key text NOT NULL,
    CONSTRAINT pk_image_collections PRIMARY KEY (id)
);
2023-05-01 19:52:07.715 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE collection_image (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    entry_id integer NOT NULL,
    collection_id integer NOT NULL,
    CONSTRAINT pk_collection_image PRIMARY KEY (id),
    CONSTRAINT fk_collection_image_image_collections_collection_id FOREIGN KEY (collection_id) REFERENCES image_collections (id) ON DELETE CASCADE,
    CONSTRAINT fk_collection_image_images_entry_id FOREIGN KEY (entry_id) REFERENCES images (id) ON DELETE CASCADE
);
2023-05-01 19:52:07.723 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_formats_image_collection_id ON formats (image_collection_id);
2023-05-01 19:52:07.732 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_collection_image_collection_id ON collection_image (collection_id);
2023-05-01 19:52:07.740 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_collection_image_entry_id ON collection_image (entry_id);
2023-05-01 19:52:07.745 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE formats ADD CONSTRAINT fk_formats_image_collections_image_collection_id FOREIGN KEY (image_collection_id) REFERENCES image_collections (id);
2023-05-01 19:52:07.748 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
VALUES ('20230414112608_0.0.5', '6.0.16');
2023-05-01 19:52:07.753 +03:00 [INF] Applying migration '20230414125215_0.0.6'.
2023-05-01 19:52:07.769 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE formats DROP CONSTRAINT fk_formats_image_collections_image_collection_id;
2023-05-01 19:52:07.772 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE formats ALTER COLUMN manga_entry_id DROP NOT NULL;
2023-05-01 19:52:07.776 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE formats ADD CONSTRAINT fk_formats_image_collections_image_collection_id FOREIGN KEY (image_collection_id) REFERENCES image_collections (id) ON DELETE CASCADE;
2023-05-01 19:52:07.779 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
VALUES ('20230414125215_0.0.6', '6.0.16');
2023-05-01 19:52:07.784 +03:00 [INF] Applying migration '20230414192728_0.0.7'.
2023-05-01 19:52:07.804 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE users (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    CONSTRAINT pk_users PRIMARY KEY (id)
);
2023-05-01 19:52:07.817 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE accounts (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    owner_id integer NOT NULL,
    discriminator text NOT NULL,
    username text NULL,
    CONSTRAINT pk_accounts PRIMARY KEY (id),
    CONSTRAINT fk_accounts_users_owner_id FOREIGN KEY (owner_id) REFERENCES users (id) ON DELETE CASCADE
);
2023-05-01 19:52:07.825 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_accounts_owner_id ON accounts (owner_id);
2023-05-01 19:52:07.828 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
VALUES ('20230414192728_0.0.7', '6.0.16');
2023-05-01 19:52:07.834 +03:00 [INF] Applying migration '20230415131247_0.0.8'.
2023-05-01 19:52:07.849 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE content_tickets ADD user_id integer NOT NULL DEFAULT 0;
2023-05-01 19:52:07.858 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_content_tickets_user_id ON content_tickets (user_id);
2023-05-01 19:52:07.862 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE content_tickets ADD CONSTRAINT fk_content_tickets_users_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE;
2023-05-01 19:52:07.865 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
VALUES ('20230415131247_0.0.8', '6.0.16');
2023-05-01 19:52:07.870 +03:00 [INF] Applying migration '20230418192713_0.0.9'.
2023-05-01 19:52:07.885 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE images ADD owner_id integer NULL;
2023-05-01 19:52:07.893 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_images_owner_id ON images (owner_id);
2023-05-01 19:52:07.896 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE images ADD CONSTRAINT fk_images_users_owner_id FOREIGN KEY (owner_id) REFERENCES users (id) ON DELETE SET NULL;
2023-05-01 19:52:07.900 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
VALUES ('20230418192713_0.0.9', '6.0.16');
2023-05-01 19:52:07.905 +03:00 [INF] Applying migration '20230422201532_0.0.10'.
2023-05-01 19:52:07.931 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE claims (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    type text NOT NULL,
    value text NOT NULL,
    issuer text NULL,
    user_id integer NOT NULL,
    CONSTRAINT pk_claims PRIMARY KEY (id),
    CONSTRAINT fk_claims_users_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);
2023-05-01 19:52:07.940 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_claims_user_id ON claims (user_id);
2023-05-01 19:52:07.943 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
VALUES ('20230422201532_0.0.10', '6.0.16');
2023-05-01 19:52:07.953 +03:00 [INF] Seeding default admin users
2023-05-01 19:52:07.963 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:08.211 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.discriminator, a.owner_id, a.username, u.id
FROM accounts AS a
INNER JOIN users AS u ON a.owner_id = u.id
WHERE a.username = @__username_0
LIMIT 1
2023-05-01 19:52:08.218 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.discriminator, a.owner_id, a.username, u.id
FROM accounts AS a
INNER JOIN users AS u ON a.owner_id = u.id
WHERE a.username = @__username_0
LIMIT 1
2023-05-01 19:52:08.220 +03:00 [INF] Found 0 users in DB. Setting claim.role.administrator claims them
2023-05-01 19:52:08.324 +03:00 [INF] User profile is available. Using 'C:\Users\ilyao\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-05-01 19:52:08.413 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:08.425 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:52:08.427 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:08.477 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:52:08.487 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:52:08.510 +03:00 [INF] Now listening on: http://localhost:3001
2023-05-01 19:52:08.511 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-05-01 19:52:08.512 +03:00 [INF] Hosting environment: Production
2023-05-01 19:52:08.513 +03:00 [INF] Content root path: C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\
2023-05-01 19:52:10.509 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:10.517 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:10.519 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:52:10.540 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:52:10.545 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:52:12.586 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:12.589 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:12.610 +03:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:52:12.641 +03:00 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:52:12.650 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:52:14.657 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:14.665 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:14.670 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:52:14.677 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:52:14.684 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:52:16.709 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:16.713 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:16.715 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:52:16.720 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:52:16.730 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:52:18.750 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:18.762 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:18.769 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:52:18.782 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:52:18.804 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:52:20.817 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:20.821 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:20.823 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:52:20.829 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:52:20.835 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:52:22.855 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:22.859 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:22.861 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:52:22.866 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:52:22.871 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:52:24.884 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:24.888 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:24.890 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:52:24.894 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:52:24.899 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:52:26.904 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:26.907 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:26.909 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:52:26.913 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:52:26.918 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:52:28.932 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:28.936 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:28.937 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:52:28.942 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:52:28.949 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:52:30.965 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:30.968 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:30.970 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:52:30.974 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:52:30.979 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:52:32.992 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:32.996 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:32.998 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:52:33.003 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:52:33.010 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:52:35.022 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:35.027 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:35.029 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:52:35.032 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:52:35.038 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:52:37.048 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:37.051 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:37.055 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:52:37.075 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:52:37.084 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:52:40.501 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:40.522 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:40.524 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:52:40.527 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:52:40.532 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:52:45.695 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:45.703 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:45.759 +03:00 [INF] Executed DbCommand (62ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:52:45.760 +03:00 [INF] Executed DbCommand (55ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:52:45.769 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:52:48.303 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:48.306 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:48.308 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:52:48.312 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:52:48.316 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:52:50.320 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:50.325 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:50.328 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:52:50.331 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:52:50.336 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:52:52.343 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:52.345 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:52.349 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:52:52.355 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:52:52.360 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:52:54.371 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:54.375 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:54.377 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:52:54.383 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:52:54.389 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:52:56.398 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:56.401 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:56.403 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:52:56.407 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:52:56.413 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:52:58.425 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:58.428 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:52:58.431 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:52:58.437 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:52:58.446 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:53:00.459 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:00.464 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:00.468 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:53:00.492 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:53:00.504 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:53:01.957 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/auth?username=sprw1488 application/json;+charset=utf-8 2
2023-05-01 19:53:02.068 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API)'
2023-05-01 19:53:02.100 +03:00 [INF] Route matched with {action = "SignInTelegram", controller = "Authorization"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SignInTelegram(System.String) on controller Nude.API.Controllers.AuthorizationController (Nude.API).
2023-05-01 19:53:02.135 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:02.142 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.discriminator, a.owner_id, a.username, u.id
FROM accounts AS a
INNER JOIN users AS u ON a.owner_id = u.id
WHERE a.username = @__username_0
LIMIT 1
2023-05-01 19:53:02.150 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.discriminator, a.owner_id, a.username, u.id
FROM accounts AS a
INNER JOIN users AS u ON a.owner_id = u.id
WHERE a.username = @__username_0
LIMIT 1
2023-05-01 19:53:02.355 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO users
DEFAULT VALUES
RETURNING id;
2023-05-01 19:53:02.397 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO accounts (discriminator, owner_id, username)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-05-01 19:53:02.445 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.issuer, c.type, c.user_id, c.value
FROM claims AS c
WHERE c.user_id = @__p_0
2023-05-01 19:53:02.468 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?', @p2='?' (DbType = Int32), @p3='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO claims (issuer, type, user_id, value)
VALUES (@p0, @p1, @p2, @p3)
RETURNING id;
2023-05-01 19:53:02.513 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:02.517 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:02.518 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:53:02.524 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:53:02.529 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:53:02.629 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tokens.Responses.JwtTokenResponse'.
2023-05-01 19:53:02.748 +03:00 [INF] Executed action Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API) in 639.8836ms
2023-05-01 19:53:02.751 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API)'
2023-05-01 19:53:02.756 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/auth?username=sprw1488 application/json;+charset=utf-8 2 - 200 593 application/json;+charset=utf-8 804.6398ms
2023-05-01 19:53:04.536 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:04.540 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:04.545 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:53:04.550 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:53:04.556 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:53:06.574 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:06.577 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:06.580 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:53:06.587 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:53:06.592 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:53:08.609 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:08.612 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:08.614 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:53:08.618 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:53:08.623 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:53:10.641 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:10.646 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:10.653 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:53:10.660 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:53:10.670 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:53:11.971 +03:00 [INF] Application is shutting down...
2023-05-01 19:53:26.890 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:27.305 +03:00 [INF] Executed DbCommand (93ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-05-01 19:53:27.341 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-05-01 19:53:27.367 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT migration_id, product_version
FROM "__EFMigrationsHistory"
ORDER BY migration_id;
2023-05-01 19:53:27.402 +03:00 [INF] No migrations were applied. The database is already up to date.
2023-05-01 19:53:27.411 +03:00 [INF] Seeding default admin users
2023-05-01 19:53:27.415 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:27.767 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.discriminator, a.owner_id, a.username, u.id
FROM accounts AS a
INNER JOIN users AS u ON a.owner_id = u.id
WHERE a.username = @__username_0
LIMIT 1
2023-05-01 19:53:27.926 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-05-01 19:53:27.938 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-05-01 19:53:27.960 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.discriminator, a.owner_id, a.username, u.id
FROM accounts AS a
INNER JOIN users AS u ON a.owner_id = u.id
WHERE a.username = @__username_0
LIMIT 1
2023-05-01 19:53:27.963 +03:00 [INF] Found 1 users in DB. Setting claim.role.administrator claims them
2023-05-01 19:53:28.055 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM claims
WHERE id = @p0;
2023-05-01 19:53:28.116 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?', @p1='?', @p2='?' (DbType = Int32), @p3='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO claims (issuer, type, user_id, value)
VALUES (@p0, @p1, @p2, @p3)
RETURNING id;
2023-05-01 19:53:28.417 +03:00 [INF] User profile is available. Using 'C:\Users\ilyao\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-05-01 19:53:28.513 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:28.524 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:53:28.528 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:28.562 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:53:28.574 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:53:28.594 +03:00 [INF] Now listening on: http://localhost:3001
2023-05-01 19:53:28.595 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-05-01 19:53:28.596 +03:00 [INF] Hosting environment: Production
2023-05-01 19:53:28.597 +03:00 [INF] Content root path: C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\
2023-05-01 19:53:30.506 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/auth?username=sprw1488 application/json;+charset=utf-8 2
2023-05-01 19:53:30.585 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:30.588 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:30.590 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:53:30.595 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API)'
2023-05-01 19:53:30.613 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:53:30.620 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:53:30.630 +03:00 [INF] Route matched with {action = "SignInTelegram", controller = "Authorization"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SignInTelegram(System.String) on controller Nude.API.Controllers.AuthorizationController (Nude.API).
2023-05-01 19:53:30.660 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:30.667 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.discriminator, a.owner_id, a.username, u.id
FROM accounts AS a
INNER JOIN users AS u ON a.owner_id = u.id
WHERE a.username = @__username_0
LIMIT 1
2023-05-01 19:53:30.674 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-05-01 19:53:30.808 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tokens.Responses.JwtTokenResponse'.
2023-05-01 19:53:30.919 +03:00 [INF] Executed action Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API) in 280.6614ms
2023-05-01 19:53:30.921 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API)'
2023-05-01 19:53:30.925 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/auth?username=sprw1488 application/json;+charset=utf-8 2 - 200 605 application/json;+charset=utf-8 423.4299ms
2023-05-01 19:53:32.637 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:32.641 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:32.644 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:53:32.659 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:53:32.664 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:53:34.683 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:34.691 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:34.692 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:53:34.701 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:53:34.709 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:53:36.727 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:36.730 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:36.732 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:53:36.738 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:53:36.744 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:53:38.754 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:38.758 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:38.759 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:53:38.765 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:53:38.770 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:53:40.479 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----05/01/2023+19:53:40" 79145
2023-05-01 19:53:40.569 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-05-01 19:53:40.575 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-05-01 19:53:40.629 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:40.636 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-05-01 19:53:40.708 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-05-01 19:53:40.737 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-05-01 19:53:40.750 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 173.0976ms
2023-05-01 19:53:40.752 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-05-01 19:53:40.756 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----05/01/2023+19:53:40" 79145 - 200 231 application/json;+charset=utf-8 276.1085ms
2023-05-01 19:53:40.782 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:40.786 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:40.788 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:53:40.793 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:53:40.798 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:53:41.806 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----05/01/2023+19:53:41" 179047
2023-05-01 19:53:41.811 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-05-01 19:53:41.812 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-05-01 19:53:41.828 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:41.834 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-05-01 19:53:41.842 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-05-01 19:53:41.852 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-05-01 19:53:41.854 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 38.8709ms
2023-05-01 19:53:41.855 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-05-01 19:53:41.858 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----05/01/2023+19:53:41" 179047 - 200 231 application/json;+charset=utf-8 51.2629ms
2023-05-01 19:53:42.806 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:42.810 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:42.811 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:53:42.817 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:53:42.822 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:53:44.842 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:44.846 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:44.848 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:53:44.853 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:53:44.858 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:53:46.870 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:46.872 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:46.874 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:53:46.880 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:53:46.885 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:53:48.897 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:48.902 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:48.902 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:53:48.909 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:53:48.918 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:53:50.936 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:50.938 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:50.941 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:53:50.948 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:53:50.957 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:53:52.978 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:52.981 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:52.983 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:53:52.987 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:53:52.993 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:53:55.010 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:55.013 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:55.017 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:53:55.022 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:53:55.031 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:53:57.037 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:57.041 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:57.043 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:53:57.048 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:53:57.054 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:53:59.059 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:59.063 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:53:59.073 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:53:59.073 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:53:59.080 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:54:01.085 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:01.087 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:01.089 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:54:01.094 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:54:01.101 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:54:03.119 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:03.123 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:03.125 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:54:03.129 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:54:03.135 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:54:03.913 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-05-01 19:54:03.915 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-05-01 19:54:03.920 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-05-01 19:54:03.931 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:03.961 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-05-01 19:54:04.034 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (1, 2)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-05-01 19:54:04.056 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-05-01 19:54:04.059 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 135.9861ms
2023-05-01 19:54:04.061 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-05-01 19:54:04.063 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 499 application/json;+charset=utf-8 149.8523ms
2023-05-01 19:54:04.123 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/cc173053a2c2493f8dd1972f58bdf7a9.jpeg - -
2023-05-01 19:54:04.140 +03:00 [INF] Sending file. Request path: '/data/files/cc173053a2c2493f8dd1972f58bdf7a9.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\cc173053a2c2493f8dd1972f58bdf7a9.jpeg'
2023-05-01 19:54:04.142 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/cc173053a2c2493f8dd1972f58bdf7a9.jpeg - - - 200 78932 image/jpeg 19.8754ms
2023-05-01 19:54:04.147 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/1f99684da17c44c2ba1d08f082e7c4ac.jpeg - -
2023-05-01 19:54:04.155 +03:00 [INF] Sending file. Request path: '/data/files/1f99684da17c44c2ba1d08f082e7c4ac.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\1f99684da17c44c2ba1d08f082e7c4ac.jpeg'
2023-05-01 19:54:04.158 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/1f99684da17c44c2ba1d08f082e7c4ac.jpeg - - - 200 178834 image/jpeg 10.2362ms
2023-05-01 19:54:05.155 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:05.158 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:05.161 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:54:05.166 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:54:05.174 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:54:07.180 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:07.185 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:07.186 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:54:07.191 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:54:07.197 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:54:07.401 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-05-01 19:54:07.403 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-05-01 19:54:07.405 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-05-01 19:54:07.409 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:07.414 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-05-01 19:54:07.422 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (1, 2)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-05-01 19:54:07.426 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-05-01 19:54:07.428 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 20.0601ms
2023-05-01 19:54:07.430 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-05-01 19:54:07.432 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 499 application/json;+charset=utf-8 30.2915ms
2023-05-01 19:54:09.203 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:09.207 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:09.208 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:54:09.213 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:54:09.221 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:54:11.229 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:11.234 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:11.235 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:54:11.241 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:54:11.248 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:54:13.261 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:13.266 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:13.267 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:54:13.272 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:54:13.278 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:54:15.297 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:15.301 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:15.303 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:54:15.309 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:54:15.316 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:54:17.336 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:17.339 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:17.341 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:54:17.346 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:54:17.351 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:54:19.368 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:19.372 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:19.374 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:54:19.379 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:54:19.387 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:54:21.395 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:21.398 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:21.401 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:54:21.406 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:54:21.412 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:54:23.424 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:23.428 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:23.430 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:54:23.435 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:54:23.441 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:54:25.452 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:25.456 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:25.457 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:54:25.464 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:54:25.471 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:54:27.485 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:27.488 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:27.490 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:54:27.495 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:54:27.504 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:54:29.517 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:29.520 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:29.521 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:54:29.525 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:54:29.529 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:54:31.544 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:31.546 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:31.548 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:54:31.553 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:54:31.559 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:54:31.959 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-05-01 19:54:31.963 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-05-01 19:54:31.964 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-05-01 19:54:31.967 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:31.973 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-05-01 19:54:31.982 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (1, 2)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-05-01 19:54:31.985 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-05-01 19:54:31.987 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 20.4195ms
2023-05-01 19:54:31.989 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-05-01 19:54:31.991 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 499 application/json;+charset=utf-8 32.2534ms
2023-05-01 19:54:33.180 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-05-01 19:54:33.181 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-05-01 19:54:33.182 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-05-01 19:54:33.185 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:33.190 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-05-01 19:54:33.197 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (1, 2)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-05-01 19:54:33.200 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-05-01 19:54:33.201 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 17.3809ms
2023-05-01 19:54:33.205 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-05-01 19:54:33.208 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 499 application/json;+charset=utf-8 28.0776ms
2023-05-01 19:54:33.564 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:33.567 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:33.569 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:54:33.573 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:54:33.579 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:54:35.583 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:35.586 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:35.588 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:54:35.592 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:54:35.598 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:54:37.606 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:37.610 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-05-01 19:54:37.612 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-05-01 19:54:37.616 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-05-01 19:54:37.620 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-05-01 19:54:38.833 +03:00 [INF] Application is shutting down...
