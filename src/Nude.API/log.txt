2023-04-25 23:40:09.065 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:10.165 +03:00 [INF] Executed DbCommand (214ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-04-25 23:40:10.265 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-04-25 23:40:10.338 +03:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT migration_id, product_version
FROM "__EFMigrationsHistory"
ORDER BY migration_id;
2023-04-25 23:40:10.422 +03:00 [INF] No migrations were applied. The database is already up to date.
2023-04-25 23:40:10.643 +03:00 [INF] User profile is available. Using 'C:\Users\ilyao\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-04-25 23:40:10.794 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:11.592 +03:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:40:11.718 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:12.077 +03:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:40:12.110 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:40:12.168 +03:00 [INF] Now listening on: http://localhost:3001
2023-04-25 23:40:12.177 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-04-25 23:40:12.182 +03:00 [INF] Hosting environment: Production
2023-04-25 23:40:12.186 +03:00 [INF] Content root path: C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\
2023-04-25 23:40:14.147 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:14.165 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:14.168 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:40:14.216 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:40:14.238 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:40:16.267 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:16.275 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:16.279 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:40:16.291 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:40:16.311 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:40:18.334 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:18.370 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:18.372 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:40:18.391 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:40:18.408 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:40:20.427 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:20.440 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:20.444 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:40:20.460 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:40:20.476 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:40:22.499 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:22.510 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:22.515 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:40:22.525 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:40:22.547 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:40:24.579 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:24.589 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:24.593 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:40:24.608 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:40:24.628 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:40:26.658 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:26.668 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:26.673 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:40:26.685 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:40:26.701 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:40:28.000 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/auth?username=sprw1488 application/json;+charset=utf-8 2
2023-04-25 23:40:28.184 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API)'
2023-04-25 23:40:28.236 +03:00 [INF] Route matched with {action = "SignInTelegram", controller = "Authorization"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SignInTelegram(System.String) on controller Nude.API.Controllers.AuthorizationController (Nude.API).
2023-04-25 23:40:28.307 +03:00 [INF] Executing action method Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API) - Validation state: "Valid"
2023-04-25 23:40:28.322 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:28.532 +03:00 [INF] Executed DbCommand (46ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.discriminator, a.owner_id, a.username, u.id
FROM accounts AS a
INNER JOIN users AS u ON a.owner_id = u.id
WHERE a.username = @__username_0
LIMIT 1
2023-04-25 23:40:28.723 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:28.734 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:28.739 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:40:28.796 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:40:28.810 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:40:28.955 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-04-25 23:40:28.996 +03:00 [INF] Executed DbCommand (18ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:40:29.424 +03:00 [INF] Executed action method Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1082.6247ms.
2023-04-25 23:40:29.463 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tokens.Responses.JwtTokenResponse'.
2023-04-25 23:40:29.795 +03:00 [INF] Executed action Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API) in 1536.8342ms
2023-04-25 23:40:29.802 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API)'
2023-04-25 23:40:29.819 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/auth?username=sprw1488 application/json;+charset=utf-8 2 - 200 593 application/json;+charset=utf-8 1830.0189ms
2023-04-25 23:40:30.835 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:30.845 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:30.849 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:40:30.858 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:40:30.873 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:40:32.310 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/auth?username=sprw1488 application/json;+charset=utf-8 2
2023-04-25 23:40:32.319 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API)'
2023-04-25 23:40:32.324 +03:00 [INF] Route matched with {action = "SignInTelegram", controller = "Authorization"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SignInTelegram(System.String) on controller Nude.API.Controllers.AuthorizationController (Nude.API).
2023-04-25 23:40:32.338 +03:00 [INF] Executing action method Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API) - Validation state: "Valid"
2023-04-25 23:40:32.347 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:32.366 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.discriminator, a.owner_id, a.username, u.id
FROM accounts AS a
INNER JOIN users AS u ON a.owner_id = u.id
WHERE a.username = @__username_0
LIMIT 1
2023-04-25 23:40:32.390 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:40:32.411 +03:00 [INF] Executed action method Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 64.7872ms.
2023-04-25 23:40:32.420 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tokens.Responses.JwtTokenResponse'.
2023-04-25 23:40:32.428 +03:00 [INF] Executed action Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API) in 92.1469ms
2023-04-25 23:40:32.434 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API)'
2023-04-25 23:40:32.441 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/auth?username=sprw1488 application/json;+charset=utf-8 2 - 200 593 application/json;+charset=utf-8 131.9472ms
2023-04-25 23:40:32.892 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:32.912 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:32.916 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:40:32.931 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:40:32.953 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:40:34.981 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:34.991 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:35.001 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:40:35.025 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:40:35.040 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:40:35.902 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - -
2023-04-25 23:40:35.911 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-25 23:40:35.929 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-25 23:40:35.963 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-25 23:40:35.977 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:36.028 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__format_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT m.id
FROM mangas AS m
WHERE EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_0))
2023-04-25 23:40:36.050 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.GetRandom (Nude.API) in 111.458ms
2023-04-25 23:40:36.058 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-25 23:40:36.085 +03:00 [ERR] Connection id "0HMQ5PL6SNP8Q", Request id "0HMQ5PL6SNP8Q:00000002": An unhandled exception was thrown by the application.
System.InvalidOperationException: Sequence contains no elements
   at System.Linq.ThrowHelper.ThrowNoElementsException()
   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)
   at Nude.API.Services.Mangas.MangaService.GetRandomAsync(Nullable`1 format) in C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\Services\Mangas\MangaService.cs:line 132
   at Nude.API.Controllers.MangaController.GetRandom(Nullable`1 format) in C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\Controllers\MangaController.cs:line 41
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Nude.API.Infrastructure.Middlewares.ErrorsMiddleware.InvokeAsync(HttpContext context) in C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API.Infrastructure\Middlewares\ErrorsMiddleware.cs:line 21
   at Nude.API.Infrastructure.Middlewares.ErrorsMiddleware.InvokeAsync(HttpContext context) in C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API.Infrastructure\Middlewares\ErrorsMiddleware.cs:line 48
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2023-04-25 23:40:36.173 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - - - 500 0 - 271.3865ms
2023-04-25 23:40:37.066 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:37.076 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:37.079 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:40:37.093 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:40:37.118 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:40:39.137 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:39.147 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:39.150 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:40:39.161 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:40:39.180 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:40:41.205 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:41.216 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:41.220 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:40:41.230 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:40:41.255 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:40:43.277 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:43.288 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:43.292 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:40:43.305 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:40:43.325 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:40:45.350 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:45.359 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:45.362 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:40:45.378 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:40:45.393 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:40:47.414 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:47.423 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:47.426 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:40:47.440 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:40:47.459 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:40:49.478 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:49.490 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:49.494 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:40:49.506 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:40:49.526 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:40:51.549 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:51.560 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:51.563 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:40:51.574 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:40:51.595 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:40:53.616 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:53.624 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:53.627 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:40:53.639 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:40:53.655 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:40:55.678 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:55.687 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:55.690 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:40:55.706 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:40:55.724 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:40:57.743 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:57.752 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:57.755 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:40:57.767 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:40:57.784 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:40:59.808 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:59.820 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:40:59.824 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:40:59.835 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:40:59.856 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:01.884 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:01.894 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:01.897 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:01.910 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:01.927 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:03.945 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:03.952 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:03.958 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:03.995 +03:00 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:04.061 +03:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:04.653 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/18940--asdadvhu-nuresuke-tewi-chan-to-tooriame-no-jouji.html&format=Telegraph - -
2023-04-25 23:41:04.658 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-25 23:41:04.671 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-25 23:41:04.684 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.FindBy (Nude.API) - Validation state: "Valid"
2023-04-25 23:41:04.695 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:04.865 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-04-25 23:41:04.913 +03:00 [INF] Executed DbCommand (23ms) [Parameters=[@__url_0='?', @__format_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f0.id, f0.discriminator, f0.image_collection_id, f0.manga_entry_id, f0.type, f0.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE (e.source_url = @__url_0) AND EXISTS (
        SELECT 1
        FROM formats AS f
        WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_1))
    LIMIT 1
) AS t
LEFT JOIN formats AS f0 ON t.id = f0.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f0.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-25 23:41:04.933 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.FindBy (Nude.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 243.2493ms.
2023-04-25 23:41:04.940 +03:00 [INF] Executing ObjectResult, writing value of type 'Nude.API.Contracts.Errors.Responses.ErrorResponse'.
2023-04-25 23:41:04.977 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 296.1615ms
2023-04-25 23:41:04.986 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-25 23:41:04.995 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/18940--asdadvhu-nuresuke-tewi-chan-to-tooriame-no-jouji.html&format=Telegraph - - - 404 175 application/json;+charset=utf-8 341.4963ms
2023-04-25 23:41:05.016 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 105
2023-04-25 23:41:05.205 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-25 23:41:05.217 +03:00 [INF] Route matched with {action = "Create", controller = "ContentTicket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Nude.API.Contracts.Tickets.Requests.ContentTicketRequest) on controller Nude.API.Controllers.ContentTicketController (Nude.API).
2023-04-25 23:41:05.340 +03:00 [INF] Executing action method Nude.API.Controllers.ContentTicketController.Create (Nude.API) - Validation state: "Valid"
2023-04-25 23:41:05.351 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:05.370 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:41:05.394 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:41:05.439 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id, u.id
FROM content_tickets AS c
INNER JOIN users AS u ON c.user_id = u.id
WHERE u.id = @__userId_0
2023-04-25 23:41:05.960 +03:00 [INF] Executed DbCommand (18ms) [Parameters=[@p0='?', @p1='?', @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO content_tickets (content_key, content_url, user_id)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-25 23:41:06.079 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:06.115 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:06.119 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:06.130 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:06.145 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:06.149 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ticket_ContentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
WHERE c.content_key = @__ticket_ContentKey_0
2023-04-25 23:41:06.159 +03:00 [INF] Executed action method Nude.API.Controllers.ContentTicketController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 813.7527ms.
2023-04-25 23:41:06.175 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tickets.Responses.ContentTicketResponse'.
2023-04-25 23:41:06.187 +03:00 [INF] Executed action Nude.API.Controllers.ContentTicketController.Create (Nude.API) in 961.4724ms
2023-04-25 23:41:06.209 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-25 23:41:06.217 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 105 - 200 214 application/json;+charset=utf-8 1201.2835ms
2023-04-25 23:41:06.223 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-04-25 23:41:06.250 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-25 23:41:06.272 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-25 23:41:06.312 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:41:06.319 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:41:07.043 +03:00 [INF] Received HTTP response headers after 707.0455ms - 200
2023-04-25 23:41:07.050 +03:00 [INF] End processing HTTP request after 742.1172ms - 200
2023-04-25 23:41:07.065 +03:00 [INF] Callback response status '"OK"'
2023-04-25 23:41:07.083 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-25 23:41:07.087 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:41:07.091 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:41:07.511 +03:00 [INF] Received HTTP response headers after 416.5551ms - 200
2023-04-25 23:41:07.517 +03:00 [INF] End processing HTTP request after 429.8031ms - 200
2023-04-25 23:41:07.534 +03:00 [INF] Callback response status '"OK"'
2023-04-25 23:41:07.590 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM content_tickets
WHERE id = @p0;
2023-04-25 23:41:09.634 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:09.643 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:09.646 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:09.659 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:09.678 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:11.710 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:11.728 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:11.730 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:11.743 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:11.764 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:13.782 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:13.793 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:13.796 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:13.811 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:13.831 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:15.849 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:15.862 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:15.866 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:15.881 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:15.924 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:17.944 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:17.954 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:17.958 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:17.973 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:17.995 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:20.013 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:20.024 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:20.036 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:20.059 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:20.106 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:22.127 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:22.136 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:22.139 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:22.152 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:22.176 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:23.195 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/18940--asdadvhu-nuresuke-tewi-chan-to-tooriame-no-jouji.html&format=Telegraph - -
2023-04-25 23:41:23.200 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-25 23:41:23.205 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-25 23:41:23.222 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.FindBy (Nude.API) - Validation state: "Valid"
2023-04-25 23:41:23.231 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:23.254 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__url_0='?', @__format_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f0.id, f0.discriminator, f0.image_collection_id, f0.manga_entry_id, f0.type, f0.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE (e.source_url = @__url_0) AND EXISTS (
        SELECT 1
        FROM formats AS f
        WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_1))
    LIMIT 1
) AS t
LEFT JOIN formats AS f0 ON t.id = f0.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f0.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-25 23:41:23.266 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.FindBy (Nude.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 36.7269ms.
2023-04-25 23:41:23.278 +03:00 [INF] Executing ObjectResult, writing value of type 'Nude.API.Contracts.Errors.Responses.ErrorResponse'.
2023-04-25 23:41:23.285 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 64.9347ms
2023-04-25 23:41:23.294 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 105
2023-04-25 23:41:23.297 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-25 23:41:23.302 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-25 23:41:23.305 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/18940--asdadvhu-nuresuke-tewi-chan-to-tooriame-no-jouji.html&format=Telegraph - - - 404 175 application/json;+charset=utf-8 109.6647ms
2023-04-25 23:41:23.313 +03:00 [INF] Route matched with {action = "Create", controller = "ContentTicket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Nude.API.Contracts.Tickets.Requests.ContentTicketRequest) on controller Nude.API.Controllers.ContentTicketController (Nude.API).
2023-04-25 23:41:23.331 +03:00 [INF] Executing action method Nude.API.Controllers.ContentTicketController.Create (Nude.API) - Validation state: "Valid"
2023-04-25 23:41:23.339 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:23.354 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:41:23.374 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:41:23.389 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id, u.id
FROM content_tickets AS c
INNER JOIN users AS u ON c.user_id = u.id
WHERE u.id = @__userId_0
2023-04-25 23:41:23.409 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?', @p1='?', @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO content_tickets (content_key, content_url, user_id)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-25 23:41:23.437 +03:00 [INF] Executed action method Nude.API.Controllers.ContentTicketController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 98.1578ms.
2023-04-25 23:41:23.446 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tickets.Responses.ContentTicketResponse'.
2023-04-25 23:41:23.456 +03:00 [INF] Executed action Nude.API.Controllers.ContentTicketController.Create (Nude.API) in 127.4349ms
2023-04-25 23:41:23.464 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-25 23:41:23.469 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 105 - 200 214 application/json;+charset=utf-8 174.7523ms
2023-04-25 23:41:24.189 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:24.201 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:24.205 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:24.217 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:24.228 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ticket_ContentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
WHERE c.content_key = @__ticket_ContentKey_0
2023-04-25 23:41:24.248 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:24.262 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-25 23:41:24.280 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-25 23:41:24.293 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:41:24.300 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:41:24.487 +03:00 [INF] Received HTTP response headers after 182.1209ms - 200
2023-04-25 23:41:24.492 +03:00 [INF] End processing HTTP request after 199.1398ms - 200
2023-04-25 23:41:24.497 +03:00 [INF] Callback response status '"OK"'
2023-04-25 23:41:24.507 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-25 23:41:24.512 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:41:24.518 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:41:24.818 +03:00 [INF] Received HTTP response headers after 291.6884ms - 200
2023-04-25 23:41:24.823 +03:00 [INF] End processing HTTP request after 310.7415ms - 200
2023-04-25 23:41:24.826 +03:00 [INF] Callback response status '"OK"'
2023-04-25 23:41:24.838 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM content_tickets
WHERE id = @p0;
2023-04-25 23:41:26.870 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:26.883 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:26.883 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:26.903 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:26.926 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:28.959 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:28.968 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:28.972 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:28.986 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:29.005 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:31.017 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:31.034 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:31.040 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:31.056 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:31.082 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:33.096 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:33.107 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:33.110 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:33.122 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:33.142 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:35.170 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:35.179 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:35.182 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:35.193 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:35.213 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:37.246 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:37.256 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:37.259 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:37.270 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:37.294 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:39.309 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:39.319 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:39.322 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:39.334 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:39.357 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:41.370 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:41.380 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:41.383 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:41.398 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:41.431 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:43.453 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:43.462 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:43.465 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:43.481 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:43.498 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:45.536 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:45.548 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:45.556 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:45.571 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:45.588 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:47.606 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:47.616 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:47.619 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:47.628 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:47.643 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:49.657 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:49.669 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:49.672 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:49.684 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:49.707 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:51.725 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:51.734 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:51.737 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:51.753 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:51.773 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:53.791 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:53.802 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:53.809 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:53.825 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:53.854 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:55.880 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:55.898 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:55.899 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:55.910 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:55.926 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:41:57.955 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:57.964 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:41:57.968 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:41:57.988 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:41:57.999 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:00.011 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:00.082 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:00.086 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:00.098 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:00.114 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:02.143 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:02.154 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:02.158 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:02.169 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:02.196 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:04.221 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:04.235 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:04.238 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:04.251 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:04.279 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:06.298 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:06.309 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:06.312 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:06.323 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:06.345 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:08.372 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:08.382 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:08.387 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:08.403 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:08.422 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:10.441 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:10.450 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:10.453 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:10.470 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:10.489 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:10.591 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/20567--simon-cyberpunk--kiberpank.html&format=Telegraph - -
2023-04-25 23:42:10.595 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-25 23:42:10.606 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-25 23:42:10.619 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.FindBy (Nude.API) - Validation state: "Valid"
2023-04-25 23:42:10.624 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:10.645 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__url_0='?', @__format_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f0.id, f0.discriminator, f0.image_collection_id, f0.manga_entry_id, f0.type, f0.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE (e.source_url = @__url_0) AND EXISTS (
        SELECT 1
        FROM formats AS f
        WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_1))
    LIMIT 1
) AS t
LEFT JOIN formats AS f0 ON t.id = f0.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f0.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-25 23:42:10.665 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.FindBy (Nude.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 41.3301ms.
2023-04-25 23:42:10.672 +03:00 [INF] Executing ObjectResult, writing value of type 'Nude.API.Contracts.Errors.Responses.ErrorResponse'.
2023-04-25 23:42:10.681 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 63.215ms
2023-04-25 23:42:10.684 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-25 23:42:10.688 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/20567--simon-cyberpunk--kiberpank.html&format=Telegraph - - - 404 175 application/json;+charset=utf-8 96.7309ms
2023-04-25 23:42:10.691 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 83
2023-04-25 23:42:10.705 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-25 23:42:10.714 +03:00 [INF] Route matched with {action = "Create", controller = "ContentTicket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Nude.API.Contracts.Tickets.Requests.ContentTicketRequest) on controller Nude.API.Controllers.ContentTicketController (Nude.API).
2023-04-25 23:42:10.731 +03:00 [INF] Executing action method Nude.API.Controllers.ContentTicketController.Create (Nude.API) - Validation state: "Valid"
2023-04-25 23:42:10.737 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:10.754 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:42:10.778 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:42:10.795 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id, u.id
FROM content_tickets AS c
INNER JOIN users AS u ON c.user_id = u.id
WHERE u.id = @__userId_0
2023-04-25 23:42:10.821 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?', @p1='?', @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO content_tickets (content_key, content_url, user_id)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-25 23:42:10.846 +03:00 [INF] Executed action method Nude.API.Controllers.ContentTicketController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 109.3691ms.
2023-04-25 23:42:10.860 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tickets.Responses.ContentTicketResponse'.
2023-04-25 23:42:10.869 +03:00 [INF] Executed action Nude.API.Controllers.ContentTicketController.Create (Nude.API) in 146.6734ms
2023-04-25 23:42:10.874 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-25 23:42:10.880 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 83 - 200 192 application/json;+charset=utf-8 189.0456ms
2023-04-25 23:42:12.511 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:12.528 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:12.528 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:12.543 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ticket_ContentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
WHERE c.content_key = @__ticket_ContentKey_0
2023-04-25 23:42:12.559 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:12.575 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-25 23:42:12.584 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:12.593 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-25 23:42:12.619 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:42:12.624 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:42:13.016 +03:00 [INF] Received HTTP response headers after 387.6851ms - 200
2023-04-25 23:42:13.026 +03:00 [INF] End processing HTTP request after 407.0433ms - 200
2023-04-25 23:42:13.032 +03:00 [INF] Callback response status '"OK"'
2023-04-25 23:42:13.041 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-25 23:42:13.044 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:42:13.048 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:42:13.473 +03:00 [INF] Received HTTP response headers after 410.7282ms - 200
2023-04-25 23:42:13.476 +03:00 [INF] End processing HTTP request after 431.5775ms - 200
2023-04-25 23:42:13.480 +03:00 [INF] Callback response status '"OK"'
2023-04-25 23:42:13.492 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM content_tickets
WHERE id = @p0;
2023-04-25 23:42:15.511 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:15.520 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:15.522 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:15.533 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:15.559 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:17.581 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:17.595 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:17.598 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:17.611 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:17.634 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:19.658 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:19.671 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:19.675 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:19.687 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:19.708 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:21.738 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:21.749 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:21.752 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:21.769 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:21.787 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:23.805 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:23.823 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:23.827 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:23.843 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:23.862 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:25.893 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:25.908 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:25.913 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:25.932 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:25.947 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:27.966 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:27.979 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:27.982 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:27.993 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:28.015 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:30.039 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:30.061 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:30.063 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:30.102 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:30.121 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:32.141 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:32.152 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:32.156 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:32.174 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:32.191 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:34.213 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:34.223 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:34.226 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:34.247 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:34.261 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:36.284 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:36.297 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:36.300 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:36.320 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:36.345 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:38.368 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:38.377 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:38.380 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:38.396 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:38.412 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:40.435 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:40.445 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:40.448 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:40.464 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:40.481 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:42.504 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:42.517 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:42.521 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:42.534 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:42.557 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:44.580 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:44.593 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:44.597 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:44.608 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:44.630 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:46.654 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:46.663 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:46.666 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:46.682 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:46.700 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:48.715 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:48.724 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:48.728 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:48.744 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:48.760 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:50.778 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:50.796 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:50.799 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:50.813 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:50.839 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:52.857 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:52.870 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:52.875 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:52.888 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:52.913 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:54.942 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:54.958 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:54.961 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:54.973 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:55.003 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:57.030 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:57.040 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:57.043 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:57.083 +03:00 [INF] Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:57.113 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:42:59.143 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:59.165 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:42:59.168 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:42:59.185 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:42:59.213 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:43:01.239 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:01.254 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:01.256 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:43:01.268 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:43:01.289 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:43:03.307 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:03.317 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:03.320 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:43:03.337 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:43:03.354 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:43:05.367 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:05.383 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:05.386 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:43:05.397 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:43:05.421 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:43:07.434 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:07.443 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:07.446 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:43:07.464 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:43:07.480 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:43:09.504 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:09.513 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:09.517 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:43:09.533 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:43:09.549 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:43:11.568 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:11.577 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:11.580 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:43:11.591 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:43:11.613 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:43:13.632 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:13.643 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:13.647 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:43:13.667 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:43:13.681 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:43:15.702 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:15.714 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:15.717 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:43:15.727 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:43:15.747 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:43:17.763 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:17.771 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:17.774 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:43:17.793 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:43:17.806 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:43:19.830 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:19.839 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:19.843 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:43:19.863 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:43:19.878 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:43:21.896 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:21.906 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:21.908 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:43:21.929 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:43:21.942 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:43:23.961 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:23.977 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:23.980 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:43:23.994 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:43:24.008 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:43:26.029 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:26.038 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:26.041 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:43:26.059 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:43:26.072 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:43:28.092 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:28.103 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:28.107 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:43:28.129 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:43:28.146 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:43:30.170 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:30.183 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:30.189 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:43:30.205 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:43:30.218 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:43:32.239 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:32.252 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:32.257 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:43:32.268 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:43:32.288 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:43:32.927 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/20567--simon-cyberpunk--kiberpank.html&format=Telegraph - -
2023-04-25 23:43:32.932 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-25 23:43:32.946 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-25 23:43:32.953 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.FindBy (Nude.API) - Validation state: "Valid"
2023-04-25 23:43:32.958 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:32.975 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__url_0='?', @__format_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f0.id, f0.discriminator, f0.image_collection_id, f0.manga_entry_id, f0.type, f0.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE (e.source_url = @__url_0) AND EXISTS (
        SELECT 1
        FROM formats AS f
        WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_1))
    LIMIT 1
) AS t
LEFT JOIN formats AS f0 ON t.id = f0.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f0.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-25 23:43:32.990 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.FindBy (Nude.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 32.243ms.
2023-04-25 23:43:32.995 +03:00 [INF] Executing ObjectResult, writing value of type 'Nude.API.Contracts.Errors.Responses.ErrorResponse'.
2023-04-25 23:43:33.001 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 49.108ms
2023-04-25 23:43:33.005 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-25 23:43:33.008 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/20567--simon-cyberpunk--kiberpank.html&format=Telegraph - - - 404 175 application/json;+charset=utf-8 81.4634ms
2023-04-25 23:43:33.010 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 83
2023-04-25 23:43:33.014 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-25 23:43:33.019 +03:00 [INF] Route matched with {action = "Create", controller = "ContentTicket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Nude.API.Contracts.Tickets.Requests.ContentTicketRequest) on controller Nude.API.Controllers.ContentTicketController (Nude.API).
2023-04-25 23:43:33.037 +03:00 [INF] Executing action method Nude.API.Controllers.ContentTicketController.Create (Nude.API) - Validation state: "Valid"
2023-04-25 23:43:33.043 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:33.057 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:43:33.076 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:43:33.089 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id, u.id
FROM content_tickets AS c
INNER JOIN users AS u ON c.user_id = u.id
WHERE u.id = @__userId_0
2023-04-25 23:43:33.107 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?', @p1='?', @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO content_tickets (content_key, content_url, user_id)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-25 23:43:33.124 +03:00 [INF] Executed action method Nude.API.Controllers.ContentTicketController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 81.4015ms.
2023-04-25 23:43:33.130 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tickets.Responses.ContentTicketResponse'.
2023-04-25 23:43:33.136 +03:00 [INF] Executed action Nude.API.Controllers.ContentTicketController.Create (Nude.API) in 100.676ms
2023-04-25 23:43:33.145 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-25 23:43:33.150 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 83 - 200 192 application/json;+charset=utf-8 141.5098ms
2023-04-25 23:43:34.305 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:34.314 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:34.317 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:43:34.333 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:43:34.340 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ticket_ContentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
WHERE c.content_key = @__ticket_ContentKey_0
2023-04-25 23:43:34.347 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:43:34.353 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-25 23:43:34.360 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-25 23:43:34.370 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:43:34.376 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:43:35.350 +03:00 [INF] Received HTTP response headers after 969.0855ms - 200
2023-04-25 23:43:35.353 +03:00 [INF] End processing HTTP request after 982.8433ms - 200
2023-04-25 23:43:35.355 +03:00 [INF] Callback response status '"OK"'
2023-04-25 23:43:35.359 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-25 23:43:35.364 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:43:35.371 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:43:35.785 +03:00 [INF] Received HTTP response headers after 408.0437ms - 200
2023-04-25 23:43:35.788 +03:00 [INF] End processing HTTP request after 424.5581ms - 200
2023-04-25 23:43:35.791 +03:00 [INF] Callback response status '"OK"'
2023-04-25 23:43:35.800 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM content_tickets
WHERE id = @p0;
2023-04-25 23:43:37.823 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:37.832 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:37.835 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:43:37.851 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:43:37.863 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:43:39.889 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:39.901 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:39.905 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:43:39.915 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:43:39.934 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:43:40.305 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/20567--simon-cyberpunk--kiberpank.html&format=Telegraph - -
2023-04-25 23:43:40.310 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-25 23:43:40.319 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-25 23:43:40.326 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.FindBy (Nude.API) - Validation state: "Valid"
2023-04-25 23:43:40.332 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:40.348 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__url_0='?', @__format_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f0.id, f0.discriminator, f0.image_collection_id, f0.manga_entry_id, f0.type, f0.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE (e.source_url = @__url_0) AND EXISTS (
        SELECT 1
        FROM formats AS f
        WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_1))
    LIMIT 1
) AS t
LEFT JOIN formats AS f0 ON t.id = f0.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f0.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-25 23:43:40.356 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.FindBy (Nude.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 24.7401ms.
2023-04-25 23:43:40.364 +03:00 [INF] Executing ObjectResult, writing value of type 'Nude.API.Contracts.Errors.Responses.ErrorResponse'.
2023-04-25 23:43:40.371 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 46.0009ms
2023-04-25 23:43:40.378 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 83
2023-04-25 23:43:40.385 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-25 23:43:40.389 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-25 23:43:40.393 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/20567--simon-cyberpunk--kiberpank.html&format=Telegraph - - - 404 175 application/json;+charset=utf-8 87.9426ms
2023-04-25 23:43:40.398 +03:00 [INF] Route matched with {action = "Create", controller = "ContentTicket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Nude.API.Contracts.Tickets.Requests.ContentTicketRequest) on controller Nude.API.Controllers.ContentTicketController (Nude.API).
2023-04-25 23:43:40.416 +03:00 [INF] Executing action method Nude.API.Controllers.ContentTicketController.Create (Nude.API) - Validation state: "Valid"
2023-04-25 23:43:40.422 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:40.436 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:43:40.456 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:43:40.469 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id, u.id
FROM content_tickets AS c
INNER JOIN users AS u ON c.user_id = u.id
WHERE u.id = @__userId_0
2023-04-25 23:43:40.483 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?', @p1='?', @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO content_tickets (content_key, content_url, user_id)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-25 23:43:40.515 +03:00 [INF] Executed action method Nude.API.Controllers.ContentTicketController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 94.2052ms.
2023-04-25 23:43:40.522 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tickets.Responses.ContentTicketResponse'.
2023-04-25 23:43:40.527 +03:00 [INF] Executed action Nude.API.Controllers.ContentTicketController.Create (Nude.API) in 112.2727ms
2023-04-25 23:43:40.539 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-25 23:43:40.544 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 83 - 200 192 application/json;+charset=utf-8 165.1420ms
2023-04-25 23:43:41.963 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:41.976 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:41.979 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:43:41.990 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:43:41.997 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ticket_ContentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
WHERE c.content_key = @__ticket_ContentKey_0
2023-04-25 23:43:42.010 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:43:42.021 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-25 23:43:42.030 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-25 23:43:42.038 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:43:42.053 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:43:42.309 +03:00 [INF] Received HTTP response headers after 249.7384ms - 200
2023-04-25 23:43:42.314 +03:00 [INF] End processing HTTP request after 275.7721ms - 200
2023-04-25 23:43:42.319 +03:00 [INF] Callback response status '"OK"'
2023-04-25 23:43:42.322 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-25 23:43:42.327 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:43:42.331 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:43:42.750 +03:00 [INF] Received HTTP response headers after 407.9509ms - 200
2023-04-25 23:43:42.754 +03:00 [INF] End processing HTTP request after 427.374ms - 200
2023-04-25 23:43:42.758 +03:00 [INF] Callback response status '"OK"'
2023-04-25 23:43:42.768 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM content_tickets
WHERE id = @p0;
2023-04-25 23:43:44.794 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:44.807 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:44.811 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:43:44.821 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:43:44.837 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:43:46.851 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:46.863 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:46.866 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:43:46.877 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:43:46.899 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:43:48.910 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:48.919 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:43:48.922 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:43:48.938 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:43:48.952 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:43:50.242 +03:00 [INF] Application is shutting down...
2023-04-25 23:44:14.794 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:15.658 +03:00 [INF] Executed DbCommand (96ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-04-25 23:44:15.739 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-04-25 23:44:15.798 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT migration_id, product_version
FROM "__EFMigrationsHistory"
ORDER BY migration_id;
2023-04-25 23:44:15.868 +03:00 [INF] No migrations were applied. The database is already up to date.
2023-04-25 23:44:16.259 +03:00 [INF] User profile is available. Using 'C:\Users\ilyao\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-04-25 23:44:16.446 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:16.961 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:44:17.030 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:17.283 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:44:17.313 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:44:17.433 +03:00 [INF] Now listening on: http://localhost:3001
2023-04-25 23:44:17.441 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-04-25 23:44:17.445 +03:00 [INF] Hosting environment: Production
2023-04-25 23:44:17.449 +03:00 [INF] Content root path: C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\
2023-04-25 23:44:19.359 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:19.391 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:19.391 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:44:19.450 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:44:19.466 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:44:21.496 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:21.511 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:21.512 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:44:21.529 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:44:21.552 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:44:23.578 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:23.591 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:44:23.592 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:23.613 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:44:23.628 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:44:25.648 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:25.660 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:25.660 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:44:25.674 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:44:25.696 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:44:27.725 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:27.742 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:44:27.742 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:27.770 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:44:27.802 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:44:29.824 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:29.876 +03:00 [INF] Executed DbCommand (31ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:44:29.877 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:29.902 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:44:29.917 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:44:31.942 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:31.956 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:44:31.957 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:31.982 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:44:31.999 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:44:34.019 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:34.037 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:44:34.043 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:34.061 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:44:34.077 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:44:36.096 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:36.108 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:44:36.110 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:36.130 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:44:36.155 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:44:38.178 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:38.210 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:44:38.211 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:38.277 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:44:38.299 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:44:40.332 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:40.365 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:44:40.366 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:40.506 +03:00 [INF] Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:44:40.564 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:44:42.594 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:42.611 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:44:42.612 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:42.636 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:44:42.658 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:44:44.476 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json 100
2023-04-25 23:44:44.702 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:44.717 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:44.718 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:44:44.752 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:44:44.780 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:44:45.204 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-25 23:44:45.245 +03:00 [INF] Route matched with {action = "Create", controller = "ContentTicket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Nude.API.Contracts.Tickets.Requests.ContentTicketRequest) on controller Nude.API.Controllers.ContentTicketController (Nude.API).
2023-04-25 23:44:45.509 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:45.669 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-04-25 23:44:45.721 +03:00 [INF] Executed DbCommand (23ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:44:46.192 +03:00 [INF] Executed action Nude.API.Controllers.ContentTicketController.Create (Nude.API) in 926.9607ms
2023-04-25 23:44:46.201 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-25 23:44:46.463 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json 100 - 500 - application/json;+charset=utf-8 1992.0703ms
2023-04-25 23:44:46.809 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:46.820 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:44:46.821 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:46.850 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:44:46.865 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:44:48.881 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:48.893 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:44:48.893 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:48.916 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:44:48.931 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:44:50.945 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:50.962 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:44:50.963 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:50.990 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:44:51.009 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:44:53.027 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:53.040 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:44:53.047 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:53.074 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:44:53.106 +03:00 [INF] Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:44:55.128 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:55.143 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:44:55.144 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:55.171 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:44:55.186 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:44:57.214 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:57.228 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:44:57.229 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:57.255 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:44:57.273 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:44:59.293 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:59.309 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:44:59.311 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:59.335 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:44:59.351 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:44:59.633 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/users/me/tickets - -
2023-04-25 23:44:59.642 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.UserController.GetUserActiveTickets (Nude.API)'
2023-04-25 23:44:59.654 +03:00 [INF] Route matched with {action = "GetUserActiveTickets", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserActiveTickets() on controller Nude.API.Controllers.UserController (Nude.API).
2023-04-25 23:44:59.668 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:44:59.685 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:44:59.842 +03:00 [INF] Executed action Nude.API.Controllers.UserController.GetUserActiveTickets (Nude.API) in 178.304ms
2023-04-25 23:44:59.849 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.UserController.GetUserActiveTickets (Nude.API)'
2023-04-25 23:44:59.981 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/users/me/tickets - - - 500 - application/json;+charset=utf-8 347.7949ms
2023-04-25 23:45:01.379 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:01.395 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:01.395 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:01.421 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:01.442 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:03.462 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:03.477 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:03.478 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:03.491 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:03.511 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:05.540 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:05.554 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:05.555 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:05.582 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:05.599 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:06.309 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/users/me/tickets - -
2023-04-25 23:45:06.317 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.UserController.GetUserActiveTickets (Nude.API)'
2023-04-25 23:45:06.322 +03:00 [INF] Route matched with {action = "GetUserActiveTickets", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserActiveTickets() on controller Nude.API.Controllers.UserController (Nude.API).
2023-04-25 23:45:06.335 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:06.355 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:45:06.504 +03:00 [INF] Executed action Nude.API.Controllers.UserController.GetUserActiveTickets (Nude.API) in 171.5427ms
2023-04-25 23:45:06.512 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.UserController.GetUserActiveTickets (Nude.API)'
2023-04-25 23:45:06.632 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/users/me/tickets - - - 500 - application/json;+charset=utf-8 322.0541ms
2023-04-25 23:45:07.622 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:07.638 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:07.640 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:07.663 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:07.685 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:09.714 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:09.727 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:09.728 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:09.749 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:09.764 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:11.781 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:11.796 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:11.797 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:11.819 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:11.834 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:13.848 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:13.861 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:13.863 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:13.882 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:13.901 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:15.929 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:15.943 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:15.944 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:15.966 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:15.983 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:18.013 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:18.029 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:18.031 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:18.052 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:18.072 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:20.097 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:20.110 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:20.110 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:20.135 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:20.152 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:21.189 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/auth?username=sprw1488 - 0
2023-04-25 23:45:21.194 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API)'
2023-04-25 23:45:21.205 +03:00 [INF] Route matched with {action = "SignInTelegram", controller = "Authorization"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SignInTelegram(System.String) on controller Nude.API.Controllers.AuthorizationController (Nude.API).
2023-04-25 23:45:21.242 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:21.315 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.discriminator, a.owner_id, a.username, u.id
FROM accounts AS a
INNER JOIN users AS u ON a.owner_id = u.id
WHERE a.username = @__username_0
LIMIT 1
2023-04-25 23:45:21.501 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:45:21.634 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tokens.Responses.JwtTokenResponse'.
2023-04-25 23:45:21.677 +03:00 [INF] Executed action Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API) in 463.6296ms
2023-04-25 23:45:21.686 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API)'
2023-04-25 23:45:21.694 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/auth?username=sprw1488 - 0 - 200 593 application/json;+charset=utf-8 505.1130ms
2023-04-25 23:45:22.189 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:22.202 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:22.202 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:22.223 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:22.242 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:24.261 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:24.281 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:24.282 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:24.313 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:24.331 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:26.349 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:26.365 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:26.367 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:26.393 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:26.412 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:28.449 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:28.464 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:28.466 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:28.492 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:28.509 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:30.533 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:30.560 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:30.561 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:30.585 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:30.603 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:32.619 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:32.640 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:32.641 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:32.663 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:32.681 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:34.704 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:34.721 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:34.722 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:34.744 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:34.763 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:36.784 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:36.796 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:36.798 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:36.823 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:36.840 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:38.868 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:38.886 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:38.888 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:38.910 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:38.928 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:38.980 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json 100
2023-04-25 23:45:38.985 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-25 23:45:38.989 +03:00 [INF] Route matched with {action = "Create", controller = "ContentTicket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Nude.API.Contracts.Tickets.Requests.ContentTicketRequest) on controller Nude.API.Controllers.ContentTicketController (Nude.API).
2023-04-25 23:45:39.004 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:39.022 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:45:39.050 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:45:39.099 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id, u.id
FROM content_tickets AS c
INNER JOIN users AS u ON c.user_id = u.id
WHERE u.id = @__userId_0
2023-04-25 23:45:39.437 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?', @p1='?', @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO content_tickets (content_key, content_url, user_id)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-25 23:45:39.568 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tickets.Responses.ContentTicketResponse'.
2023-04-25 23:45:39.577 +03:00 [INF] Executed action Nude.API.Controllers.ContentTicketController.Create (Nude.API) in 576.0083ms
2023-04-25 23:45:39.586 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-25 23:45:39.591 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json 100 - 200 207 application/json;+charset=utf-8 610.8148ms
2023-04-25 23:45:40.973 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:40.988 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:40.988 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:41.008 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ticket_ContentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
WHERE c.content_key = @__ticket_ContentKey_0
2023-04-25 23:45:41.015 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:41.038 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:41.166 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-04-25 23:45:41.192 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-25 23:45:41.217 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-25 23:45:41.256 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:45:41.267 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:45:43.542 +03:00 [WRN] Подключение не установлено, т.к. конечный компьютер отверг запрос на подключение. (127.0.0.1:5000)
2023-04-25 23:45:43.547 +03:00 [INF] Callback response status 'null'
2023-04-25 23:45:43.944 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-25 23:45:43.949 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:45:43.954 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:45:46.068 +03:00 [WRN] Подключение не установлено, т.к. конечный компьютер отверг запрос на подключение. (127.0.0.1:5000)
2023-04-25 23:45:46.072 +03:00 [INF] Callback response status 'null'
2023-04-25 23:45:46.111 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM content_tickets
WHERE id = @p0;
2023-04-25 23:45:48.156 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:48.177 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:48.177 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:48.200 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:48.223 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:50.244 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:50.254 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:50.255 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:50.286 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:50.304 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:52.328 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:52.356 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:52.364 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:52.375 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:52.393 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:54.419 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:54.432 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:54.432 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:54.455 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:54.474 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:56.495 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:56.516 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:56.519 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:56.542 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:56.578 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:45:58.608 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:58.623 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:45:58.623 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:45:58.651 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:45:58.669 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:00.701 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:00.719 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:00.720 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:00.744 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:00.775 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:02.821 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:02.835 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:02.836 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:02.858 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:02.875 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:04.901 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:04.914 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:04.915 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:04.934 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:04.949 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:06.963 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:06.977 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:06.977 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:07.002 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:07.018 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:09.042 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:09.054 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:09.054 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:09.082 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:09.097 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:11.117 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:11.133 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:11.134 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:11.156 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:11.173 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:13.196 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:13.212 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:13.214 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:13.237 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:13.260 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:14.632 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/20567--simon-cyberpunk--kiberpank.html&format=Telegraph - -
2023-04-25 23:46:14.637 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-25 23:46:14.652 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-25 23:46:14.672 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:14.718 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-04-25 23:46:14.749 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__url_0='?', @__format_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f0.id, f0.discriminator, f0.image_collection_id, f0.manga_entry_id, f0.type, f0.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE (e.source_url = @__url_0) AND EXISTS (
        SELECT 1
        FROM formats AS f
        WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_1))
    LIMIT 1
) AS t
LEFT JOIN formats AS f0 ON t.id = f0.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f0.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-25 23:46:14.774 +03:00 [INF] Executing ObjectResult, writing value of type 'Nude.API.Contracts.Errors.Responses.ErrorResponse'.
2023-04-25 23:46:14.786 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 121.4967ms
2023-04-25 23:46:14.798 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-25 23:46:14.804 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/20567--simon-cyberpunk--kiberpank.html&format=Telegraph - - - 404 175 application/json;+charset=utf-8 171.8029ms
2023-04-25 23:46:14.849 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 83
2023-04-25 23:46:14.854 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-25 23:46:14.861 +03:00 [INF] Route matched with {action = "Create", controller = "ContentTicket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Nude.API.Contracts.Tickets.Requests.ContentTicketRequest) on controller Nude.API.Controllers.ContentTicketController (Nude.API).
2023-04-25 23:46:14.873 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:14.889 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:46:14.905 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:46:14.920 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id, u.id
FROM content_tickets AS c
INNER JOIN users AS u ON c.user_id = u.id
WHERE u.id = @__userId_0
2023-04-25 23:46:14.938 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?', @p1='?', @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO content_tickets (content_key, content_url, user_id)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-25 23:46:14.967 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tickets.Responses.ContentTicketResponse'.
2023-04-25 23:46:14.972 +03:00 [INF] Executed action Nude.API.Controllers.ContentTicketController.Create (Nude.API) in 104.0076ms
2023-04-25 23:46:14.976 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-25 23:46:14.983 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 83 - 200 192 application/json;+charset=utf-8 133.9131ms
2023-04-25 23:46:15.331 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:15.355 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:15.358 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:15.375 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ticket_ContentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
WHERE c.content_key = @__ticket_ContentKey_0
2023-04-25 23:46:15.393 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:15.407 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-25 23:46:15.417 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:15.431 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-25 23:46:15.450 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:46:15.457 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:46:16.080 +03:00 [INF] Received HTTP response headers after 612.8304ms - 200
2023-04-25 23:46:16.087 +03:00 [INF] End processing HTTP request after 636.6673ms - 200
2023-04-25 23:46:16.111 +03:00 [INF] Callback response status '"OK"'
2023-04-25 23:46:16.355 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-25 23:46:16.361 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:46:16.369 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:46:16.500 +03:00 [INF] Received HTTP response headers after 126.1859ms - 200
2023-04-25 23:46:16.504 +03:00 [INF] End processing HTTP request after 143.9113ms - 200
2023-04-25 23:46:16.519 +03:00 [INF] Callback response status '"OK"'
2023-04-25 23:46:16.534 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM content_tickets
WHERE id = @p0;
2023-04-25 23:46:18.565 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:18.578 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:18.579 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:18.607 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:18.624 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:20.646 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:20.658 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:20.659 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:20.681 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:20.707 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:22.732 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:22.750 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:22.751 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:22.778 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:22.792 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:24.816 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:24.833 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:24.834 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:24.855 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:24.870 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:26.893 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:26.904 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:26.905 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:26.934 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:26.951 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:28.984 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:29.002 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:29.003 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:29.040 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:29.069 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:31.082 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:31.100 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:31.100 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:31.118 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:31.158 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:33.183 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:33.202 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:33.203 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:33.236 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:33.261 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:35.284 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:35.301 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:35.302 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:35.330 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:35.347 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:37.367 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:37.384 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:37.385 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:37.442 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:37.465 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:39.482 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:39.497 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:39.498 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:39.520 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:39.539 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:41.566 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:41.584 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:41.585 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:41.615 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:41.633 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:43.653 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:43.668 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:43.668 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:43.682 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:43.710 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:44.638 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/20567--simon-cyberpunk--kiberpank.html&format=Telegraph - -
2023-04-25 23:46:44.644 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-25 23:46:44.648 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-25 23:46:44.655 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:44.673 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__url_0='?', @__format_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f0.id, f0.discriminator, f0.image_collection_id, f0.manga_entry_id, f0.type, f0.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE (e.source_url = @__url_0) AND EXISTS (
        SELECT 1
        FROM formats AS f
        WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_1))
    LIMIT 1
) AS t
LEFT JOIN formats AS f0 ON t.id = f0.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f0.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-25 23:46:44.694 +03:00 [INF] Executing ObjectResult, writing value of type 'Nude.API.Contracts.Errors.Responses.ErrorResponse'.
2023-04-25 23:46:44.699 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 44.7397ms
2023-04-25 23:46:44.705 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-25 23:46:44.710 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 83
2023-04-25 23:46:44.713 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/20567--simon-cyberpunk--kiberpank.html&format=Telegraph - - - 404 175 application/json;+charset=utf-8 74.2786ms
2023-04-25 23:46:44.717 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-25 23:46:44.733 +03:00 [INF] Route matched with {action = "Create", controller = "ContentTicket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Nude.API.Contracts.Tickets.Requests.ContentTicketRequest) on controller Nude.API.Controllers.ContentTicketController (Nude.API).
2023-04-25 23:46:44.745 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:44.764 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:46:44.780 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:46:44.798 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id, u.id
FROM content_tickets AS c
INNER JOIN users AS u ON c.user_id = u.id
WHERE u.id = @__userId_0
2023-04-25 23:46:44.825 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?', @p1='?', @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO content_tickets (content_key, content_url, user_id)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-25 23:46:44.851 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tickets.Responses.ContentTicketResponse'.
2023-04-25 23:46:44.857 +03:00 [INF] Executed action Nude.API.Controllers.ContentTicketController.Create (Nude.API) in 113.5196ms
2023-04-25 23:46:44.863 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-25 23:46:44.869 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 83 - 200 192 application/json;+charset=utf-8 159.7714ms
2023-04-25 23:46:45.737 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:45.753 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:45.754 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:45.774 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ticket_ContentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
WHERE c.content_key = @__ticket_ContentKey_0
2023-04-25 23:46:45.788 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:45.801 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-25 23:46:45.819 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:45.827 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-25 23:46:45.848 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:46:45.855 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:46:47.250 +03:00 [INF] Received HTTP response headers after 1387.8604ms - 200
2023-04-25 23:46:47.255 +03:00 [INF] End processing HTTP request after 1407.6867ms - 200
2023-04-25 23:46:47.261 +03:00 [INF] Callback response status '"OK"'
2023-04-25 23:46:47.535 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-25 23:46:47.539 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:46:47.543 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:46:48.048 +03:00 [INF] Received HTTP response headers after 500.755ms - 200
2023-04-25 23:46:48.053 +03:00 [INF] End processing HTTP request after 514.4395ms - 200
2023-04-25 23:46:48.059 +03:00 [INF] Callback response status '"OK"'
2023-04-25 23:46:48.072 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM content_tickets
WHERE id = @p0;
2023-04-25 23:46:50.106 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:50.119 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:50.120 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:50.141 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:50.158 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:52.174 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:52.190 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:52.191 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:52.229 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:52.249 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:54.265 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:54.281 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:54.281 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:54.310 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:54.325 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:56.358 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:56.379 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:56.379 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:56.413 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:56.437 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:46:58.454 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:58.470 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:46:58.471 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:46:58.496 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:46:58.511 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:47:00.552 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:47:00.573 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:47:00.575 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:47:00.603 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:47:00.624 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:47:02.661 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:47:02.676 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:47:02.677 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:47:02.705 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:47:02.724 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:47:04.756 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:47:04.776 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:47:04.780 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:47:04.805 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:47:04.829 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:47:06.846 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:47:06.871 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:47:06.873 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:47:06.896 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:47:06.914 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:47:08.935 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:47:08.967 +03:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:47:08.968 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:47:17.159 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:47:17.190 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:47:19.140 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/20567--simon-cyberpunk--kiberpank.html&format=Telegraph - -
2023-04-25 23:47:19.145 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-25 23:47:19.150 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-25 23:47:19.159 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:47:19.185 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__url_0='?', @__format_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f0.id, f0.discriminator, f0.image_collection_id, f0.manga_entry_id, f0.type, f0.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE (e.source_url = @__url_0) AND EXISTS (
        SELECT 1
        FROM formats AS f
        WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_1))
    LIMIT 1
) AS t
LEFT JOIN formats AS f0 ON t.id = f0.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f0.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-25 23:47:19.197 +03:00 [INF] Executing ObjectResult, writing value of type 'Nude.API.Contracts.Errors.Responses.ErrorResponse'.
2023-04-25 23:47:19.202 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 45.3045ms
2023-04-25 23:47:19.211 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 83
2023-04-25 23:47:19.216 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-25 23:47:19.220 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-25 23:47:19.222 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:47:19.225 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/20567--simon-cyberpunk--kiberpank.html&format=Telegraph - - - 404 175 application/json;+charset=utf-8 85.0998ms
2023-04-25 23:47:19.229 +03:00 [INF] Route matched with {action = "Create", controller = "ContentTicket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Nude.API.Contracts.Tickets.Requests.ContentTicketRequest) on controller Nude.API.Controllers.ContentTicketController (Nude.API).
2023-04-25 23:47:19.256 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:47:19.256 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:47:19.266 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:47:19.285 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:47:19.303 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:47:19.320 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:47:19.332 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:47:19.350 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id, u.id
FROM content_tickets AS c
INNER JOIN users AS u ON c.user_id = u.id
WHERE u.id = @__userId_0
2023-04-25 23:47:19.367 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?', @p1='?', @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO content_tickets (content_key, content_url, user_id)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-25 23:47:19.385 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tickets.Responses.ContentTicketResponse'.
2023-04-25 23:47:19.398 +03:00 [INF] Executed action Nude.API.Controllers.ContentTicketController.Create (Nude.API) in 133.6729ms
2023-04-25 23:47:19.405 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-25 23:47:19.409 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 83 - 200 192 application/json;+charset=utf-8 198.6267ms
2023-04-25 23:47:21.362 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:47:21.387 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:47:21.390 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:47:21.397 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ticket_ContentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
WHERE c.content_key = @__ticket_ContentKey_0
2023-04-25 23:47:21.403 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:47:43.563 +03:00 [INF] Executed DbCommand (27ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-25 23:47:43.894 +03:00 [INF] Executed DbCommand (331ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:47:53.660 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-25 23:47:53.668 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:47:53.672 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:47:54.960 +03:00 [INF] Received HTTP response headers after 1283.9328ms - 200
2023-04-25 23:47:54.962 +03:00 [INF] End processing HTTP request after 1294.7146ms - 200
2023-04-25 23:47:54.970 +03:00 [INF] Callback response status '"OK"'
2023-04-25 23:48:32.587 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-25 23:48:32.598 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:48:32.605 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:48:32.955 +03:00 [INF] Received HTTP response headers after 344.2577ms - 200
2023-04-25 23:48:32.960 +03:00 [INF] End processing HTTP request after 362.5046ms - 200
2023-04-25 23:48:32.976 +03:00 [INF] Callback response status '"OK"'
2023-04-25 23:48:32.999 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM content_tickets
WHERE id = @p0;
2023-04-25 23:48:35.031 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:48:35.048 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:48:35.049 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:48:35.074 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:48:35.090 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:48:37.104 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:48:37.116 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:48:37.117 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:48:37.142 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:48:37.163 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:48:38.706 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/20567--simon-cyberpunk--kiberpank.html&format=Telegraph - -
2023-04-25 23:48:38.711 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-25 23:48:38.717 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-25 23:48:38.728 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:48:38.754 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__url_0='?', @__format_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f0.id, f0.discriminator, f0.image_collection_id, f0.manga_entry_id, f0.type, f0.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE (e.source_url = @__url_0) AND EXISTS (
        SELECT 1
        FROM formats AS f
        WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_1))
    LIMIT 1
) AS t
LEFT JOIN formats AS f0 ON t.id = f0.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f0.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-25 23:48:38.766 +03:00 [INF] Executing ObjectResult, writing value of type 'Nude.API.Contracts.Errors.Responses.ErrorResponse'.
2023-04-25 23:48:38.780 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 53.8817ms
2023-04-25 23:48:38.787 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-25 23:48:38.790 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 83
2023-04-25 23:48:38.793 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/20567--simon-cyberpunk--kiberpank.html&format=Telegraph - - - 404 175 application/json;+charset=utf-8 87.0715ms
2023-04-25 23:48:38.796 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-25 23:48:38.805 +03:00 [INF] Route matched with {action = "Create", controller = "ContentTicket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Nude.API.Contracts.Tickets.Requests.ContentTicketRequest) on controller Nude.API.Controllers.ContentTicketController (Nude.API).
2023-04-25 23:48:38.814 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:48:38.835 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:48:38.850 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:48:38.874 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id, u.id
FROM content_tickets AS c
INNER JOIN users AS u ON c.user_id = u.id
WHERE u.id = @__userId_0
2023-04-25 23:48:38.892 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?', @p1='?', @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO content_tickets (content_key, content_url, user_id)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-25 23:48:38.916 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tickets.Responses.ContentTicketResponse'.
2023-04-25 23:48:38.922 +03:00 [INF] Executed action Nude.API.Controllers.ContentTicketController.Create (Nude.API) in 109.7413ms
2023-04-25 23:48:38.927 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-25 23:48:38.935 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 83 - 200 193 application/json;+charset=utf-8 145.5198ms
2023-04-25 23:48:39.208 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:48:39.224 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:48:39.226 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:48:39.236 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ticket_ContentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
WHERE c.content_key = @__ticket_ContentKey_0
2023-04-25 23:48:39.253 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:48:41.543 +03:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:48:41.543 +03:00 [INF] Executed DbCommand (44ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-25 23:48:44.918 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-25 23:48:44.932 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:48:44.938 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:48:45.319 +03:00 [INF] Received HTTP response headers after 375.4071ms - 200
2023-04-25 23:48:45.325 +03:00 [INF] End processing HTTP request after 393.205ms - 200
2023-04-25 23:48:45.331 +03:00 [INF] Callback response status '"OK"'
2023-04-25 23:49:31.587 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-25 23:49:31.595 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:49:31.600 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:49:32.047 +03:00 [INF] Received HTTP response headers after 440.5894ms - 200
2023-04-25 23:49:32.053 +03:00 [INF] End processing HTTP request after 457.4461ms - 200
2023-04-25 23:49:32.066 +03:00 [INF] Callback response status '"OK"'
2023-04-25 23:49:32.077 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM content_tickets
WHERE id = @p0;
2023-04-25 23:49:34.104 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:34.125 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:49:34.127 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:34.150 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:49:34.169 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:49:36.183 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:36.200 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:49:36.201 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:36.221 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:49:36.238 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:49:38.255 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:38.273 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:49:38.274 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:38.298 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:49:38.314 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:49:40.337 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:40.358 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:49:40.359 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:40.390 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:49:40.402 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:49:42.433 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:42.468 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:49:42.469 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:42.490 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:49:42.504 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:49:44.529 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:44.543 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:49:44.545 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:44.562 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:49:44.584 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:49:46.611 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:46.633 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:49:46.633 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:46.659 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:49:46.674 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:49:48.708 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:48.723 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:49:48.724 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:48.741 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:49:48.760 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:49:50.782 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:50.794 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:49:50.796 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:50.814 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:49:50.837 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:49:52.847 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:52.869 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:49:52.869 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:52.893 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:49:52.912 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:49:54.929 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:54.942 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:49:54.945 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:54.970 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:49:54.984 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:49:57.014 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:57.028 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:49:57.029 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:57.054 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:49:57.068 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:49:59.077 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:59.093 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:49:59.095 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:49:59.113 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:49:59.128 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:50:01.141 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:50:01.154 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:50:01.157 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:50:01.173 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:50:01.191 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:50:03.215 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:50:03.230 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:50:03.231 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:50:03.249 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:50:03.264 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:50:05.281 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:50:05.303 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:50:05.304 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:50:05.330 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:50:05.350 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:50:07.364 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:50:07.377 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:50:07.380 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:50:07.413 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:50:07.432 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:50:09.455 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:50:09.473 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:50:09.473 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:50:09.495 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:50:09.538 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:50:11.561 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:50:11.574 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:50:11.576 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:50:11.605 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:50:11.620 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:50:13.652 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:50:13.672 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:50:13.673 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:50:13.701 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:50:13.716 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:51:48.413 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:51:49.248 +03:00 [INF] Executed DbCommand (91ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-04-25 23:51:49.321 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-04-25 23:51:49.381 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT migration_id, product_version
FROM "__EFMigrationsHistory"
ORDER BY migration_id;
2023-04-25 23:51:49.449 +03:00 [INF] No migrations were applied. The database is already up to date.
2023-04-25 23:51:49.827 +03:00 [INF] User profile is available. Using 'C:\Users\ilyao\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-04-25 23:51:49.999 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:51:50.499 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:51:50.566 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:51:50.812 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:51:50.837 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:51:50.899 +03:00 [INF] Now listening on: http://localhost:3001
2023-04-25 23:51:50.907 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-04-25 23:51:50.910 +03:00 [INF] Hosting environment: Production
2023-04-25 23:51:50.914 +03:00 [INF] Content root path: C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\
2023-04-25 23:51:52.870 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:51:52.894 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:51:52.895 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:51:52.921 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:51:52.937 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:51:54.959 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:51:54.975 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:51:54.976 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:51:54.998 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:51:55.012 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:51:57.029 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:51:57.043 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:51:57.043 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:51:57.062 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:51:57.077 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:51:57.274 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/20567--simon-cyberpunk--kiberpank.html&format=Telegraph - -
2023-04-25 23:51:57.558 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-25 23:51:57.608 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-25 23:51:57.690 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:51:57.949 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-04-25 23:51:58.016 +03:00 [INF] Executed DbCommand (33ms) [Parameters=[@__url_0='?', @__format_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f0.id, f0.discriminator, f0.image_collection_id, f0.manga_entry_id, f0.type, f0.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE (e.source_url = @__url_0) AND EXISTS (
        SELECT 1
        FROM formats AS f
        WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_1))
    LIMIT 1
) AS t
LEFT JOIN formats AS f0 ON t.id = f0.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f0.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-25 23:51:58.052 +03:00 [INF] Executing ObjectResult, writing value of type 'Nude.API.Contracts.Errors.Responses.ErrorResponse'.
2023-04-25 23:51:58.339 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 705.9762ms
2023-04-25 23:51:58.365 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 83
2023-04-25 23:51:58.366 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-25 23:51:58.382 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/20567--simon-cyberpunk--kiberpank.html&format=Telegraph - - - 404 175 application/json;+charset=utf-8 1112.3790ms
2023-04-25 23:51:58.695 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-25 23:51:58.705 +03:00 [INF] Route matched with {action = "Create", controller = "ContentTicket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Nude.API.Contracts.Tickets.Requests.ContentTicketRequest) on controller Nude.API.Controllers.ContentTicketController (Nude.API).
2023-04-25 23:51:58.811 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:51:58.851 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-04-25 23:51:58.873 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:51:59.064 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-25 23:51:59.107 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id, u.id
FROM content_tickets AS c
INNER JOIN users AS u ON c.user_id = u.id
WHERE u.id = @__userId_0
2023-04-25 23:51:59.109 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:51:59.133 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:51:59.133 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:51:59.157 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:51:59.173 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:51:59.420 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?', @p1='?', @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO content_tickets (content_key, content_url, user_id)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-25 23:51:59.535 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tickets.Responses.ContentTicketResponse'.
2023-04-25 23:51:59.544 +03:00 [INF] Executed action Nude.API.Controllers.ContentTicketController.Create (Nude.API) in 830.6883ms
2023-04-25 23:51:59.551 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-25 23:51:59.558 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 83 - 200 193 application/json;+charset=utf-8 1193.7515ms
2023-04-25 23:52:01.207 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:52:01.221 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:52:01.222 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:52:01.242 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ticket_ContentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
WHERE c.content_key = @__ticket_ContentKey_0
2023-04-25 23:52:06.728 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:52:06.746 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-25 23:52:06.755 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-04-25 23:52:06.787 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-25 23:52:11.320 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-25 23:52:11.360 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:52:11.369 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:52:12.615 +03:00 [INF] Received HTTP response headers after 1232.6523ms - 200
2023-04-25 23:52:12.624 +03:00 [INF] End processing HTTP request after 1267.3001ms - 200
2023-04-25 23:52:12.637 +03:00 [INF] Callback response status '"OK"'
2023-04-25 23:52:32.975 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-25 23:52:32.981 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:52:32.986 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-25 23:52:33.642 +03:00 [INF] Received HTTP response headers after 645.9581ms - 200
2023-04-25 23:52:33.649 +03:00 [INF] End processing HTTP request after 668.6781ms - 200
2023-04-25 23:52:33.684 +03:00 [INF] Callback response status '"OK"'
2023-04-25 23:52:33.723 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM content_tickets
WHERE id = @p0;
2023-04-25 23:52:35.778 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:52:35.798 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-25 23:52:35.798 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-25 23:52:35.813 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-25 23:52:35.845 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 00:07:27.557 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:07.451 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:08.024 +03:00 [INF] Executed DbCommand (91ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-04-26 10:11:08.065 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-04-26 10:11:08.098 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT migration_id, product_version
FROM "__EFMigrationsHistory"
ORDER BY migration_id;
2023-04-26 10:11:08.133 +03:00 [INF] No migrations were applied. The database is already up to date.
2023-04-26 10:11:08.280 +03:00 [INF] User profile is available. Using 'C:\Users\ilyao\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-04-26 10:11:08.381 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:08.676 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:11:08.720 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:08.864 +03:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:11:08.878 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:11:08.913 +03:00 [INF] Now listening on: http://localhost:3001
2023-04-26 10:11:08.916 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-04-26 10:11:08.918 +03:00 [INF] Hosting environment: Production
2023-04-26 10:11:08.919 +03:00 [INF] Content root path: C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\
2023-04-26 10:11:10.902 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:10.919 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:10.922 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:11:10.963 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:11:10.973 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:11:12.998 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:13.007 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:13.010 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:11:13.017 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:11:13.030 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:11:15.058 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:15.064 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:15.065 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:11:15.071 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:11:15.083 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:11:17.099 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:17.104 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:17.106 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:11:17.111 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:11:17.117 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:11:19.142 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:19.156 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:19.158 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:11:19.165 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:11:19.170 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:11:21.186 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:21.190 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:21.192 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:11:21.202 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:11:21.211 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:11:23.226 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:23.232 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:23.234 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:11:23.244 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:11:23.254 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:11:25.274 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:25.284 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:25.287 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:11:25.299 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:11:25.313 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:11:27.333 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:27.339 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:27.341 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:11:27.350 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:11:27.357 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:11:29.365 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:29.371 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:29.373 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:11:29.383 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:11:29.393 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:11:31.415 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:31.424 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:31.426 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:11:31.440 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:11:31.457 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:11:33.481 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:33.490 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:33.493 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:11:33.506 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:11:33.523 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:11:34.915 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/20567--simon-cyberpunk--kiberpank.html&format=Telegraph - -
2023-04-26 10:11:35.063 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:11:35.101 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:11:35.160 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.FindBy (Nude.API) - Validation state: "Valid"
2023-04-26 10:11:35.169 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:35.404 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-04-26 10:11:35.464 +03:00 [INF] Executed DbCommand (28ms) [Parameters=[@__url_0='?', @__format_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f0.id, f0.discriminator, f0.image_collection_id, f0.manga_entry_id, f0.type, f0.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE (e.source_url = @__url_0) AND EXISTS (
        SELECT 1
        FROM formats AS f
        WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_1))
    LIMIT 1
) AS t
LEFT JOIN formats AS f0 ON t.id = f0.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f0.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:11:35.482 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.FindBy (Nude.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 310.8798ms.
2023-04-26 10:11:35.509 +03:00 [INF] Executing ObjectResult, writing value of type 'Nude.API.Contracts.Errors.Responses.ErrorResponse'.
2023-04-26 10:11:35.541 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:35.548 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:35.550 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:11:35.557 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:11:35.569 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:11:35.750 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 633.644ms
2023-04-26 10:11:35.756 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:11:35.766 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/20567--simon-cyberpunk--kiberpank.html&format=Telegraph - - - 404 175 application/json;+charset=utf-8 858.4099ms
2023-04-26 10:11:35.797 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 83
2023-04-26 10:11:36.083 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-26 10:11:36.093 +03:00 [INF] Route matched with {action = "Create", controller = "ContentTicket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Nude.API.Contracts.Tickets.Requests.ContentTicketRequest) on controller Nude.API.Controllers.ContentTicketController (Nude.API).
2023-04-26 10:11:36.168 +03:00 [INF] Executing action method Nude.API.Controllers.ContentTicketController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:11:36.177 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:36.208 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-04-26 10:11:36.238 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:11:36.429 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:11:36.458 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id, u.id
FROM content_tickets AS c
INNER JOIN users AS u ON c.user_id = u.id
WHERE u.id = @__userId_0
2023-04-26 10:11:36.730 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?', @p1='?', @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO content_tickets (content_key, content_url, user_id)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-26 10:11:36.823 +03:00 [INF] Executed action method Nude.API.Controllers.ContentTicketController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 651.7387ms.
2023-04-26 10:11:36.828 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tickets.Responses.ContentTicketResponse'.
2023-04-26 10:11:36.834 +03:00 [INF] Executed action Nude.API.Controllers.ContentTicketController.Create (Nude.API) in 736.352ms
2023-04-26 10:11:36.836 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-26 10:11:36.839 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 83 - 200 193 application/json;+charset=utf-8 1041.9637ms
2023-04-26 10:11:37.582 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:37.589 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:37.591 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:11:37.597 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:11:37.608 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:11:37.610 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ticket_ContentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
WHERE c.content_key = @__ticket_ContentKey_0
2023-04-26 10:11:37.646 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-04-26 10:11:37.663 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:11:37.673 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:11:37.698 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:11:37.703 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:11:38.498 +03:00 [INF] Received HTTP response headers after 786.5448ms - 200
2023-04-26 10:11:38.503 +03:00 [INF] End processing HTTP request after 806.6761ms - 200
2023-04-26 10:11:38.510 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:11:47.629 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?', @p12='?', @p13='?', @p14='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO external_metas (source_id, source_url)
VALUES (@p0, @p1)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p2)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p3)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p4)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p5)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p6)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p7)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p8)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p9)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p10)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p11)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p12)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p13)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p14)
RETURNING id;
2023-04-26 10:11:47.653 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p15='?', @p16='?' (DbType = DateTime), @p17='?', @p18='?' (DbType = Int32), @p19='?', @p20='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO mangas (content_key, created_at, description, external_meta_id, title, updated_at)
VALUES (@p15, @p16, @p17, @p18, @p19, @p20)
RETURNING id;
2023-04-26 10:11:47.666 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p21='?' (DbType = Int32), @p22='?' (DbType = Int32), @p23='?' (DbType = Int32), @p24='?' (DbType = Int32), @p25='?' (DbType = Int32), @p26='?' (DbType = Int32), @p27='?' (DbType = Int32), @p28='?' (DbType = Int32), @p29='?' (DbType = Int32), @p30='?' (DbType = Int32), @p31='?' (DbType = Int32), @p32='?' (DbType = Int32), @p33='?' (DbType = Int32), @p34='?' (DbType = Int32), @p35='?' (DbType = Int32), @p36='?' (DbType = Int32), @p37='?' (DbType = Int32), @p38='?' (DbType = Int32), @p39='?' (DbType = Int32), @p40='?' (DbType = Int32), @p41='?' (DbType = Int32), @p42='?' (DbType = Int32), @p43='?' (DbType = Int32), @p44='?' (DbType = Int32), @p45='?' (DbType = Int32), @p46='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p21, @p22)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p23, @p24)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p25, @p26)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p27, @p28)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p29, @p30)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p31, @p32)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p33, @p34)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p35, @p36)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p37, @p38)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p39, @p40)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p41, @p42)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p43, @p44)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p45, @p46)
RETURNING id;
2023-04-26 10:11:47.742 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@__normalizedTags_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.normalize_value, t.type, t.value
FROM tags AS t
WHERE t.normalize_value = ANY (@__normalizedTags_0) OR (((t.normalize_value IS NULL)) AND ((array_position(@__normalizedTags_0, NULL) IS NOT NULL)))
2023-04-26 10:11:47.799 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Int32), @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?', @p9='?', @p10='?' (DbType = Int32), @p11='?', @p12='?', @p13='?' (DbType = Int32), @p14='?', @p15='?', @p16='?' (DbType = Int32), @p17='?', @p18='?', @p19='?' (DbType = Int32), @p20='?', @p21='?', @p22='?' (DbType = Int32), @p23='?', @p24='?', @p25='?' (DbType = Int32), @p26='?', @p27='?', @p28='?' (DbType = Int32), @p29='?', @p30='?', @p31='?' (DbType = Int32), @p32='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO tags (normalize_value, type, value)
VALUES (@p0, @p1, @p2)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p3, @p4, @p5)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p6, @p7, @p8)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p9, @p10, @p11)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p12, @p13, @p14)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p15, @p16, @p17)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p18, @p19, @p20)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p21, @p22, @p23)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p24, @p25, @p26)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p27, @p28, @p29)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p30, @p31, @p32)
RETURNING id;
2023-04-26 10:11:47.824 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedTags_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.normalize_value, t.type, t.value
FROM tags AS t
WHERE t.normalize_value = ANY (@__normalizedTags_0) OR (((t.normalize_value IS NULL)) AND ((array_position(@__normalizedTags_0, NULL) IS NOT NULL)))
2023-04-26 10:11:47.832 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO tags (normalize_value, type, value)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-26 10:11:47.908 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t0.id, t0.normalize_value, t0.type, t0.value, m.id, t0.mangas_id, t0.tags_id, t1.mangas_id, t1.tags_id, t1.id, t1.content_key, t1.created_at, t1.description, t1.external_meta_id, t1.title, t1.updated_at
FROM mangas AS m
INNER JOIN (
    SELECT t.id, t.normalize_value, t.type, t.value, m0.mangas_id, m0.tags_id
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t ON m0.tags_id = t.id
) AS t0 ON m.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.mangas_id, m1.tags_id, m2.id, m2.content_key, m2.created_at, m2.description, m2.external_meta_id, m2.title, m2.updated_at
    FROM manga_entry_tag AS m1
    INNER JOIN mangas AS m2 ON m1.mangas_id = m2.id
    WHERE m2.id = @__p_0
) AS t1 ON t0.id = t1.tags_id
WHERE m.id = @__p_0
ORDER BY m.id, t0.mangas_id, t0.tags_id, t0.id, t1.mangas_id, t1.tags_id
2023-04-26 10:11:47.961 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (DbType = Int32), @p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (DbType = Int32), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32), @p18='?' (DbType = Int32), @p19='?' (DbType = Int32), @p20='?' (DbType = Int32), @p21='?' (DbType = Int32), @p22='?' (DbType = Int32), @p23='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p0, @p1);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p2, @p3);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p4, @p5);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p6, @p7);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p8, @p9);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p10, @p11);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p12, @p13);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p14, @p15);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p16, @p17);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p18, @p19);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p20, @p21);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p22, @p23);
2023-04-26 10:11:47.978 +03:00 [INF] Content stolen success
2023-04-26 10:11:47.979 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:11:47.982 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:11:47.985 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:11:48.076 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-D68BC35B88C2CAE67C84A4770956311987D259AF20CC83A7C178147785C732F0&format= - -
2023-04-26 10:11:48.083 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:11:48.085 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:11:48.090 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.FindBy (Nude.API) - Validation state: "Valid"
2023-04-26 10:11:48.093 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:48.104 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:11:48.140 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.FindBy (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 47.6821ms.
2023-04-26 10:11:48.148 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:11:48.167 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 79.5836ms
2023-04-26 10:11:48.170 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:11:48.172 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-D68BC35B88C2CAE67C84A4770956311987D259AF20CC83A7C178147785C732F0&format= - - - 200 2743 application/json;+charset=utf-8 96.1304ms
2023-04-26 10:11:48.314 +03:00 [INF] Received HTTP response headers after 327.2659ms - 200
2023-04-26 10:11:48.321 +03:00 [INF] End processing HTTP request after 338.974ms - 200
2023-04-26 10:11:48.323 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:11:48.359 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM content_tickets
WHERE id = @p0;
2023-04-26 10:11:50.383 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:50.392 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:11:50.396 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:11:50.410 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:11:50.423 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:11:50.437 +03:00 [INF] Diagnostics of the FormatsWorker is stated
2023-04-26 10:11:50.444 +03:00 [INF] Starting upload 13 images to tgh
2023-04-26 10:11:51.963 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:11:51.973 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:11:51.978 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:11:52.205 +03:00 [INF] Received HTTP response headers after 221.6053ms - 200
2023-04-26 10:11:52.210 +03:00 [INF] End processing HTTP request after 237.2419ms - 200
2023-04-26 10:11:52.223 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:11:53.648 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:11:53.653 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:11:53.658 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:11:53.829 +03:00 [INF] Received HTTP response headers after 166.554ms - 200
2023-04-26 10:11:53.834 +03:00 [INF] End processing HTTP request after 180.8246ms - 200
2023-04-26 10:11:53.846 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:11:55.177 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:11:55.184 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:11:55.189 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:11:55.328 +03:00 [INF] Received HTTP response headers after 130.6802ms - 200
2023-04-26 10:11:55.331 +03:00 [INF] End processing HTTP request after 147.0678ms - 200
2023-04-26 10:11:55.333 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:11:56.621 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:11:56.625 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:11:56.630 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:11:56.818 +03:00 [INF] Received HTTP response headers after 183.288ms - 200
2023-04-26 10:11:56.822 +03:00 [INF] End processing HTTP request after 196.9276ms - 200
2023-04-26 10:11:56.826 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:11:58.240 +03:00 [INF] (5/13) Uploading images to telegraph
2023-04-26 10:11:58.242 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:11:58.244 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:11:58.246 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:11:58.403 +03:00 [INF] Received HTTP response headers after 153.6416ms - 200
2023-04-26 10:11:58.406 +03:00 [INF] End processing HTTP request after 161.5038ms - 200
2023-04-26 10:11:58.410 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:11:59.741 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:11:59.746 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:11:59.748 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:11:59.906 +03:00 [INF] Received HTTP response headers after 154.2394ms - 200
2023-04-26 10:11:59.909 +03:00 [INF] End processing HTTP request after 163.0805ms - 200
2023-04-26 10:11:59.910 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:12:01.314 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:12:01.318 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:01.322 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:01.483 +03:00 [INF] Received HTTP response headers after 156.4286ms - 200
2023-04-26 10:12:01.487 +03:00 [INF] End processing HTTP request after 169.9011ms - 200
2023-04-26 10:12:01.492 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:12:02.957 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:12:02.960 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:02.963 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:03.171 +03:00 [INF] Received HTTP response headers after 207.5986ms - 200
2023-04-26 10:12:03.173 +03:00 [INF] End processing HTTP request after 213.3162ms - 200
2023-04-26 10:12:03.175 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:12:04.607 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:12:04.612 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:04.617 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:04.809 +03:00 [INF] Received HTTP response headers after 186.474ms - 200
2023-04-26 10:12:04.813 +03:00 [INF] End processing HTTP request after 201.8364ms - 200
2023-04-26 10:12:04.819 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:12:06.334 +03:00 [INF] (10/13) Uploading images to telegraph
2023-04-26 10:12:06.341 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:12:06.345 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:06.350 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:06.522 +03:00 [INF] Received HTTP response headers after 163.9654ms - 200
2023-04-26 10:12:06.527 +03:00 [INF] End processing HTTP request after 181.5391ms - 200
2023-04-26 10:12:06.533 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:12:07.258 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:12:07.261 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:07.262 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:07.410 +03:00 [INF] Received HTTP response headers after 143.9272ms - 200
2023-04-26 10:12:07.414 +03:00 [INF] End processing HTTP request after 153.2665ms - 200
2023-04-26 10:12:07.419 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:12:08.056 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:12:08.060 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:08.063 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:08.242 +03:00 [INF] Received HTTP response headers after 173.2077ms - 200
2023-04-26 10:12:08.245 +03:00 [INF] End processing HTTP request after 185.0356ms - 200
2023-04-26 10:12:08.246 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:12:09.046 +03:00 [INF] (13/13) Uploading images to telegraph
2023-04-26 10:12:09.053 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:12:09.057 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:09.058 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:09.211 +03:00 [INF] Received HTTP response headers after 151.9334ms - 200
2023-04-26 10:12:09.214 +03:00 [INF] End processing HTTP request after 157.0415ms - 200
2023-04-26 10:12:09.216 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:12:09.217 +03:00 [INF] Images uploaded success
2023-04-26 10:12:09.222 +03:00 [INF] Creating tgh page titled 'Cyberpunk / Киберпанк' with 13 images
2023-04-26 10:12:09.787 +03:00 [INF] Created tgh page success (https://telegra.ph/Cyberpunk--Kiberpank-04-26)
2023-04-26 10:12:09.859 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO formats (discriminator, image_collection_id, manga_entry_id, type, url)
VALUES (@p0, @p1, @p2, @p3, @p4)
RETURNING id;
2023-04-26 10:12:09.877 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:12:09.884 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:09.886 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:09.923 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-D68BC35B88C2CAE67C84A4770956311987D259AF20CC83A7C178147785C732F0&format= - -
2023-04-26 10:12:09.929 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:12:09.931 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:12:09.935 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.FindBy (Nude.API) - Validation state: "Valid"
2023-04-26 10:12:09.938 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:12:09.951 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:12:09.967 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.FindBy (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 29.7591ms.
2023-04-26 10:12:09.978 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:12:09.983 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 48.5348ms
2023-04-26 10:12:09.987 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:12:09.990 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-D68BC35B88C2CAE67C84A4770956311987D259AF20CC83A7C178147785C732F0&format= - - - 200 2841 application/json;+charset=utf-8 66.5056ms
2023-04-26 10:12:10.184 +03:00 [INF] Received HTTP response headers after 296.1065ms - 200
2023-04-26 10:12:10.186 +03:00 [INF] End processing HTTP request after 302.7079ms - 200
2023-04-26 10:12:10.188 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:12:10.190 +03:00 [INF] FormatsWorker completed in 00:00:19.75
2023-04-26 10:12:12.205 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:12:12.222 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:12:12.224 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:12:12.230 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:12:12.238 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:12:14.250 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:12:14.262 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:12:14.263 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:12:14.276 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:12:14.292 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:12:15.264 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/18940--asdadvhu-nuresuke-tewi-chan-to-tooriame-no-jouji.html&format=Telegraph - -
2023-04-26 10:12:15.268 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:12:15.273 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:12:15.285 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.FindBy (Nude.API) - Validation state: "Valid"
2023-04-26 10:12:15.291 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:12:15.310 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__url_0='?', @__format_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f0.id, f0.discriminator, f0.image_collection_id, f0.manga_entry_id, f0.type, f0.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE (e.source_url = @__url_0) AND EXISTS (
        SELECT 1
        FROM formats AS f
        WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_1))
    LIMIT 1
) AS t
LEFT JOIN formats AS f0 ON t.id = f0.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f0.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:12:15.323 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.FindBy (Nude.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 33.4276ms.
2023-04-26 10:12:15.332 +03:00 [INF] Executing ObjectResult, writing value of type 'Nude.API.Contracts.Errors.Responses.ErrorResponse'.
2023-04-26 10:12:15.337 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 53.2027ms
2023-04-26 10:12:15.345 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:12:15.345 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 105
2023-04-26 10:12:15.352 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/18940--asdadvhu-nuresuke-tewi-chan-to-tooriame-no-jouji.html&format=Telegraph - - - 404 175 application/json;+charset=utf-8 87.8056ms
2023-04-26 10:12:15.359 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-26 10:12:15.364 +03:00 [INF] Route matched with {action = "Create", controller = "ContentTicket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Nude.API.Contracts.Tickets.Requests.ContentTicketRequest) on controller Nude.API.Controllers.ContentTicketController (Nude.API).
2023-04-26 10:12:15.372 +03:00 [INF] Executing action method Nude.API.Controllers.ContentTicketController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:12:15.384 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:12:15.400 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:12:15.412 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:12:15.423 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id, u.id
FROM content_tickets AS c
INNER JOIN users AS u ON c.user_id = u.id
WHERE u.id = @__userId_0
2023-04-26 10:12:15.435 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?', @p1='?', @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO content_tickets (content_key, content_url, user_id)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-26 10:12:15.454 +03:00 [INF] Executed action method Nude.API.Controllers.ContentTicketController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 71.9805ms.
2023-04-26 10:12:15.462 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tickets.Responses.ContentTicketResponse'.
2023-04-26 10:12:15.465 +03:00 [INF] Executed action Nude.API.Controllers.ContentTicketController.Create (Nude.API) in 94.968ms
2023-04-26 10:12:15.468 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-26 10:12:15.470 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 105 - 200 215 application/json;+charset=utf-8 124.6588ms
2023-04-26 10:12:16.334 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:12:16.442 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:12:16.445 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:12:16.454 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:12:16.459 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ticket_ContentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
WHERE c.content_key = @__ticket_ContentKey_0
2023-04-26 10:12:16.462 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:12:16.470 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:12:16.478 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:12:16.484 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:16.486 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:16.672 +03:00 [INF] Received HTTP response headers after 184.6604ms - 200
2023-04-26 10:12:16.674 +03:00 [INF] End processing HTTP request after 189.9226ms - 200
2023-04-26 10:12:16.677 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:12:24.474 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?', @p12='?', @p13='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO external_metas (source_id, source_url)
VALUES (@p0, @p1)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p2)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p3)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p4)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p5)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p6)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p7)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p8)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p9)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p10)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p11)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p12)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p13)
RETURNING id;
2023-04-26 10:12:24.493 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p14='?', @p15='?' (DbType = DateTime), @p16='?', @p17='?' (DbType = Int32), @p18='?', @p19='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO mangas (content_key, created_at, description, external_meta_id, title, updated_at)
VALUES (@p14, @p15, @p16, @p17, @p18, @p19)
RETURNING id;
2023-04-26 10:12:24.507 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p20='?' (DbType = Int32), @p21='?' (DbType = Int32), @p22='?' (DbType = Int32), @p23='?' (DbType = Int32), @p24='?' (DbType = Int32), @p25='?' (DbType = Int32), @p26='?' (DbType = Int32), @p27='?' (DbType = Int32), @p28='?' (DbType = Int32), @p29='?' (DbType = Int32), @p30='?' (DbType = Int32), @p31='?' (DbType = Int32), @p32='?' (DbType = Int32), @p33='?' (DbType = Int32), @p34='?' (DbType = Int32), @p35='?' (DbType = Int32), @p36='?' (DbType = Int32), @p37='?' (DbType = Int32), @p38='?' (DbType = Int32), @p39='?' (DbType = Int32), @p40='?' (DbType = Int32), @p41='?' (DbType = Int32), @p42='?' (DbType = Int32), @p43='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p20, @p21)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p22, @p23)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p24, @p25)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p26, @p27)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p28, @p29)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p30, @p31)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p32, @p33)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p34, @p35)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p36, @p37)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p38, @p39)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p40, @p41)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p42, @p43)
RETURNING id;
2023-04-26 10:12:24.530 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedTags_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.normalize_value, t.type, t.value
FROM tags AS t
WHERE t.normalize_value = ANY (@__normalizedTags_0) OR (((t.normalize_value IS NULL)) AND ((array_position(@__normalizedTags_0, NULL) IS NOT NULL)))
2023-04-26 10:12:24.543 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Int32), @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?', @p9='?', @p10='?' (DbType = Int32), @p11='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO tags (normalize_value, type, value)
VALUES (@p0, @p1, @p2)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p3, @p4, @p5)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p6, @p7, @p8)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p9, @p10, @p11)
RETURNING id;
2023-04-26 10:12:24.560 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedTags_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.normalize_value, t.type, t.value
FROM tags AS t
WHERE t.normalize_value = ANY (@__normalizedTags_0) OR (((t.normalize_value IS NULL)) AND ((array_position(@__normalizedTags_0, NULL) IS NOT NULL)))
2023-04-26 10:12:24.571 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO tags (normalize_value, type, value)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-26 10:12:24.589 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t0.id, t0.normalize_value, t0.type, t0.value, m.id, t0.mangas_id, t0.tags_id, t1.mangas_id, t1.tags_id, t1.id, t1.content_key, t1.created_at, t1.description, t1.external_meta_id, t1.title, t1.updated_at
FROM mangas AS m
INNER JOIN (
    SELECT t.id, t.normalize_value, t.type, t.value, m0.mangas_id, m0.tags_id
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t ON m0.tags_id = t.id
) AS t0 ON m.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.mangas_id, m1.tags_id, m2.id, m2.content_key, m2.created_at, m2.description, m2.external_meta_id, m2.title, m2.updated_at
    FROM manga_entry_tag AS m1
    INNER JOIN mangas AS m2 ON m1.mangas_id = m2.id
    WHERE m2.id = @__p_0
) AS t1 ON t0.id = t1.tags_id
WHERE m.id = @__p_0
ORDER BY m.id, t0.mangas_id, t0.tags_id, t0.id, t1.mangas_id, t1.tags_id
2023-04-26 10:12:24.604 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (DbType = Int32), @p11='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p0, @p1);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p2, @p3);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p4, @p5);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p6, @p7);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p8, @p9);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p10, @p11);
2023-04-26 10:12:24.618 +03:00 [INF] Content stolen success
2023-04-26 10:12:24.620 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:12:24.622 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:24.626 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:24.704 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-A5ADAF8B70F12CF3614790671C7A84CC7B1E4FC9859B494E8F793A2335936D7B&format= - -
2023-04-26 10:12:24.710 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:12:24.714 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:12:24.719 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.FindBy (Nude.API) - Validation state: "Valid"
2023-04-26 10:12:24.723 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:12:24.737 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:12:24.747 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.FindBy (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 25.7767ms.
2023-04-26 10:12:24.753 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:12:24.761 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 43.2625ms
2023-04-26 10:12:24.765 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:12:24.768 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-A5ADAF8B70F12CF3614790671C7A84CC7B1E4FC9859B494E8F793A2335936D7B&format= - - - 200 2244 application/json;+charset=utf-8 64.3724ms
2023-04-26 10:12:24.888 +03:00 [INF] Received HTTP response headers after 254.146ms - 200
2023-04-26 10:12:24.892 +03:00 [INF] End processing HTTP request after 270.1893ms - 200
2023-04-26 10:12:24.895 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:12:24.903 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM content_tickets
WHERE id = @p0;
2023-04-26 10:12:26.925 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:12:26.937 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:12:26.940 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:12:26.953 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:12:26.982 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:12:26.997 +03:00 [INF] Diagnostics of the FormatsWorker is stated
2023-04-26 10:12:27.004 +03:00 [INF] Starting upload 12 images to tgh
2023-04-26 10:12:28.662 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:12:28.668 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:28.670 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:28.819 +03:00 [INF] Received HTTP response headers after 146.8833ms - 200
2023-04-26 10:12:28.821 +03:00 [INF] End processing HTTP request after 153.8173ms - 200
2023-04-26 10:12:28.828 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:12:30.043 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:12:30.046 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:30.048 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:30.186 +03:00 [INF] Received HTTP response headers after 135.577ms - 200
2023-04-26 10:12:30.188 +03:00 [INF] End processing HTTP request after 142.1215ms - 200
2023-04-26 10:12:30.191 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:12:31.697 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:12:31.699 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:31.701 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:31.826 +03:00 [INF] Received HTTP response headers after 123.3083ms - 200
2023-04-26 10:12:31.827 +03:00 [INF] End processing HTTP request after 128.3488ms - 200
2023-04-26 10:12:31.829 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:12:31.886 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:12:31.888 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:12:31.894 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:12:31.900 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:12:31.908 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:12:31.941 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:12:31.989 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE FALSE
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:12:32.008 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 103.2544ms.
2023-04-26 10:12:32.012 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:12:32.015 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 118.0457ms
2023-04-26 10:12:32.017 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:12:32.018 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 2 application/json;+charset=utf-8 132.1730ms
2023-04-26 10:12:33.886 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:12:33.888 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:33.890 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:34.030 +03:00 [INF] Received HTTP response headers after 138.8245ms - 200
2023-04-26 10:12:34.033 +03:00 [INF] End processing HTTP request after 144.4724ms - 200
2023-04-26 10:12:34.035 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:12:35.339 +03:00 [INF] (5/12) Uploading images to telegraph
2023-04-26 10:12:35.341 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:12:35.342 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:35.343 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:35.480 +03:00 [INF] Received HTTP response headers after 134.9822ms - 200
2023-04-26 10:12:35.481 +03:00 [INF] End processing HTTP request after 138.7049ms - 200
2023-04-26 10:12:35.483 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:12:37.039 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:12:37.041 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:37.042 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:37.153 +03:00 [INF] Received HTTP response headers after 109.4477ms - 200
2023-04-26 10:12:37.154 +03:00 [INF] End processing HTTP request after 113.5613ms - 200
2023-04-26 10:12:37.156 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:12:38.656 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:12:38.660 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:38.669 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:38.842 +03:00 [INF] Received HTTP response headers after 169.0015ms - 200
2023-04-26 10:12:38.847 +03:00 [INF] End processing HTTP request after 186.9073ms - 200
2023-04-26 10:12:38.855 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:12:40.126 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:12:40.130 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:40.136 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:40.304 +03:00 [INF] Received HTTP response headers after 159.7638ms - 200
2023-04-26 10:12:40.309 +03:00 [INF] End processing HTTP request after 178.6716ms - 200
2023-04-26 10:12:40.316 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:12:41.596 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:12:41.602 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:41.615 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:41.771 +03:00 [INF] Received HTTP response headers after 150.7114ms - 200
2023-04-26 10:12:41.773 +03:00 [INF] End processing HTTP request after 171.6577ms - 200
2023-04-26 10:12:41.775 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:12:42.922 +03:00 [INF] (10/12) Uploading images to telegraph
2023-04-26 10:12:42.925 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:12:42.927 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:42.929 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:43.100 +03:00 [INF] Received HTTP response headers after 169.9499ms - 200
2023-04-26 10:12:43.103 +03:00 [INF] End processing HTTP request after 176.0832ms - 200
2023-04-26 10:12:43.105 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:12:44.155 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:12:44.159 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:44.161 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:44.778 +03:00 [INF] Received HTTP response headers after 614.3021ms - 200
2023-04-26 10:12:44.780 +03:00 [INF] End processing HTTP request after 621.3284ms - 200
2023-04-26 10:12:44.782 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:12:49.249 +03:00 [INF] (12/12) Uploading images to telegraph
2023-04-26 10:12:49.254 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:12:49.256 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:49.258 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:49.504 +03:00 [INF] Received HTTP response headers after 244.4871ms - 200
2023-04-26 10:12:49.507 +03:00 [INF] End processing HTTP request after 250.7497ms - 200
2023-04-26 10:12:49.509 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:12:49.511 +03:00 [INF] Images uploaded success
2023-04-26 10:12:49.512 +03:00 [INF] Creating tgh page titled 'Nuresuke Tewi-chan to Tooriame no Jouji' with 12 images
2023-04-26 10:12:49.692 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:12:49.696 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:12:49.698 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:12:49.702 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:12:49.705 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:12:49.712 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:12:49.724 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE FALSE
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:12:49.728 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 23.429ms.
2023-04-26 10:12:49.732 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:12:49.737 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 35.8213ms
2023-04-26 10:12:49.746 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:12:49.749 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 2 application/json;+charset=utf-8 57.1700ms
2023-04-26 10:12:49.816 +03:00 [INF] Created tgh page success (https://telegra.ph/Nuresuke-Tewi-chan-to-Tooriame-no-Jouji-04-26)
2023-04-26 10:12:49.824 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO formats (discriminator, image_collection_id, manga_entry_id, type, url)
VALUES (@p0, @p1, @p2, @p3, @p4)
RETURNING id;
2023-04-26 10:12:49.839 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:12:49.843 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:49.847 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:12:49.878 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-A5ADAF8B70F12CF3614790671C7A84CC7B1E4FC9859B494E8F793A2335936D7B&format= - -
2023-04-26 10:12:49.881 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:12:49.883 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:12:49.888 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.FindBy (Nude.API) - Validation state: "Valid"
2023-04-26 10:12:49.891 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:12:49.902 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:12:49.915 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.FindBy (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 24.9552ms.
2023-04-26 10:12:49.920 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:12:49.925 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 37.9661ms
2023-04-26 10:12:49.928 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:12:49.930 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-A5ADAF8B70F12CF3614790671C7A84CC7B1E4FC9859B494E8F793A2335936D7B&format= - - - 200 2361 application/json;+charset=utf-8 51.6205ms
2023-04-26 10:12:50.146 +03:00 [INF] Received HTTP response headers after 297.1029ms - 200
2023-04-26 10:12:50.148 +03:00 [INF] End processing HTTP request after 305.5596ms - 200
2023-04-26 10:12:50.153 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:12:50.155 +03:00 [INF] FormatsWorker completed in 00:00:23.15
2023-04-26 10:12:52.171 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:12:52.175 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:12:52.176 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:12:52.182 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:12:52.193 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:12:54.203 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:12:54.208 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:12:54.209 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:12:54.215 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:12:54.226 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:12:56.244 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:12:56.249 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:12:56.250 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:12:56.258 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:12:56.266 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:12:58.279 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:12:58.283 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:12:58.285 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:12:58.292 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:12:58.301 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:13:00.307 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:00.312 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:00.314 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:13:00.320 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:13:00.328 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:13:02.338 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:02.345 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:02.346 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:13:02.353 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:13:02.362 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:13:04.369 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:04.376 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:04.378 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:13:04.384 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:13:04.393 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:13:06.399 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:06.405 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:06.407 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:13:06.413 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:13:06.422 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:13:08.449 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:08.454 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:08.456 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:13:08.462 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:13:08.474 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:13:10.481 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:10.487 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:10.493 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:13:10.502 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:13:10.517 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:13:12.529 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:12.532 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:12.534 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:13:12.538 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:13:12.544 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:13:14.563 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:14.566 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:14.568 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:13:14.572 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:13:14.577 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:13:16.586 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:16.591 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:16.592 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:13:16.598 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:13:16.605 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:13:18.614 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:18.617 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:18.618 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:13:18.622 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:13:18.627 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:13:20.639 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:20.642 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:20.644 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:13:20.647 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:13:20.652 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:13:22.671 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:22.674 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:22.675 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:13:22.680 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:13:22.684 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:13:24.704 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:24.709 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:24.711 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:13:24.717 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:13:24.732 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:13:26.743 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:26.751 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:26.752 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:13:26.757 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:13:26.767 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:13:28.785 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:28.790 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:28.792 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:13:28.797 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:13:28.809 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:13:30.407 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:13:30.408 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:13:30.410 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:13:30.415 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:13:30.417 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:30.424 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:13:30.434 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE FALSE
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:13:30.439 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 22.3097ms.
2023-04-26 10:13:30.441 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:13:30.444 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 31.1772ms
2023-04-26 10:13:30.445 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:13:30.452 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 2 application/json;+charset=utf-8 45.5802ms
2023-04-26 10:13:30.820 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:30.825 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:30.826 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:13:30.831 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:13:30.838 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:13:32.848 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:32.854 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:32.855 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:13:32.860 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:13:32.866 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:13:34.873 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:34.877 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:34.880 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:13:34.888 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:13:34.895 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:13:36.902 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:36.908 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:13:36.910 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:13:36.916 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:13:36.924 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:13:38.286 +03:00 [INF] Application is shutting down...
2023-04-26 10:31:12.038 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:12.466 +03:00 [INF] Executed DbCommand (89ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-04-26 10:31:12.498 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-04-26 10:31:12.524 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT migration_id, product_version
FROM "__EFMigrationsHistory"
ORDER BY migration_id;
2023-04-26 10:31:12.559 +03:00 [INF] No migrations were applied. The database is already up to date.
2023-04-26 10:31:12.563 +03:00 [INF] Seeding default admin users
2023-04-26 10:31:12.569 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:12.940 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.discriminator, a.owner_id, a.username, u.id
FROM accounts AS a
INNER JOIN users AS u ON a.owner_id = u.id
WHERE a.username = @__username_0
LIMIT 1
2023-04-26 10:31:13.137 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-04-26 10:31:13.154 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:31:13.178 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.discriminator, a.owner_id, a.username, u.id
FROM accounts AS a
INNER JOIN users AS u ON a.owner_id = u.id
WHERE a.username = @__username_0
LIMIT 1
2023-04-26 10:31:13.182 +03:00 [INF] Found 1 users in DB. Setting claim.role.administrator claims them
2023-04-26 10:31:13.310 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM claims
WHERE id = @p0;
2023-04-26 10:31:13.394 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?', @p1='?', @p2='?' (DbType = Int32), @p3='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO claims (issuer, type, user_id, value)
VALUES (@p0, @p1, @p2, @p3)
RETURNING id;
2023-04-26 10:31:13.512 +03:00 [INF] User profile is available. Using 'C:\Users\ilyao\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-04-26 10:31:13.608 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:13.621 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:31:13.626 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:13.672 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:31:13.683 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:31:13.708 +03:00 [INF] Now listening on: http://localhost:3001
2023-04-26 10:31:13.710 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-04-26 10:31:13.711 +03:00 [INF] Hosting environment: Production
2023-04-26 10:31:13.712 +03:00 [INF] Content root path: C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\
2023-04-26 10:31:15.705 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:15.711 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:15.713 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:31:15.740 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:31:15.751 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:31:17.788 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:17.797 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:17.801 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:31:17.812 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:31:17.829 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:31:19.859 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:19.872 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:19.875 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:31:19.885 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:31:19.897 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:31:21.919 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:21.928 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:21.929 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:31:21.938 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:31:21.947 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:31:23.962 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:23.971 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:23.974 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:31:23.985 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:31:24.002 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:31:26.022 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:26.033 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:26.035 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:31:26.047 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:31:26.069 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:31:28.095 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:28.103 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:28.106 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:31:28.125 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:31:28.140 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:31:30.186 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:30.195 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:30.198 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:31:30.207 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:31:30.226 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:31:32.247 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:32.257 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:32.260 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:31:32.273 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:31:32.287 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:31:34.306 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:34.315 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:34.318 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:31:34.333 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:31:34.348 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:31:36.364 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:36.372 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:36.377 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:31:36.401 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:31:36.415 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:31:38.424 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:38.433 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:38.436 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:31:38.449 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:31:38.467 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:31:40.485 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:40.495 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:40.498 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:31:40.507 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:31:40.517 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:31:42.533 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:42.548 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:42.553 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:31:42.564 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:31:42.578 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:31:44.593 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:44.601 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:44.608 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:31:44.618 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:31:44.637 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:31:46.663 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:46.668 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:46.669 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:31:46.674 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:31:46.686 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:31:48.704 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:48.725 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:48.727 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:31:48.733 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:31:48.745 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:31:50.765 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:50.773 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:50.776 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:31:50.786 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:31:50.806 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:31:52.835 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:52.841 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:52.844 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:31:52.851 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:31:52.862 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:31:54.879 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:54.887 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:54.890 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:31:54.904 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:31:54.922 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:31:55.184 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:31:55.330 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:31:55.366 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:31:55.426 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:31:55.435 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:55.478 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:31:55.588 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE FALSE
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:31:55.636 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 196.8476ms.
2023-04-26 10:31:55.655 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:31:55.871 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 490.6297ms
2023-04-26 10:31:55.876 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:31:55.886 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 2 application/json;+charset=utf-8 708.6004ms
2023-04-26 10:31:56.942 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:56.951 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:56.953 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:31:56.982 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:31:56.992 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:31:58.033 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:31:58.043 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:31:58.047 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:31:58.058 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:31:58.064 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:58.080 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:31:58.101 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE FALSE
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:31:58.111 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 47.8066ms.
2023-04-26 10:31:58.120 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:31:58.128 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 72.0601ms
2023-04-26 10:31:58.132 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:31:58.136 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 2 application/json;+charset=utf-8 102.4481ms
2023-04-26 10:31:59.012 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:59.021 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:31:59.024 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:31:59.039 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:31:59.057 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:01.082 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:01.091 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:01.093 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:01.107 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:01.124 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:03.143 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:03.152 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:03.154 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:03.168 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:03.185 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:05.203 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:05.211 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:05.214 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:05.229 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:05.244 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:07.267 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:07.277 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:07.280 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:07.291 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:07.307 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:07.666 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/auth?username=sprw1488 application/json;+charset=utf-8 2
2023-04-26 10:32:07.674 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API)'
2023-04-26 10:32:07.686 +03:00 [INF] Route matched with {action = "SignInTelegram", controller = "Authorization"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SignInTelegram(System.String) on controller Nude.API.Controllers.AuthorizationController (Nude.API).
2023-04-26 10:32:07.708 +03:00 [INF] Executing action method Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API) - Validation state: "Valid"
2023-04-26 10:32:07.722 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:07.739 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.discriminator, a.owner_id, a.username, u.id
FROM accounts AS a
INNER JOIN users AS u ON a.owner_id = u.id
WHERE a.username = @__username_0
LIMIT 1
2023-04-26 10:32:07.772 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:32:08.021 +03:00 [INF] Executed action method Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 308.1091ms.
2023-04-26 10:32:08.026 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tokens.Responses.JwtTokenResponse'.
2023-04-26 10:32:08.060 +03:00 [INF] Executed action Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API) in 367.1115ms
2023-04-26 10:32:08.064 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API)'
2023-04-26 10:32:08.067 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/auth?username=sprw1488 application/json;+charset=utf-8 2 - 200 605 application/json;+charset=utf-8 400.4892ms
2023-04-26 10:32:09.335 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:09.346 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:09.348 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:09.366 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:09.383 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:11.417 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:11.427 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:11.430 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:11.439 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:11.447 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:13.468 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:13.481 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:13.484 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:13.497 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:13.515 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:15.538 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:15.548 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:15.551 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:15.565 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:15.576 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:17.594 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:17.604 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:17.607 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:17.620 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:17.637 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:18.095 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:32:18" 106630
2023-04-26 10:32:18.265 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:32:18.272 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:32:18.336 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:32:18.364 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:18.376 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:32:18.480 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:32:18.514 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 173.4844ms.
2023-04-26 10:32:18.519 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:32:18.546 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 267.1643ms
2023-04-26 10:32:18.549 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:32:18.556 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:32:18" 106630 - 200 231 application/json;+charset=utf-8 461.3560ms
2023-04-26 10:32:19.234 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:32:19" 74204
2023-04-26 10:32:19.238 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:32:19.241 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:32:19.251 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:32:19.257 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:19.268 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:32:19.281 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:32:19.301 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 47.2473ms.
2023-04-26 10:32:19.306 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:32:19.312 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 63.7573ms
2023-04-26 10:32:19.314 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:32:19.317 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:32:19" 74204 - 200 231 application/json;+charset=utf-8 83.5691ms
2023-04-26 10:32:19.658 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:19.664 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:19.666 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:19.674 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:19.685 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:19.714 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:32:19" 111217
2023-04-26 10:32:19.718 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:32:19.726 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:32:19.735 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:32:19.742 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:19.751 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:32:19.765 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:32:19.778 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 39.5973ms.
2023-04-26 10:32:19.782 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:32:19.786 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 57.3964ms
2023-04-26 10:32:19.789 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:32:19.791 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:32:19" 111217 - 200 231 application/json;+charset=utf-8 77.8221ms
2023-04-26 10:32:20.170 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:32:20" 114537
2023-04-26 10:32:20.174 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:32:20.176 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:32:20.183 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:32:20.197 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:20.211 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:32:20.230 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:32:20.248 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 56.266ms.
2023-04-26 10:32:20.253 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:32:20.257 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 78.8908ms
2023-04-26 10:32:20.260 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:32:20.271 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:32:20" 114537 - 200 231 application/json;+charset=utf-8 100.9374ms
2023-04-26 10:32:20.714 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:32:20" 118436
2023-04-26 10:32:20.719 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:32:20.724 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:32:20.737 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:32:20.746 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:20.772 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:32:20.791 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:32:20.813 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 71.2607ms.
2023-04-26 10:32:20.820 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:32:20.825 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 94.2069ms
2023-04-26 10:32:20.832 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:32:20.837 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:32:20" 118436 - 200 231 application/json;+charset=utf-8 123.2128ms
2023-04-26 10:32:21.693 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:21.704 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:21.710 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:21.720 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:21.739 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:23.758 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:23.766 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:23.769 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:23.782 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:23.801 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:25.060 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:32:25.064 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:32:25.069 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:32:25.078 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:32:25.091 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:25.107 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:32:25.134 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (5, 4, 3, 2, 1)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:32:25.152 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 61.1228ms.
2023-04-26 10:32:25.165 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:32:25.171 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 95.5279ms
2023-04-26 10:32:25.174 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:32:25.178 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1243 application/json;+charset=utf-8 118.0610ms
2023-04-26 10:32:25.272 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/192c4f3dc423499a9ec3f90c9dde84d4.jpeg - -
2023-04-26 10:32:25.305 +03:00 [INF] Sending file. Request path: '/data/files/192c4f3dc423499a9ec3f90c9dde84d4.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\192c4f3dc423499a9ec3f90c9dde84d4.jpeg'
2023-04-26 10:32:25.309 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/192c4f3dc423499a9ec3f90c9dde84d4.jpeg - - - 200 106417 image/jpeg 36.8585ms
2023-04-26 10:32:25.315 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/52dfc529805749cababc86f52ce5081a.jpeg - -
2023-04-26 10:32:25.320 +03:00 [INF] Sending file. Request path: '/data/files/52dfc529805749cababc86f52ce5081a.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\52dfc529805749cababc86f52ce5081a.jpeg'
2023-04-26 10:32:25.323 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/52dfc529805749cababc86f52ce5081a.jpeg - - - 200 73991 image/jpeg 7.8260ms
2023-04-26 10:32:25.327 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/9c75966abc6b44a2be1ba87d198d7850.jpeg - -
2023-04-26 10:32:25.330 +03:00 [INF] Sending file. Request path: '/data/files/9c75966abc6b44a2be1ba87d198d7850.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\9c75966abc6b44a2be1ba87d198d7850.jpeg'
2023-04-26 10:32:25.333 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/9c75966abc6b44a2be1ba87d198d7850.jpeg - - - 200 111004 image/jpeg 5.8340ms
2023-04-26 10:32:25.335 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/8c5ca134ecfe445593be9422c5bc8f16.jpeg - -
2023-04-26 10:32:25.338 +03:00 [INF] Sending file. Request path: '/data/files/8c5ca134ecfe445593be9422c5bc8f16.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\8c5ca134ecfe445593be9422c5bc8f16.jpeg'
2023-04-26 10:32:25.341 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/8c5ca134ecfe445593be9422c5bc8f16.jpeg - - - 200 114324 image/jpeg 5.6430ms
2023-04-26 10:32:25.344 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/c513cc4362544a9e8514bb15305167db.jpeg - -
2023-04-26 10:32:25.347 +03:00 [INF] Sending file. Request path: '/data/files/c513cc4362544a9e8514bb15305167db.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\c513cc4362544a9e8514bb15305167db.jpeg'
2023-04-26 10:32:25.350 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/c513cc4362544a9e8514bb15305167db.jpeg - - - 200 118223 image/jpeg 5.7673ms
2023-04-26 10:32:25.822 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:25.831 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:25.835 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:25.847 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:25.856 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:27.864 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:27.873 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:27.877 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:27.887 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:27.906 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:28.119 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:32:28.129 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:32:28.137 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:32:28.146 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:32:28.155 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:28.169 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:32:28.185 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (4, 2, 3, 1, 5)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:32:28.194 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 40.2021ms.
2023-04-26 10:32:28.203 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:32:28.208 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 63.9703ms
2023-04-26 10:32:28.223 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:32:28.233 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1243 application/json;+charset=utf-8 113.8986ms
2023-04-26 10:32:29.223 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:32:29.229 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:32:29.231 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:32:29.235 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:32:29.238 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:29.248 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:32:29.258 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (5, 1, 2, 4, 3)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:32:29.264 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 26.2633ms.
2023-04-26 10:32:29.268 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:32:29.274 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 39.0855ms
2023-04-26 10:32:29.277 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:32:29.280 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1243 application/json;+charset=utf-8 57.1692ms
2023-04-26 10:32:29.932 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:29.944 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:29.947 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:29.959 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:29.979 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:30.828 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:32:30.834 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:32:30.841 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:32:30.857 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:32:30.886 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:30.896 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:32:30.907 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (5, 1, 2, 3, 4)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:32:30.913 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 27.8855ms.
2023-04-26 10:32:30.919 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:32:30.926 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 70.4044ms
2023-04-26 10:32:30.929 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:32:30.934 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1243 application/json;+charset=utf-8 105.3108ms
2023-04-26 10:32:32.001 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:32.013 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:32.016 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:32.027 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:32.048 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:32.441 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:32:32.445 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:32:32.446 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:32:32.461 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:32:32.470 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:32.483 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:32:32.498 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (5, 3, 2, 4, 1)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:32:32.508 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 39.0567ms.
2023-04-26 10:32:32.522 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:32:32.529 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 69.1529ms
2023-04-26 10:32:32.535 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:32:32.539 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1243 application/json;+charset=utf-8 97.8355ms
2023-04-26 10:32:34.063 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:34.072 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:34.075 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:34.088 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:34.107 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:36.129 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:36.138 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:36.141 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:36.158 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:36.173 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:38.188 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:38.200 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:38.209 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:38.221 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:38.227 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:40.245 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:40.253 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:40.256 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:40.272 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:40.287 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:42.302 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:42.312 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:42.314 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:42.327 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:42.347 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:44.365 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:44.375 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:44.378 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:44.388 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:44.403 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:46.420 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:46.430 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:46.433 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:46.449 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:46.466 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:46.953 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:32:46" 139138
2023-04-26 10:32:46.958 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:32:46.966 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:32:46.980 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:32:46.988 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:47.007 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:32:47.025 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:32:47.056 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 71.1122ms.
2023-04-26 10:32:47.062 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:32:47.067 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 93.7291ms
2023-04-26 10:32:47.077 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:32:47.083 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:32:46" 139138 - 200 231 application/json;+charset=utf-8 129.3424ms
2023-04-26 10:32:47.696 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:32:47" 188310
2023-04-26 10:32:47.701 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:32:47.705 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:32:47.717 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:32:47.739 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:47.754 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:32:47.771 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:32:47.788 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 60.9416ms.
2023-04-26 10:32:47.794 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:32:47.801 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 89.3414ms
2023-04-26 10:32:47.810 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:32:47.821 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:32:47" 188310 - 200 231 application/json;+charset=utf-8 125.3030ms
2023-04-26 10:32:48.213 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:32:48" 129182
2023-04-26 10:32:48.218 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:32:48.222 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:32:48.238 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:32:48.247 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:48.255 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:32:48.269 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:32:48.291 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 46.8437ms.
2023-04-26 10:32:48.295 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:32:48.298 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 64.8929ms
2023-04-26 10:32:48.301 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:32:48.305 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:32:48" 129182 - 200 231 application/json;+charset=utf-8 91.9965ms
2023-04-26 10:32:48.479 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:48.493 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:48.496 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:48.509 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:48.524 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:48.697 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:32:48" 155337
2023-04-26 10:32:48.701 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:32:48.702 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:32:48.709 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:32:48.715 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:48.723 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:32:48.739 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:32:48.752 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 39.669ms.
2023-04-26 10:32:48.757 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:32:48.765 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 58.7133ms
2023-04-26 10:32:48.767 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:32:48.771 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:32:48" 155337 - 200 231 application/json;+charset=utf-8 73.2982ms
2023-04-26 10:32:49.167 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:32:49" 72931
2023-04-26 10:32:49.173 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:32:49.178 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:32:49.189 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:32:49.196 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:49.215 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:32:49.234 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:32:49.265 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 71.573ms.
2023-04-26 10:32:49.272 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:32:49.278 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 93.8316ms
2023-04-26 10:32:49.289 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:32:49.294 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:32:49" 72931 - 200 232 application/json;+charset=utf-8 126.6097ms
2023-04-26 10:32:50.314 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:32:50.318 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:32:50.323 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:32:50.331 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:32:50.339 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:50.354 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:32:50.368 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (6, 7, 3, 9, 8)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:32:50.373 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 34.6592ms.
2023-04-26 10:32:50.377 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:32:50.381 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 51.244ms
2023-04-26 10:32:50.383 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:32:50.386 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1243 application/json;+charset=utf-8 71.3888ms
2023-04-26 10:32:50.394 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/9884023d964849cea189ec9c5f291d1e.jpeg - -
2023-04-26 10:32:50.405 +03:00 [INF] Sending file. Request path: '/data/files/9884023d964849cea189ec9c5f291d1e.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\9884023d964849cea189ec9c5f291d1e.jpeg'
2023-04-26 10:32:50.410 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/9884023d964849cea189ec9c5f291d1e.jpeg - - - 200 138925 image/jpeg 15.7722ms
2023-04-26 10:32:50.412 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/36994fb0910a43d9a202439e8d166f90.jpeg - -
2023-04-26 10:32:50.415 +03:00 [INF] Sending file. Request path: '/data/files/36994fb0910a43d9a202439e8d166f90.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\36994fb0910a43d9a202439e8d166f90.jpeg'
2023-04-26 10:32:50.419 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/36994fb0910a43d9a202439e8d166f90.jpeg - - - 200 188097 image/jpeg 6.6059ms
2023-04-26 10:32:50.421 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/e956809dde464f5c8f23a53bd7c0b4bd.jpeg - -
2023-04-26 10:32:50.424 +03:00 [INF] Sending file. Request path: '/data/files/e956809dde464f5c8f23a53bd7c0b4bd.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\e956809dde464f5c8f23a53bd7c0b4bd.jpeg'
2023-04-26 10:32:50.433 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/e956809dde464f5c8f23a53bd7c0b4bd.jpeg - - - 200 128969 image/jpeg 12.2265ms
2023-04-26 10:32:50.436 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/1b89463680fc48108979a7d77ed49b9f.jpeg - -
2023-04-26 10:32:50.440 +03:00 [INF] Sending file. Request path: '/data/files/1b89463680fc48108979a7d77ed49b9f.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\1b89463680fc48108979a7d77ed49b9f.jpeg'
2023-04-26 10:32:50.444 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/1b89463680fc48108979a7d77ed49b9f.jpeg - - - 200 155124 image/jpeg 8.3820ms
2023-04-26 10:32:50.539 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:50.548 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:50.551 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:50.567 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:50.586 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:52.605 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:52.614 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:52.617 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:52.633 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:52.649 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:52.854 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:32:52.862 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:32:52.866 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:32:52.876 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:32:52.881 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:52.899 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:32:52.917 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (9, 7, 3, 5, 2)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:32:52.932 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 51.1751ms.
2023-04-26 10:32:52.940 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:32:52.946 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 71.1759ms
2023-04-26 10:32:52.952 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:32:52.954 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1243 application/json;+charset=utf-8 100.3346ms
2023-04-26 10:32:54.551 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:32:54.555 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:32:54.563 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:32:54.575 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:32:54.582 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:54.601 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:32:54.618 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (1, 8, 7, 9, 5)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:32:54.633 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 51.6975ms.
2023-04-26 10:32:54.641 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:32:54.647 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 76.6854ms
2023-04-26 10:32:54.653 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:32:54.657 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1243 application/json;+charset=utf-8 106.2586ms
2023-04-26 10:32:54.666 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:54.681 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:54.684 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:54.697 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:54.721 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:55.996 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:32:55.998 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:32:56.001 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:32:56.003 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:32:56.006 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:56.013 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:32:56.024 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (9, 1, 6, 3, 4)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:32:56.029 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 23.3733ms.
2023-04-26 10:32:56.034 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:32:56.040 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 38.0456ms
2023-04-26 10:32:56.042 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:32:56.043 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1243 application/json;+charset=utf-8 47.1358ms
2023-04-26 10:32:56.738 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:56.747 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:56.750 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:56.766 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:56.783 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:57.623 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:32:57.626 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:32:57.627 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:32:57.639 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:32:57.644 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:57.657 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:32:57.680 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (7, 1, 4, 5, 3)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:32:57.685 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 41.7946ms.
2023-04-26 10:32:57.689 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:32:57.692 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 53.6366ms
2023-04-26 10:32:57.696 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:32:57.699 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1243 application/json;+charset=utf-8 75.1510ms
2023-04-26 10:32:58.808 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:58.817 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:58.820 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:32:58.835 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:32:58.853 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:32:58.958 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:32:58.963 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:32:58.971 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:32:58.983 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:32:58.989 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:32:59.007 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:32:59.025 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (9, 2, 10, 1, 5)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:32:59.040 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 52.0385ms.
2023-04-26 10:32:59.047 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:32:59.052 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 70.4704ms
2023-04-26 10:32:59.059 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:32:59.063 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1244 application/json;+charset=utf-8 104.4329ms
2023-04-26 10:32:59.073 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/36f3d88d1ca742ae91e506efbd0ef88e.jpeg - -
2023-04-26 10:32:59.083 +03:00 [INF] Sending file. Request path: '/data/files/36f3d88d1ca742ae91e506efbd0ef88e.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\36f3d88d1ca742ae91e506efbd0ef88e.jpeg'
2023-04-26 10:32:59.091 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/36f3d88d1ca742ae91e506efbd0ef88e.jpeg - - - 200 72718 image/jpeg 18.2163ms
2023-04-26 10:33:00.294 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:33:00.299 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:33:00.303 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:33:00.311 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:33:00.318 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:00.331 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:33:00.353 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (6, 7, 9, 10, 4)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:33:00.366 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 48.3812ms.
2023-04-26 10:33:00.373 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:33:00.382 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 71.7036ms
2023-04-26 10:33:00.389 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:33:00.393 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1244 application/json;+charset=utf-8 98.6032ms
2023-04-26 10:33:00.873 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:00.885 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:00.889 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:33:00.909 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:33:00.918 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:33:02.938 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:02.952 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:02.955 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:33:02.967 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:33:02.990 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:33:05.015 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:05.028 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:05.031 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:33:05.043 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:33:05.063 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:33:05.828 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - -
2023-04-26 10:33:05.833 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-26 10:33:05.852 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:33:05.862 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:33:05.878 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:05.901 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__format_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT m.id
FROM mangas AS m
WHERE EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_0))
2023-04-26 10:33:05.966 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-04-26 10:33:05.990 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:33:06.144 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 272.4292ms.
2023-04-26 10:33:06.149 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:33:06.168 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.GetRandom (Nude.API) in 307.6137ms
2023-04-26 10:33:06.171 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-26 10:33:06.173 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - - - 200 2841 application/json;+charset=utf-8 345.0114ms
2023-04-26 10:33:07.073 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:07.082 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:07.085 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:33:07.101 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:33:07.120 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:33:07.560 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - -
2023-04-26 10:33:07.564 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-26 10:33:07.570 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:33:07.578 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:33:07.585 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:07.598 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__format_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT m.id
FROM mangas AS m
WHERE EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_0))
2023-04-26 10:33:07.624 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:33:07.634 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 50.2351ms.
2023-04-26 10:33:07.638 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:33:07.641 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.GetRandom (Nude.API) in 64.5584ms
2023-04-26 10:33:07.651 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-26 10:33:07.653 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - - - 200 2361 application/json;+charset=utf-8 92.8073ms
2023-04-26 10:33:08.898 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - -
2023-04-26 10:33:08.902 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-26 10:33:08.906 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:33:08.913 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:33:08.917 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:08.939 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__format_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT m.id
FROM mangas AS m
WHERE EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_0))
2023-04-26 10:33:08.960 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:33:08.977 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 59.7668ms.
2023-04-26 10:33:08.985 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:33:08.990 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.GetRandom (Nude.API) in 78.245ms
2023-04-26 10:33:08.995 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-26 10:33:09.001 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - - - 200 2841 application/json;+charset=utf-8 103.3064ms
2023-04-26 10:33:09.143 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:09.152 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:09.155 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:33:09.173 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:33:09.190 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:33:11.209 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:11.221 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:11.225 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:33:11.236 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:33:11.258 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:33:13.283 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:13.292 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:13.295 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:33:13.312 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:33:13.329 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:33:13.600 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/auth?username=sprw1488 application/json;+charset=utf-8 2
2023-04-26 10:33:13.604 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API)'
2023-04-26 10:33:13.608 +03:00 [INF] Route matched with {action = "SignInTelegram", controller = "Authorization"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SignInTelegram(System.String) on controller Nude.API.Controllers.AuthorizationController (Nude.API).
2023-04-26 10:33:13.616 +03:00 [INF] Executing action method Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API) - Validation state: "Valid"
2023-04-26 10:33:13.627 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:13.643 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.discriminator, a.owner_id, a.username, u.id
FROM accounts AS a
INNER JOIN users AS u ON a.owner_id = u.id
WHERE a.username = @__username_0
LIMIT 1
2023-04-26 10:33:13.665 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:33:13.683 +03:00 [INF] Executed action method Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 56.8798ms.
2023-04-26 10:33:13.691 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tokens.Responses.JwtTokenResponse'.
2023-04-26 10:33:13.697 +03:00 [INF] Executed action Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API) in 82.4056ms
2023-04-26 10:33:13.702 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API)'
2023-04-26 10:33:13.706 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/auth?username=sprw1488 application/json;+charset=utf-8 2 - 200 605 application/json;+charset=utf-8 106.5495ms
2023-04-26 10:33:15.352 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:15.360 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:15.363 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:33:15.380 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:33:15.399 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:33:17.411 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:17.425 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:17.430 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:33:17.440 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:33:17.462 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:33:19.485 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:19.494 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:19.497 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:33:19.514 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:33:19.531 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:33:21.551 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:21.564 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:21.568 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:33:21.580 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:33:21.595 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:33:23.617 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:23.630 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:23.634 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:33:23.644 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:33:23.662 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:33:25.679 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:25.688 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:25.691 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:33:25.706 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:33:25.721 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:33:27.738 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:27.747 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:27.750 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:33:27.769 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:33:27.782 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:33:29.804 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:29.808 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:29.811 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:33:29.826 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:33:29.838 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:33:31.855 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:31.868 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:31.874 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:33:31.884 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:33:31.896 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:33:33.905 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:33.909 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:33.912 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:33:33.930 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:33:33.959 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:33:35.974 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:35.985 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:35.987 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:33:35.993 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:33:36.002 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:33:38.017 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:38.027 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:38.030 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:33:38.039 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:33:38.061 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:33:40.082 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:40.099 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:40.102 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:33:40.120 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:33:40.132 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:33:41.361 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/5346---mission-2.html&format=Telegraph - -
2023-04-26 10:33:41.365 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:33:41.377 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:33:41.386 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.FindBy (Nude.API) - Validation state: "Valid"
2023-04-26 10:33:41.399 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:41.460 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-04-26 10:33:41.481 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__url_0='?', @__format_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f0.id, f0.discriminator, f0.image_collection_id, f0.manga_entry_id, f0.type, f0.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE (e.source_url = @__url_0) AND EXISTS (
        SELECT 1
        FROM formats AS f
        WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_1))
    LIMIT 1
) AS t
LEFT JOIN formats AS f0 ON t.id = f0.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f0.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:33:41.492 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.FindBy (Nude.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 99.0917ms.
2023-04-26 10:33:41.497 +03:00 [INF] Executing ObjectResult, writing value of type 'Nude.API.Contracts.Errors.Responses.ErrorResponse'.
2023-04-26 10:33:41.513 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 129.2275ms
2023-04-26 10:33:41.518 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:33:41.521 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/5346---mission-2.html&format=Telegraph - - - 404 175 application/json;+charset=utf-8 160.1084ms
2023-04-26 10:33:41.529 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 66
2023-04-26 10:33:41.533 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-26 10:33:41.539 +03:00 [INF] Route matched with {action = "Create", controller = "ContentTicket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Nude.API.Contracts.Tickets.Requests.ContentTicketRequest) on controller Nude.API.Controllers.ContentTicketController (Nude.API).
2023-04-26 10:33:41.613 +03:00 [INF] Executing action method Nude.API.Controllers.ContentTicketController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:33:41.619 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:41.627 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:33:41.641 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:33:41.669 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id, u.id
FROM content_tickets AS c
INNER JOIN users AS u ON c.user_id = u.id
WHERE u.id = @__userId_0
2023-04-26 10:33:41.706 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?', @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO content_tickets (content_key, content_url, user_id)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-26 10:33:41.732 +03:00 [INF] Executed action method Nude.API.Controllers.ContentTicketController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 115.826ms.
2023-04-26 10:33:41.736 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tickets.Responses.ContentTicketResponse'.
2023-04-26 10:33:41.742 +03:00 [INF] Executed action Nude.API.Controllers.ContentTicketController.Create (Nude.API) in 199.0645ms
2023-04-26 10:33:41.744 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-26 10:33:41.746 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 66 - 200 176 application/json;+charset=utf-8 217.4531ms
2023-04-26 10:33:42.147 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:42.151 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:42.154 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:33:42.159 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:33:42.168 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ticket_ContentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
WHERE c.content_key = @__ticket_ContentKey_0
2023-04-26 10:33:42.173 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:33:42.201 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-04-26 10:33:42.221 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:33:42.233 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:33:42.257 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:33:42.262 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:33:42.921 +03:00 [INF] Received HTTP response headers after 646.1537ms - 200
2023-04-26 10:33:42.928 +03:00 [INF] End processing HTTP request after 674.7183ms - 200
2023-04-26 10:33:42.941 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:33:50.630 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?', @p12='?', @p13='?', @p14='?', @p15='?', @p16='?', @p17='?', @p18='?', @p19='?', @p20='?', @p21='?', @p22='?', @p23='?', @p24='?', @p25='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO external_metas (source_id, source_url)
VALUES (@p0, @p1)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p2)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p3)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p4)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p5)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p6)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p7)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p8)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p9)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p10)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p11)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p12)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p13)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p14)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p15)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p16)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p17)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p18)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p19)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p20)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p21)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p22)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p23)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p24)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p25)
RETURNING id;
2023-04-26 10:33:50.652 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p26='?', @p27='?' (DbType = DateTime), @p28='?', @p29='?' (DbType = Int32), @p30='?', @p31='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO mangas (content_key, created_at, description, external_meta_id, title, updated_at)
VALUES (@p26, @p27, @p28, @p29, @p30, @p31)
RETURNING id;
2023-04-26 10:33:50.669 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p32='?' (DbType = Int32), @p33='?' (DbType = Int32), @p34='?' (DbType = Int32), @p35='?' (DbType = Int32), @p36='?' (DbType = Int32), @p37='?' (DbType = Int32), @p38='?' (DbType = Int32), @p39='?' (DbType = Int32), @p40='?' (DbType = Int32), @p41='?' (DbType = Int32), @p42='?' (DbType = Int32), @p43='?' (DbType = Int32), @p44='?' (DbType = Int32), @p45='?' (DbType = Int32), @p46='?' (DbType = Int32), @p47='?' (DbType = Int32), @p48='?' (DbType = Int32), @p49='?' (DbType = Int32), @p50='?' (DbType = Int32), @p51='?' (DbType = Int32), @p52='?' (DbType = Int32), @p53='?' (DbType = Int32), @p54='?' (DbType = Int32), @p55='?' (DbType = Int32), @p56='?' (DbType = Int32), @p57='?' (DbType = Int32), @p58='?' (DbType = Int32), @p59='?' (DbType = Int32), @p60='?' (DbType = Int32), @p61='?' (DbType = Int32), @p62='?' (DbType = Int32), @p63='?' (DbType = Int32), @p64='?' (DbType = Int32), @p65='?' (DbType = Int32), @p66='?' (DbType = Int32), @p67='?' (DbType = Int32), @p68='?' (DbType = Int32), @p69='?' (DbType = Int32), @p70='?' (DbType = Int32), @p71='?' (DbType = Int32), @p72='?' (DbType = Int32), @p73='?' (DbType = Int32), @p74='?' (DbType = Int32), @p75='?' (DbType = Int32), @p76='?' (DbType = Int32), @p77='?' (DbType = Int32), @p78='?' (DbType = Int32), @p79='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p32, @p33)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p34, @p35)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p36, @p37)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p38, @p39)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p40, @p41)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p42, @p43)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p44, @p45)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p46, @p47)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p48, @p49)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p50, @p51)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p52, @p53)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p54, @p55)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p56, @p57)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p58, @p59)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p60, @p61)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p62, @p63)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p64, @p65)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p66, @p67)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p68, @p69)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p70, @p71)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p72, @p73)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p74, @p75)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p76, @p77)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p78, @p79)
RETURNING id;
2023-04-26 10:33:50.744 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[@__normalizedTags_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.normalize_value, t.type, t.value
FROM tags AS t
WHERE t.normalize_value = ANY (@__normalizedTags_0) OR (((t.normalize_value IS NULL)) AND ((array_position(@__normalizedTags_0, NULL) IS NOT NULL)))
2023-04-26 10:33:50.770 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Int32), @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?', @p9='?', @p10='?' (DbType = Int32), @p11='?', @p12='?', @p13='?' (DbType = Int32), @p14='?', @p15='?', @p16='?' (DbType = Int32), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO tags (normalize_value, type, value)
VALUES (@p0, @p1, @p2)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p3, @p4, @p5)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p6, @p7, @p8)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p9, @p10, @p11)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p12, @p13, @p14)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p15, @p16, @p17)
RETURNING id;
2023-04-26 10:33:50.793 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedTags_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.normalize_value, t.type, t.value
FROM tags AS t
WHERE t.normalize_value = ANY (@__normalizedTags_0) OR (((t.normalize_value IS NULL)) AND ((array_position(@__normalizedTags_0, NULL) IS NOT NULL)))
2023-04-26 10:33:50.803 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO tags (normalize_value, type, value)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-26 10:33:50.890 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t0.id, t0.normalize_value, t0.type, t0.value, m.id, t0.mangas_id, t0.tags_id, t1.mangas_id, t1.tags_id, t1.id, t1.content_key, t1.created_at, t1.description, t1.external_meta_id, t1.title, t1.updated_at
FROM mangas AS m
INNER JOIN (
    SELECT t.id, t.normalize_value, t.type, t.value, m0.mangas_id, m0.tags_id
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t ON m0.tags_id = t.id
) AS t0 ON m.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.mangas_id, m1.tags_id, m2.id, m2.content_key, m2.created_at, m2.description, m2.external_meta_id, m2.title, m2.updated_at
    FROM manga_entry_tag AS m1
    INNER JOIN mangas AS m2 ON m1.mangas_id = m2.id
    WHERE m2.id = @__p_0
) AS t1 ON t0.id = t1.tags_id
WHERE m.id = @__p_0
ORDER BY m.id, t0.mangas_id, t0.tags_id, t0.id, t1.mangas_id, t1.tags_id
2023-04-26 10:33:50.928 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (DbType = Int32), @p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (DbType = Int32), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p0, @p1);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p2, @p3);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p4, @p5);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p6, @p7);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p8, @p9);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p10, @p11);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p12, @p13);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p14, @p15);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p16, @p17);
2023-04-26 10:33:50.948 +03:00 [INF] Content stolen success
2023-04-26 10:33:50.949 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:33:50.951 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:33:50.952 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:33:51.032 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-76159F23124F22D3DFEB5720BF0E2EBC36A39A6AB2981C8B2A08E0ADE9629E2E&format= - -
2023-04-26 10:33:51.037 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:33:51.040 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:33:51.043 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.FindBy (Nude.API) - Validation state: "Valid"
2023-04-26 10:33:51.045 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:51.057 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:33:51.064 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.FindBy (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 19.1702ms.
2023-04-26 10:33:51.074 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:33:51.077 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 34.5696ms
2023-04-26 10:33:51.080 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:33:51.083 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-76159F23124F22D3DFEB5720BF0E2EBC36A39A6AB2981C8B2A08E0ADE9629E2E&format= - - - 200 3318 application/json;+charset=utf-8 51.6802ms
2023-04-26 10:33:51.274 +03:00 [INF] Received HTTP response headers after 319.165ms - 200
2023-04-26 10:33:51.277 +03:00 [INF] End processing HTTP request after 326.0687ms - 200
2023-04-26 10:33:51.287 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:33:51.303 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM content_tickets
WHERE id = @p0;
2023-04-26 10:33:53.338 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:53.351 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:33:53.355 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:33:53.367 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:33:53.397 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:33:53.418 +03:00 [INF] Diagnostics of the FormatsWorker is stated
2023-04-26 10:33:53.425 +03:00 [INF] Starting upload 24 images to tgh
2023-04-26 10:33:55.630 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:33:55.639 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:33:55.644 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:33:55.817 +03:00 [INF] Received HTTP response headers after 169.5272ms - 200
2023-04-26 10:33:55.821 +03:00 [INF] End processing HTTP request after 182.1653ms - 200
2023-04-26 10:33:55.823 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:33:56.983 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:33:56.985 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:33:56.986 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:33:57.163 +03:00 [INF] Received HTTP response headers after 171.8635ms - 200
2023-04-26 10:33:57.166 +03:00 [INF] End processing HTTP request after 181.2786ms - 200
2023-04-26 10:33:57.170 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:33:58.206 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:33:58.209 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:33:58.213 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:33:58.373 +03:00 [INF] Received HTTP response headers after 155.8106ms - 200
2023-04-26 10:33:58.378 +03:00 [INF] End processing HTTP request after 168.3726ms - 200
2023-04-26 10:33:58.388 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:33:59.476 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:33:59.480 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:33:59.485 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:33:59.646 +03:00 [INF] Received HTTP response headers after 156.4452ms - 200
2023-04-26 10:33:59.650 +03:00 [INF] End processing HTTP request after 169.7238ms - 200
2023-04-26 10:33:59.653 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:34:00.899 +03:00 [INF] (5/24) Uploading images to telegraph
2023-04-26 10:34:00.905 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:34:00.908 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:00.911 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:01.134 +03:00 [INF] Received HTTP response headers after 217.5322ms - 200
2023-04-26 10:34:01.137 +03:00 [INF] End processing HTTP request after 229.7072ms - 200
2023-04-26 10:34:01.141 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:34:02.444 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:34:02.453 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:02.457 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:02.628 +03:00 [INF] Received HTTP response headers after 163.4908ms - 200
2023-04-26 10:34:02.633 +03:00 [INF] End processing HTTP request after 179.8446ms - 200
2023-04-26 10:34:02.641 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:34:03.922 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:34:03.926 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:03.931 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:04.166 +03:00 [INF] Received HTTP response headers after 231.2719ms - 200
2023-04-26 10:34:04.175 +03:00 [INF] End processing HTTP request after 248.4609ms - 200
2023-04-26 10:34:04.178 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:34:05.396 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:34:05.405 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:05.409 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:05.647 +03:00 [INF] Received HTTP response headers after 231.3392ms - 200
2023-04-26 10:34:05.652 +03:00 [INF] End processing HTTP request after 247.1624ms - 200
2023-04-26 10:34:05.659 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:34:06.769 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:34:06.774 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:06.779 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:06.934 +03:00 [INF] Received HTTP response headers after 150.4341ms - 200
2023-04-26 10:34:06.939 +03:00 [INF] End processing HTTP request after 164.1209ms - 200
2023-04-26 10:34:06.943 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:34:08.062 +03:00 [INF] (10/24) Uploading images to telegraph
2023-04-26 10:34:08.074 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:34:08.078 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:08.085 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:08.252 +03:00 [INF] Received HTTP response headers after 163.3447ms - 200
2023-04-26 10:34:08.256 +03:00 [INF] End processing HTTP request after 177.8251ms - 200
2023-04-26 10:34:08.261 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:34:09.419 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:34:09.423 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:09.427 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:09.618 +03:00 [INF] Received HTTP response headers after 186.7529ms - 200
2023-04-26 10:34:09.623 +03:00 [INF] End processing HTTP request after 199.9157ms - 200
2023-04-26 10:34:09.626 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:34:10.871 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:34:10.875 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:10.886 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:11.088 +03:00 [INF] Received HTTP response headers after 198.6954ms - 200
2023-04-26 10:34:11.092 +03:00 [INF] End processing HTTP request after 216.9667ms - 200
2023-04-26 10:34:11.096 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:34:12.223 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:34:12.227 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:12.231 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:12.383 +03:00 [INF] Received HTTP response headers after 148.0228ms - 200
2023-04-26 10:34:12.385 +03:00 [INF] End processing HTTP request after 157.9689ms - 200
2023-04-26 10:34:12.392 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:34:13.564 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:34:13.566 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:13.568 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:13.687 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:34:13" 121991
2023-04-26 10:34:13.693 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:34:13.697 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:34:13.707 +03:00 [INF] Received HTTP response headers after 137.9489ms - 200
2023-04-26 10:34:13.710 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:34:13.711 +03:00 [INF] End processing HTTP request after 144.3529ms - 200
2023-04-26 10:34:13.720 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:34:13.723 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:13.732 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:34:13.742 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:34:13.767 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 47.5936ms.
2023-04-26 10:34:13.772 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:34:13.776 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 72.7706ms
2023-04-26 10:34:13.782 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:34:13.784 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:34:13" 121991 - 200 232 application/json;+charset=utf-8 97.3892ms
2023-04-26 10:34:14.420 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:34:14" 132648
2023-04-26 10:34:14.428 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:34:14.432 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:34:14.446 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:34:14.459 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:14.469 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:34:14.479 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:34:14.489 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 40.1603ms.
2023-04-26 10:34:14.494 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:34:14.496 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 53.8793ms
2023-04-26 10:34:14.499 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:34:14.501 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:34:14" 132648 - 200 232 application/json;+charset=utf-8 81.6119ms
2023-04-26 10:34:14.837 +03:00 [INF] (15/24) Uploading images to telegraph
2023-04-26 10:34:14.845 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:34:14.846 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:14.849 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:14.957 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:34:14" 110605
2023-04-26 10:34:14.961 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:34:14.963 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:34:14.969 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:34:14.975 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:14.986 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:34:14.997 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:34:15.002 +03:00 [INF] Received HTTP response headers after 151.1684ms - 200
2023-04-26 10:34:15.005 +03:00 [INF] End processing HTTP request after 158.4594ms - 200
2023-04-26 10:34:15.007 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:34:15.015 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 42.9675ms.
2023-04-26 10:34:15.018 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:34:15.027 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 60.8523ms
2023-04-26 10:34:15.030 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:34:15.032 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:34:14" 110605 - 200 232 application/json;+charset=utf-8 75.0532ms
2023-04-26 10:34:15.586 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:34:15" 69044
2023-04-26 10:34:15.591 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:34:15.595 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:34:15.607 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:34:15.624 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:15.639 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:34:15.653 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:34:15.668 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 55.8589ms.
2023-04-26 10:34:15.674 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:34:15.680 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 76.2065ms
2023-04-26 10:34:15.690 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:34:15.697 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:34:15" 69044 - 200 232 application/json;+charset=utf-8 110.6250ms
2023-04-26 10:34:16.083 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:34:16.087 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:16.091 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:16.160 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:34:16" 98456
2023-04-26 10:34:16.165 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:34:16.174 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:34:16.188 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:34:16.195 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:16.213 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:34:16.228 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:34:16.267 +03:00 [INF] Received HTTP response headers after 171.8924ms - 200
2023-04-26 10:34:16.268 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 75.8072ms.
2023-04-26 10:34:16.271 +03:00 [INF] End processing HTTP request after 184.484ms - 200
2023-04-26 10:34:16.284 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:34:16.287 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:34:16.298 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 114.0932ms
2023-04-26 10:34:16.307 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:34:16.316 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:34:16" 98456 - 200 232 application/json;+charset=utf-8 156.1544ms
2023-04-26 10:34:16.979 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:34:16" 100550
2023-04-26 10:34:16.991 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:34:16.996 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:34:17.006 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:34:17.014 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:17.026 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:34:17.035 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:34:17.048 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 36.6504ms.
2023-04-26 10:34:17.051 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:34:17.060 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 57.8288ms
2023-04-26 10:34:17.062 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:34:17.065 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:34:16" 100550 - 200 232 application/json;+charset=utf-8 85.3475ms
2023-04-26 10:34:17.364 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:34:17.368 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:17.371 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:17.598 +03:00 [INF] Received HTTP response headers after 225.1886ms - 200
2023-04-26 10:34:17.601 +03:00 [INF] End processing HTTP request after 232.9937ms - 200
2023-04-26 10:34:17.603 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:34:17.620 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:34:17" 147049
2023-04-26 10:34:17.622 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:34:17.625 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:34:17.631 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:34:17.645 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:17.653 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:34:17.663 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:34:17.674 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 39.8177ms.
2023-04-26 10:34:17.677 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:34:17.679 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 51.3514ms
2023-04-26 10:34:17.682 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:34:17.684 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:34:17" 147049 - 200 232 application/json;+charset=utf-8 64.0017ms
2023-04-26 10:34:18.151 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:34:18" 66840
2023-04-26 10:34:18.155 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:34:18.159 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:34:18.167 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:34:18.180 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:18.196 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:34:18.221 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:34:18.235 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 58.0134ms.
2023-04-26 10:34:18.241 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:34:18.248 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 84.4722ms
2023-04-26 10:34:18.257 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:34:18.263 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:34:18" 66840 - 200 232 application/json;+charset=utf-8 112.2988ms
2023-04-26 10:34:18.693 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:34:18" 113012
2023-04-26 10:34:18.697 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:34:18.701 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:34:18.711 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:34:18.718 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:18.731 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:34:18.746 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:34:18.750 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:18.754 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:34:18.757 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:18.778 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 63.3433ms.
2023-04-26 10:34:18.785 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:34:18.797 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 89.6594ms
2023-04-26 10:34:18.809 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:34:18.813 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:34:18" 113012 - 200 232 application/json;+charset=utf-8 119.6877ms
2023-04-26 10:34:18.954 +03:00 [INF] Received HTTP response headers after 186.6818ms - 200
2023-04-26 10:34:18.957 +03:00 [INF] End processing HTTP request after 206.7835ms - 200
2023-04-26 10:34:18.965 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:34:19.222 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:34:19" 65190
2023-04-26 10:34:19.227 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:34:19.231 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:34:19.240 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:34:19.247 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:19.266 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:34:19.282 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:34:19.305 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 60.2962ms.
2023-04-26 10:34:19.312 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:34:19.317 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 78.3449ms
2023-04-26 10:34:19.321 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:34:19.324 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:34:19" 65190 - 200 232 application/json;+charset=utf-8 101.8753ms
2023-04-26 10:34:20.073 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:34:20.076 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:20.080 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:20.246 +03:00 [INF] Received HTTP response headers after 160.0661ms - 200
2023-04-26 10:34:20.250 +03:00 [INF] End processing HTTP request after 173.6432ms - 200
2023-04-26 10:34:20.254 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:34:21.341 +03:00 [INF] (20/24) Uploading images to telegraph
2023-04-26 10:34:21.347 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:34:21.351 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:21.356 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:21.547 +03:00 [INF] Received HTTP response headers after 178.335ms - 200
2023-04-26 10:34:21.552 +03:00 [INF] End processing HTTP request after 201.0987ms - 200
2023-04-26 10:34:21.557 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:34:22.911 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:34:22.915 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:22.919 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:23.082 +03:00 [INF] Received HTTP response headers after 153.0319ms - 200
2023-04-26 10:34:23.086 +03:00 [INF] End processing HTTP request after 170.8226ms - 200
2023-04-26 10:34:23.092 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:34:24.355 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:34:24.358 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:24.361 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:24.624 +03:00 [INF] Received HTTP response headers after 259.5817ms - 200
2023-04-26 10:34:24.628 +03:00 [INF] End processing HTTP request after 269.9276ms - 200
2023-04-26 10:34:24.631 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:34:25.997 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:34:26.001 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:26.004 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:26.174 +03:00 [INF] Received HTTP response headers after 160.6904ms - 200
2023-04-26 10:34:26.176 +03:00 [INF] End processing HTTP request after 174.8945ms - 200
2023-04-26 10:34:26.186 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:34:27.365 +03:00 [INF] (24/24) Uploading images to telegraph
2023-04-26 10:34:27.369 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:34:27.372 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:27.381 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:27.535 +03:00 [INF] Received HTTP response headers after 150.7353ms - 200
2023-04-26 10:34:27.540 +03:00 [INF] End processing HTTP request after 167.9167ms - 200
2023-04-26 10:34:27.543 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:34:27.549 +03:00 [INF] Images uploaded success
2023-04-26 10:34:27.555 +03:00 [INF] Creating tgh page titled 'Mission 2' with 24 images
2023-04-26 10:34:28.019 +03:00 [INF] Created tgh page success (https://telegra.ph/Mission-2-04-26)
2023-04-26 10:34:28.062 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO formats (discriminator, image_collection_id, manga_entry_id, type, url)
VALUES (@p0, @p1, @p2, @p3, @p4)
RETURNING id;
2023-04-26 10:34:28.084 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:34:28.090 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:28.093 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:34:28.138 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-76159F23124F22D3DFEB5720BF0E2EBC36A39A6AB2981C8B2A08E0ADE9629E2E&format= - -
2023-04-26 10:34:28.140 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:34:28.142 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:34:28.145 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.FindBy (Nude.API) - Validation state: "Valid"
2023-04-26 10:34:28.147 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:28.159 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:34:28.169 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.FindBy (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 22.4996ms.
2023-04-26 10:34:28.176 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:34:28.179 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 34.2444ms
2023-04-26 10:34:28.181 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:34:28.185 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-76159F23124F22D3DFEB5720BF0E2EBC36A39A6AB2981C8B2A08E0ADE9629E2E&format= - - - 200 3405 application/json;+charset=utf-8 46.9527ms
2023-04-26 10:34:28.365 +03:00 [INF] Received HTTP response headers after 269.1303ms - 200
2023-04-26 10:34:28.368 +03:00 [INF] End processing HTTP request after 277.7791ms - 200
2023-04-26 10:34:28.370 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:34:28.373 +03:00 [INF] FormatsWorker completed in 00:00:34.95
2023-04-26 10:34:30.378 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:30.385 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:30.387 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:34:30.396 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:34:30.410 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:34:32.418 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:32.428 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:32.431 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:34:32.444 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:34:32.456 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:34:34.479 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:34.488 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:34.492 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:34:34.512 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:34:34.528 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:34:36.552 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:36.561 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:36.564 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:34:36.581 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:34:36.596 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:34:38.617 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:38.639 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:38.640 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:34:38.651 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:34:38.672 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:34:40.691 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:40.699 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:40.702 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:34:40.711 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:34:40.733 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:34:42.747 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:42.760 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:42.763 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:34:42.773 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:34:42.794 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:34:44.817 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:44.825 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:44.828 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:34:44.840 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:34:44.858 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:34:46.872 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:46.880 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:46.883 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:34:46.895 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:34:46.914 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:34:48.928 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:48.937 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:48.939 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:34:48.951 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:34:48.971 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:34:50.988 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:51.001 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:51.005 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:34:51.016 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:34:51.029 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:34:53.052 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:53.061 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:53.063 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:34:53.075 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:34:53.087 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:34:55.100 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:55.112 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:55.116 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:34:55.127 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:34:55.147 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:34:57.171 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:57.183 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:57.186 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:34:57.196 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:34:57.218 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:34:59.232 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:59.244 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:34:59.248 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:34:59.258 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:34:59.278 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:01.307 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:01.315 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:01.318 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:01.335 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:01.349 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:03.371 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:03.379 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:03.382 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:03.392 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:03.414 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:05.440 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:05.453 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:05.456 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:05.467 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:05.480 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:07.509 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:07.517 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:07.519 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:07.531 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:07.552 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:09.568 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:09.581 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:09.585 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:09.595 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:09.609 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:11.635 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:11.643 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:11.646 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:11.658 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:11.678 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:13.707 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:13.720 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:13.723 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:13.734 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:13.756 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:15.766 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:15.775 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:15.778 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:15.795 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:15.811 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:16.088 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:35:16.099 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:35:16.104 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:35:16.111 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:35:16.114 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:16.135 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:35:16.150 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (3, 13, 16, 1, 12)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:35:16.166 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 52.133ms.
2023-04-26 10:35:16.173 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:35:16.177 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 67.4096ms
2023-04-26 10:35:16.184 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:35:16.188 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1246 application/json;+charset=utf-8 99.6334ms
2023-04-26 10:35:16.200 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/29a8bbf6ee4947c09a08b00390ee2106.jpeg - -
2023-04-26 10:35:16.205 +03:00 [INF] Sending file. Request path: '/data/files/29a8bbf6ee4947c09a08b00390ee2106.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\29a8bbf6ee4947c09a08b00390ee2106.jpeg'
2023-04-26 10:35:16.209 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/29a8bbf6ee4947c09a08b00390ee2106.jpeg - - - 200 132435 image/jpeg 9.7009ms
2023-04-26 10:35:16.215 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/cb070611c79649279cf2efb1fb36866f.jpeg - -
2023-04-26 10:35:16.219 +03:00 [INF] Sending file. Request path: '/data/files/cb070611c79649279cf2efb1fb36866f.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\cb070611c79649279cf2efb1fb36866f.jpeg'
2023-04-26 10:35:16.223 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/cb070611c79649279cf2efb1fb36866f.jpeg - - - 200 110392 image/jpeg 8.4915ms
2023-04-26 10:35:16.228 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/3dfc3ec06b684b4987a5bb86ee477aa2.jpeg - -
2023-04-26 10:35:16.238 +03:00 [INF] Sending file. Request path: '/data/files/3dfc3ec06b684b4987a5bb86ee477aa2.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\3dfc3ec06b684b4987a5bb86ee477aa2.jpeg'
2023-04-26 10:35:16.245 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/3dfc3ec06b684b4987a5bb86ee477aa2.jpeg - - - 200 100337 image/jpeg 17.4053ms
2023-04-26 10:35:17.829 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:17.838 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:17.841 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:17.851 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:17.872 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:18.635 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:35:18.639 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:35:18.641 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:35:18.646 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:35:18.649 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:18.661 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:35:18.672 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (1, 19, 6, 8, 12)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:35:18.678 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 29.3473ms.
2023-04-26 10:35:18.681 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:35:18.688 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 42.9057ms
2023-04-26 10:35:18.692 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:35:18.696 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1245 application/json;+charset=utf-8 60.5190ms
2023-04-26 10:35:18.707 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/ecd27e91480741ddba0f0c24ce0e4ad8.jpeg - -
2023-04-26 10:35:18.710 +03:00 [INF] Sending file. Request path: '/data/files/ecd27e91480741ddba0f0c24ce0e4ad8.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\ecd27e91480741ddba0f0c24ce0e4ad8.jpeg'
2023-04-26 10:35:18.714 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/ecd27e91480741ddba0f0c24ce0e4ad8.jpeg - - - 200 112799 image/jpeg 7.0276ms
2023-04-26 10:35:19.895 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:19.902 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:19.905 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:19.917 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:19.928 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:20.413 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:35:20.414 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:35:20.416 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:35:20.420 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:35:20.422 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:20.430 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:35:20.439 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (17, 11, 1, 13, 6)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:35:20.449 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 27.47ms.
2023-04-26 10:35:20.452 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:35:20.454 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 35.1723ms
2023-04-26 10:35:20.457 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:35:20.465 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1246 application/json;+charset=utf-8 52.2152ms
2023-04-26 10:35:20.469 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/17fb474d6a2e4d3cab90d342fc782ed8.jpeg - -
2023-04-26 10:35:20.471 +03:00 [INF] Sending file. Request path: '/data/files/17fb474d6a2e4d3cab90d342fc782ed8.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\17fb474d6a2e4d3cab90d342fc782ed8.jpeg'
2023-04-26 10:35:20.477 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/17fb474d6a2e4d3cab90d342fc782ed8.jpeg - - - 200 121778 image/jpeg 7.7112ms
2023-04-26 10:35:20.481 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/61f2b6b12bf34986b37d26f8e679e637.jpeg - -
2023-04-26 10:35:20.491 +03:00 [INF] Sending file. Request path: '/data/files/61f2b6b12bf34986b37d26f8e679e637.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\61f2b6b12bf34986b37d26f8e679e637.jpeg'
2023-04-26 10:35:20.494 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/61f2b6b12bf34986b37d26f8e679e637.jpeg - - - 200 146836 image/jpeg 12.8829ms
2023-04-26 10:35:21.948 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:21.966 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:21.969 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:21.980 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:22.003 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:23.376 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - -
2023-04-26 10:35:23.379 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-26 10:35:23.383 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:35:23.397 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:35:23.403 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:23.416 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__format_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT m.id
FROM mangas AS m
WHERE EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_0))
2023-04-26 10:35:23.439 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:35:23.448 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 46.9868ms.
2023-04-26 10:35:23.454 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:35:23.458 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.GetRandom (Nude.API) in 61.8497ms
2023-04-26 10:35:23.463 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-26 10:35:23.476 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - - - 200 2361 application/json;+charset=utf-8 100.0000ms
2023-04-26 10:35:24.036 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:24.049 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:24.053 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:24.068 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:24.082 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:24.994 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - -
2023-04-26 10:35:24.998 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-26 10:35:25.001 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:35:25.017 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:35:25.024 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:25.038 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__format_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT m.id
FROM mangas AS m
WHERE EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_0))
2023-04-26 10:35:25.058 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:35:25.071 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 47.8294ms.
2023-04-26 10:35:25.087 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:35:25.093 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.GetRandom (Nude.API) in 77.3331ms
2023-04-26 10:35:25.098 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-26 10:35:25.104 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - - - 200 2361 application/json;+charset=utf-8 110.3008ms
2023-04-26 10:35:26.104 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:26.124 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:26.127 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:26.137 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:26.147 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:26.208 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - -
2023-04-26 10:35:26.210 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-26 10:35:26.212 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:35:26.221 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:35:26.224 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:26.234 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__format_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT m.id
FROM mangas AS m
WHERE EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_0))
2023-04-26 10:35:26.245 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:35:26.260 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 36.5323ms.
2023-04-26 10:35:26.265 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:35:26.268 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.GetRandom (Nude.API) in 47.541ms
2023-04-26 10:35:26.270 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-26 10:35:26.272 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - - - 200 3405 application/json;+charset=utf-8 63.5885ms
2023-04-26 10:35:27.555 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - -
2023-04-26 10:35:27.558 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-26 10:35:27.561 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:35:27.570 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:35:27.575 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:27.596 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__format_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT m.id
FROM mangas AS m
WHERE EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_0))
2023-04-26 10:35:27.616 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:35:27.630 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 55.3829ms.
2023-04-26 10:35:27.633 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:35:27.637 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.GetRandom (Nude.API) in 67.4603ms
2023-04-26 10:35:27.672 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-26 10:35:27.676 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - - - 200 2361 application/json;+charset=utf-8 120.9731ms
2023-04-26 10:35:28.163 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:28.172 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:28.175 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:28.196 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:28.214 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:29.186 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - -
2023-04-26 10:35:29.190 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-26 10:35:29.195 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:35:29.201 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:35:29.213 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:29.224 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__format_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT m.id
FROM mangas AS m
WHERE EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_0))
2023-04-26 10:35:29.242 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:35:29.254 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 42.5728ms.
2023-04-26 10:35:29.258 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:35:29.261 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.GetRandom (Nude.API) in 60.6135ms
2023-04-26 10:35:29.263 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-26 10:35:29.264 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - - - 200 3405 application/json;+charset=utf-8 78.4607ms
2023-04-26 10:35:30.221 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:30.230 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:30.233 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:30.250 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:30.264 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:30.522 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - -
2023-04-26 10:35:30.526 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-26 10:35:30.530 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:35:30.538 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:35:30.549 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:30.563 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__format_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT m.id
FROM mangas AS m
WHERE EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_0))
2023-04-26 10:35:30.587 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:35:30.600 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 52.3444ms.
2023-04-26 10:35:30.607 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:35:30.611 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.GetRandom (Nude.API) in 73.5114ms
2023-04-26 10:35:30.625 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-26 10:35:30.629 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - - - 200 2841 application/json;+charset=utf-8 106.7321ms
2023-04-26 10:35:31.958 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - -
2023-04-26 10:35:31.966 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-26 10:35:31.971 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:35:31.980 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:35:31.985 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:31.999 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__format_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT m.id
FROM mangas AS m
WHERE EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_0))
2023-04-26 10:35:32.015 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:35:32.025 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 40.944ms.
2023-04-26 10:35:32.030 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:35:32.032 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.GetRandom (Nude.API) in 52.8363ms
2023-04-26 10:35:32.035 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-26 10:35:32.037 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - - - 200 3405 application/json;+charset=utf-8 78.9727ms
2023-04-26 10:35:32.281 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:32.290 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:32.293 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:32.310 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:32.327 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:33.388 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - -
2023-04-26 10:35:33.391 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-26 10:35:33.403 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:35:33.412 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:35:33.418 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:33.432 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__format_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT m.id
FROM mangas AS m
WHERE EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_0))
2023-04-26 10:35:33.448 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:35:33.457 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 39.6357ms.
2023-04-26 10:35:33.461 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:35:33.464 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.GetRandom (Nude.API) in 51.7867ms
2023-04-26 10:35:33.466 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-26 10:35:33.468 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - - - 200 2841 application/json;+charset=utf-8 80.3552ms
2023-04-26 10:35:34.347 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:34.361 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:34.364 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:34.376 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:34.395 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:36.409 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:36.422 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:36.426 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:36.436 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:36.456 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:38.475 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:38.483 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:38.486 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:38.497 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:38.518 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:40.530 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:40.538 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:40.541 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:40.559 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:40.572 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:42.588 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:42.596 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:42.602 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:42.622 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:42.631 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:44.639 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:44.652 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:44.660 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:44.670 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:44.681 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:46.692 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:46.705 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:46.708 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:46.718 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:46.739 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:48.764 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:48.771 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:48.774 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:48.785 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:48.805 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:50.830 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:50.843 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:50.846 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:50.858 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:50.878 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:52.896 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:52.904 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:52.907 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:52.920 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:52.939 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:54.959 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:54.972 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:54.976 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:54.987 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:55.007 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:57.019 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:57.028 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:57.031 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:57.050 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:57.065 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:35:59.098 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:59.111 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:35:59.115 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:35:59.125 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:35:59.146 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:36:01.162 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:01.170 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:01.172 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:36:01.182 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:36:01.205 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:36:03.233 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:03.242 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:03.245 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:36:03.258 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:36:03.278 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:36:05.310 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:05.317 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:05.320 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:36:05.338 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:36:05.353 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:36:07.364 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:07.377 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:07.381 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:36:07.392 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:36:07.405 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:36:09.430 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:09.446 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:09.447 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:36:09.457 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:36:09.476 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:36:11.491 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:11.501 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:11.504 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:36:11.516 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:36:11.537 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:36:13.557 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:13.567 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:13.592 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:36:13.606 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:36:13.614 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:36:15.480 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/21478-online--nik-and-leri-takabisha-na-seitokaichou-o-appli-de-juujun-cho.html&format=Telegraph - -
2023-04-26 10:36:15.482 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:36:15.484 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:36:15.492 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.FindBy (Nude.API) - Validation state: "Valid"
2023-04-26 10:36:15.503 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:15.522 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__url_0='?', @__format_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f0.id, f0.discriminator, f0.image_collection_id, f0.manga_entry_id, f0.type, f0.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE (e.source_url = @__url_0) AND EXISTS (
        SELECT 1
        FROM formats AS f
        WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_1))
    LIMIT 1
) AS t
LEFT JOIN formats AS f0 ON t.id = f0.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f0.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:36:15.537 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.FindBy (Nude.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 34.4103ms.
2023-04-26 10:36:15.544 +03:00 [INF] Executing ObjectResult, writing value of type 'Nude.API.Contracts.Errors.Responses.ErrorResponse'.
2023-04-26 10:36:15.549 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 57.2248ms
2023-04-26 10:36:15.556 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:36:15.557 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 124
2023-04-26 10:36:15.559 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/21478-online--nik-and-leri-takabisha-na-seitokaichou-o-appli-de-juujun-cho.html&format=Telegraph - - - 404 175 application/json;+charset=utf-8 78.8469ms
2023-04-26 10:36:15.562 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-26 10:36:15.566 +03:00 [INF] Route matched with {action = "Create", controller = "ContentTicket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Nude.API.Contracts.Tickets.Requests.ContentTicketRequest) on controller Nude.API.Controllers.ContentTicketController (Nude.API).
2023-04-26 10:36:15.582 +03:00 [INF] Executing action method Nude.API.Controllers.ContentTicketController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:36:15.585 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:15.603 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:36:15.623 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:36:15.635 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:15.636 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id, u.id
FROM content_tickets AS c
INNER JOIN users AS u ON c.user_id = u.id
WHERE u.id = @__userId_0
2023-04-26 10:36:15.644 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:15.647 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:36:15.658 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?', @p1='?', @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO content_tickets (content_key, content_url, user_id)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-26 10:36:15.680 +03:00 [INF] Executed action method Nude.API.Controllers.ContentTicketController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 95.8196ms.
2023-04-26 10:36:15.682 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tickets.Responses.ContentTicketResponse'.
2023-04-26 10:36:15.685 +03:00 [INF] Executed action Nude.API.Controllers.ContentTicketController.Create (Nude.API) in 104.256ms
2023-04-26 10:36:15.687 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-26 10:36:15.689 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 124 - 200 234 application/json;+charset=utf-8 131.6201ms
2023-04-26 10:36:15.691 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:36:15.706 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:36:17.719 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:17.733 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:17.736 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:36:17.747 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:36:17.754 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ticket_ContentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
WHERE c.content_key = @__ticket_ContentKey_0
2023-04-26 10:36:17.769 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:36:17.780 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:36:17.789 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:36:17.797 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:17.809 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:18.041 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/21478-online--nik-and-leri-takabisha-na-seitokaichou-o-appli-de-juujun-cho.html&format=Telegraph - -
2023-04-26 10:36:18.045 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:36:18.049 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:36:18.055 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.FindBy (Nude.API) - Validation state: "Valid"
2023-04-26 10:36:18.066 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:18.085 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__url_0='?', @__format_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f0.id, f0.discriminator, f0.image_collection_id, f0.manga_entry_id, f0.type, f0.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE (e.source_url = @__url_0) AND EXISTS (
        SELECT 1
        FROM formats AS f
        WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_1))
    LIMIT 1
) AS t
LEFT JOIN formats AS f0 ON t.id = f0.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f0.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:36:18.100 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.FindBy (Nude.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 33.9368ms.
2023-04-26 10:36:18.108 +03:00 [INF] Executing ObjectResult, writing value of type 'Nude.API.Contracts.Errors.Responses.ErrorResponse'.
2023-04-26 10:36:18.114 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 60.2716ms
2023-04-26 10:36:18.120 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:36:18.120 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 124
2023-04-26 10:36:18.125 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/21478-online--nik-and-leri-takabisha-na-seitokaichou-o-appli-de-juujun-cho.html&format=Telegraph - - - 404 175 application/json;+charset=utf-8 83.3397ms
2023-04-26 10:36:18.128 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-26 10:36:18.132 +03:00 [INF] Route matched with {action = "Create", controller = "ContentTicket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Nude.API.Contracts.Tickets.Requests.ContentTicketRequest) on controller Nude.API.Controllers.ContentTicketController (Nude.API).
2023-04-26 10:36:18.152 +03:00 [INF] Executing action method Nude.API.Controllers.ContentTicketController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:36:18.157 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:18.168 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:36:18.184 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:36:18.196 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id, u.id
FROM content_tickets AS c
INNER JOIN users AS u ON c.user_id = u.id
WHERE u.id = @__userId_0
2023-04-26 10:36:18.220 +03:00 [INF] Received HTTP response headers after 404.6742ms - 200
2023-04-26 10:36:18.222 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?', @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO content_tickets (content_key, content_url, user_id)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-26 10:36:18.224 +03:00 [INF] End processing HTTP request after 426.5923ms - 200
2023-04-26 10:36:18.237 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:36:18.248 +03:00 [INF] Executed action method Nude.API.Controllers.ContentTicketController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 92.2812ms.
2023-04-26 10:36:18.257 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tickets.Responses.ContentTicketResponse'.
2023-04-26 10:36:18.263 +03:00 [INF] Executed action Nude.API.Controllers.ContentTicketController.Create (Nude.API) in 116.1631ms
2023-04-26 10:36:18.268 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-26 10:36:18.273 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 124 - 200 234 application/json;+charset=utf-8 151.9455ms
2023-04-26 10:36:21.639 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/21478-online--nik-and-leri-takabisha-na-seitokaichou-o-appli-de-juujun-cho.html&format=Telegraph - -
2023-04-26 10:36:21.641 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:36:21.649 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:36:21.654 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.FindBy (Nude.API) - Validation state: "Valid"
2023-04-26 10:36:21.657 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:21.672 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__url_0='?', @__format_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f0.id, f0.discriminator, f0.image_collection_id, f0.manga_entry_id, f0.type, f0.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE (e.source_url = @__url_0) AND EXISTS (
        SELECT 1
        FROM formats AS f
        WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_1))
    LIMIT 1
) AS t
LEFT JOIN formats AS f0 ON t.id = f0.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f0.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:36:21.686 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.FindBy (Nude.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 29.8517ms.
2023-04-26 10:36:21.693 +03:00 [INF] Executing ObjectResult, writing value of type 'Nude.API.Contracts.Errors.Responses.ErrorResponse'.
2023-04-26 10:36:21.696 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 42.7139ms
2023-04-26 10:36:21.699 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:36:21.701 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 124
2023-04-26 10:36:21.701 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://nude-moon.org/21478-online--nik-and-leri-takabisha-na-seitokaichou-o-appli-de-juujun-cho.html&format=Telegraph - - - 404 175 application/json;+charset=utf-8 62.3081ms
2023-04-26 10:36:21.703 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-26 10:36:21.708 +03:00 [INF] Route matched with {action = "Create", controller = "ContentTicket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Nude.API.Contracts.Tickets.Requests.ContentTicketRequest) on controller Nude.API.Controllers.ContentTicketController (Nude.API).
2023-04-26 10:36:21.712 +03:00 [INF] Executing action method Nude.API.Controllers.ContentTicketController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:36:21.715 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:21.726 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:36:21.736 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:36:21.746 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id, u.id
FROM content_tickets AS c
INNER JOIN users AS u ON c.user_id = u.id
WHERE u.id = @__userId_0
2023-04-26 10:36:21.753 +03:00 [INF] Executed action method Nude.API.Controllers.ContentTicketController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 38.2689ms.
2023-04-26 10:36:21.757 +03:00 [INF] Executing ObjectResult, writing value of type 'Nude.API.Contracts.Errors.Responses.ErrorResponse'.
2023-04-26 10:36:21.760 +03:00 [INF] Executed action Nude.API.Controllers.ContentTicketController.Create (Nude.API) in 48.6461ms
2023-04-26 10:36:21.769 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-26 10:36:21.771 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 124 - 400 507 application/json;+charset=utf-8 70.4879ms
2023-04-26 10:36:22.459 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?', @p12='?', @p13='?', @p14='?', @p15='?', @p16='?', @p17='?', @p18='?', @p19='?', @p20='?', @p21='?', @p22='?', @p23='?', @p24='?', @p25='?', @p26='?', @p27='?', @p28='?', @p29='?', @p30='?', @p31='?', @p32='?', @p33='?', @p34='?', @p35='?', @p36='?', @p37='?', @p38='?', @p39='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO external_metas (source_id, source_url)
VALUES (@p0, @p1)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p2)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p3)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p4)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p5)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p6)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p7)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p8)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p9)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p10)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p11)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p12)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p13)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p14)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p15)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p16)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p17)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p18)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p19)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p20)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p21)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p22)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p23)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p24)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p25)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p26)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p27)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p28)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p29)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p30)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p31)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p32)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p33)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p34)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p35)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p36)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p37)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p38)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p39)
RETURNING id;
2023-04-26 10:36:22.473 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p40='?', @p41='?' (DbType = DateTime), @p42='?', @p43='?' (DbType = Int32), @p44='?', @p45='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO mangas (content_key, created_at, description, external_meta_id, title, updated_at)
VALUES (@p40, @p41, @p42, @p43, @p44, @p45)
RETURNING id;
2023-04-26 10:36:22.489 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@p46='?' (DbType = Int32), @p47='?' (DbType = Int32), @p48='?' (DbType = Int32), @p49='?' (DbType = Int32), @p50='?' (DbType = Int32), @p51='?' (DbType = Int32), @p52='?' (DbType = Int32), @p53='?' (DbType = Int32), @p54='?' (DbType = Int32), @p55='?' (DbType = Int32), @p56='?' (DbType = Int32), @p57='?' (DbType = Int32), @p58='?' (DbType = Int32), @p59='?' (DbType = Int32), @p60='?' (DbType = Int32), @p61='?' (DbType = Int32), @p62='?' (DbType = Int32), @p63='?' (DbType = Int32), @p64='?' (DbType = Int32), @p65='?' (DbType = Int32), @p66='?' (DbType = Int32), @p67='?' (DbType = Int32), @p68='?' (DbType = Int32), @p69='?' (DbType = Int32), @p70='?' (DbType = Int32), @p71='?' (DbType = Int32), @p72='?' (DbType = Int32), @p73='?' (DbType = Int32), @p74='?' (DbType = Int32), @p75='?' (DbType = Int32), @p76='?' (DbType = Int32), @p77='?' (DbType = Int32), @p78='?' (DbType = Int32), @p79='?' (DbType = Int32), @p80='?' (DbType = Int32), @p81='?' (DbType = Int32), @p82='?' (DbType = Int32), @p83='?' (DbType = Int32), @p84='?' (DbType = Int32), @p85='?' (DbType = Int32), @p86='?' (DbType = Int32), @p87='?' (DbType = Int32), @p88='?' (DbType = Int32), @p89='?' (DbType = Int32), @p90='?' (DbType = Int32), @p91='?' (DbType = Int32), @p92='?' (DbType = Int32), @p93='?' (DbType = Int32), @p94='?' (DbType = Int32), @p95='?' (DbType = Int32), @p96='?' (DbType = Int32), @p97='?' (DbType = Int32), @p98='?' (DbType = Int32), @p99='?' (DbType = Int32), @p100='?' (DbType = Int32), @p101='?' (DbType = Int32), @p102='?' (DbType = Int32), @p103='?' (DbType = Int32), @p104='?' (DbType = Int32), @p105='?' (DbType = Int32), @p106='?' (DbType = Int32), @p107='?' (DbType = Int32), @p108='?' (DbType = Int32), @p109='?' (DbType = Int32), @p110='?' (DbType = Int32), @p111='?' (DbType = Int32), @p112='?' (DbType = Int32), @p113='?' (DbType = Int32), @p114='?' (DbType = Int32), @p115='?' (DbType = Int32), @p116='?' (DbType = Int32), @p117='?' (DbType = Int32), @p118='?' (DbType = Int32), @p119='?' (DbType = Int32), @p120='?' (DbType = Int32), @p121='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p46, @p47)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p48, @p49)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p50, @p51)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p52, @p53)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p54, @p55)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p56, @p57)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p58, @p59)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p60, @p61)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p62, @p63)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p64, @p65)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p66, @p67)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p68, @p69)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p70, @p71)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p72, @p73)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p74, @p75)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p76, @p77)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p78, @p79)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p80, @p81)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p82, @p83)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p84, @p85)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p86, @p87)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p88, @p89)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p90, @p91)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p92, @p93)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p94, @p95)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p96, @p97)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p98, @p99)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p100, @p101)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p102, @p103)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p104, @p105)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p106, @p107)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p108, @p109)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p110, @p111)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p112, @p113)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p114, @p115)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p116, @p117)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p118, @p119)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p120, @p121)
RETURNING id;
2023-04-26 10:36:22.515 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedTags_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.normalize_value, t.type, t.value
FROM tags AS t
WHERE t.normalize_value = ANY (@__normalizedTags_0) OR (((t.normalize_value IS NULL)) AND ((array_position(@__normalizedTags_0, NULL) IS NOT NULL)))
2023-04-26 10:36:22.529 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Int32), @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?', @p9='?', @p10='?' (DbType = Int32), @p11='?', @p12='?', @p13='?' (DbType = Int32), @p14='?', @p15='?', @p16='?' (DbType = Int32), @p17='?', @p18='?', @p19='?' (DbType = Int32), @p20='?', @p21='?', @p22='?' (DbType = Int32), @p23='?', @p24='?', @p25='?' (DbType = Int32), @p26='?', @p27='?', @p28='?' (DbType = Int32), @p29='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO tags (normalize_value, type, value)
VALUES (@p0, @p1, @p2)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p3, @p4, @p5)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p6, @p7, @p8)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p9, @p10, @p11)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p12, @p13, @p14)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p15, @p16, @p17)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p18, @p19, @p20)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p21, @p22, @p23)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p24, @p25, @p26)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p27, @p28, @p29)
RETURNING id;
2023-04-26 10:36:22.547 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedTags_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.normalize_value, t.type, t.value
FROM tags AS t
WHERE t.normalize_value = ANY (@__normalizedTags_0) OR (((t.normalize_value IS NULL)) AND ((array_position(@__normalizedTags_0, NULL) IS NOT NULL)))
2023-04-26 10:36:22.565 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO tags (normalize_value, type, value)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-26 10:36:22.582 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t0.id, t0.normalize_value, t0.type, t0.value, m.id, t0.mangas_id, t0.tags_id, t1.mangas_id, t1.tags_id, t1.id, t1.content_key, t1.created_at, t1.description, t1.external_meta_id, t1.title, t1.updated_at
FROM mangas AS m
INNER JOIN (
    SELECT t.id, t.normalize_value, t.type, t.value, m0.mangas_id, m0.tags_id
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t ON m0.tags_id = t.id
) AS t0 ON m.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.mangas_id, m1.tags_id, m2.id, m2.content_key, m2.created_at, m2.description, m2.external_meta_id, m2.title, m2.updated_at
    FROM manga_entry_tag AS m1
    INNER JOIN mangas AS m2 ON m1.mangas_id = m2.id
    WHERE m2.id = @__p_0
) AS t1 ON t0.id = t1.tags_id
WHERE m.id = @__p_0
ORDER BY m.id, t0.mangas_id, t0.tags_id, t0.id, t1.mangas_id, t1.tags_id
2023-04-26 10:36:22.603 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (DbType = Int32), @p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (DbType = Int32), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32), @p18='?' (DbType = Int32), @p19='?' (DbType = Int32), @p20='?' (DbType = Int32), @p21='?' (DbType = Int32), @p22='?' (DbType = Int32), @p23='?' (DbType = Int32), @p24='?' (DbType = Int32), @p25='?' (DbType = Int32), @p26='?' (DbType = Int32), @p27='?' (DbType = Int32), @p28='?' (DbType = Int32), @p29='?' (DbType = Int32), @p30='?' (DbType = Int32), @p31='?' (DbType = Int32), @p32='?' (DbType = Int32), @p33='?' (DbType = Int32), @p34='?' (DbType = Int32), @p35='?' (DbType = Int32), @p36='?' (DbType = Int32), @p37='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p0, @p1);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p2, @p3);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p4, @p5);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p6, @p7);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p8, @p9);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p10, @p11);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p12, @p13);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p14, @p15);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p16, @p17);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p18, @p19);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p20, @p21);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p22, @p23);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p24, @p25);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p26, @p27);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p28, @p29);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p30, @p31);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p32, @p33);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p34, @p35);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p36, @p37);
2023-04-26 10:36:22.616 +03:00 [INF] Content stolen success
2023-04-26 10:36:22.618 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:36:22.620 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:22.625 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:22.676 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-5FA28FE5197EB8F53433F86A89E077E3AE9EF3809BFB4F5FF359BFE76E89D2C0&format= - -
2023-04-26 10:36:22.679 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:36:22.682 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:36:22.687 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.FindBy (Nude.API) - Validation state: "Valid"
2023-04-26 10:36:22.690 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:22.712 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:36:22.728 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.FindBy (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 39.1129ms.
2023-04-26 10:36:22.731 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:36:22.734 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 47.7739ms
2023-04-26 10:36:22.736 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:36:22.738 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-5FA28FE5197EB8F53433F86A89E077E3AE9EF3809BFB4F5FF359BFE76E89D2C0&format= - - - 200 7314 application/json;+charset=utf-8 62.1746ms
2023-04-26 10:36:23.227 +03:00 [INF] Received HTTP response headers after 592.73ms - 200
2023-04-26 10:36:23.233 +03:00 [INF] End processing HTTP request after 612.5825ms - 200
2023-04-26 10:36:23.240 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:36:23.255 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM content_tickets
WHERE id = @p0;
2023-04-26 10:36:25.293 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:25.301 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:25.305 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:36:25.322 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:36:25.331 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ticket_ContentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
WHERE c.content_key = @__ticket_ContentKey_0
2023-04-26 10:36:25.349 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:36:25.360 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:36:25.385 +03:00 [INF] Diagnostics of the FormatsWorker is stated
2023-04-26 10:36:25.387 +03:00 [INF] Starting upload 38 images to tgh
2023-04-26 10:36:25.390 +03:00 [INF] Content already exists, key:MangaEntry-5FA28FE5197EB8F53433F86A89E077E3AE9EF3809BFB4F5FF359BFE76E89D2C0
2023-04-26 10:36:25.392 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:36:25.398 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:25.407 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:25.442 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-5FA28FE5197EB8F53433F86A89E077E3AE9EF3809BFB4F5FF359BFE76E89D2C0&format= - -
2023-04-26 10:36:25.444 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:36:25.445 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:36:25.448 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.FindBy (Nude.API) - Validation state: "Valid"
2023-04-26 10:36:25.450 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:36:25.466 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:36:25.490 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.FindBy (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 39.9817ms.
2023-04-26 10:36:25.495 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:36:25.499 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 51.2102ms
2023-04-26 10:36:25.503 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:36:25.506 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-5FA28FE5197EB8F53433F86A89E077E3AE9EF3809BFB4F5FF359BFE76E89D2C0&format= - - - 200 7314 application/json;+charset=utf-8 64.6713ms
2023-04-26 10:36:25.763 +03:00 [INF] Received HTTP response headers after 354.8726ms - 200
2023-04-26 10:36:25.766 +03:00 [INF] End processing HTTP request after 368.9191ms - 200
2023-04-26 10:36:25.770 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:36:25.785 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM content_tickets
WHERE id = @p0;
2023-04-26 10:36:27.086 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:36:27.091 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:27.094 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:27.394 +03:00 [INF] Received HTTP response headers after 293.3152ms - 200
2023-04-26 10:36:27.399 +03:00 [INF] End processing HTTP request after 307.9043ms - 200
2023-04-26 10:36:27.406 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:36:28.948 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:36:28.951 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:28.955 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:29.249 +03:00 [INF] Received HTTP response headers after 291.3036ms - 200
2023-04-26 10:36:29.258 +03:00 [INF] End processing HTTP request after 306.9205ms - 200
2023-04-26 10:36:29.263 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:36:31.223 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:36:31.233 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:31.236 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:31.508 +03:00 [INF] Received HTTP response headers after 270.0549ms - 200
2023-04-26 10:36:31.511 +03:00 [INF] End processing HTTP request after 278.6459ms - 200
2023-04-26 10:36:31.518 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:36:33.168 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:36:33.173 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:33.177 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:33.456 +03:00 [INF] Received HTTP response headers after 269.5721ms - 200
2023-04-26 10:36:33.461 +03:00 [INF] End processing HTTP request after 288.2135ms - 200
2023-04-26 10:36:33.465 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:36:35.439 +03:00 [INF] (5/38) Uploading images to telegraph
2023-04-26 10:36:35.446 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:36:35.449 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:35.455 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:35.765 +03:00 [INF] Received HTTP response headers after 300.4381ms - 200
2023-04-26 10:36:35.768 +03:00 [INF] End processing HTTP request after 319.0952ms - 200
2023-04-26 10:36:35.776 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:36:37.310 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:36:37.312 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:37.313 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:37.555 +03:00 [INF] Received HTTP response headers after 241.9786ms - 200
2023-04-26 10:36:37.559 +03:00 [INF] End processing HTTP request after 247.0575ms - 200
2023-04-26 10:36:37.561 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:36:39.199 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:36:39.209 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:39.213 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:39.477 +03:00 [INF] Received HTTP response headers after 256.9894ms - 200
2023-04-26 10:36:39.481 +03:00 [INF] End processing HTTP request after 271.8473ms - 200
2023-04-26 10:36:39.484 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:36:40.744 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:36:40.747 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:40.752 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:41.013 +03:00 [INF] Received HTTP response headers after 255.6307ms - 200
2023-04-26 10:36:41.018 +03:00 [INF] End processing HTTP request after 270.4528ms - 200
2023-04-26 10:36:41.021 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:36:42.581 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:36:42.585 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:42.589 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:42.854 +03:00 [INF] Received HTTP response headers after 260.7257ms - 200
2023-04-26 10:36:42.858 +03:00 [INF] End processing HTTP request after 273.2158ms - 200
2023-04-26 10:36:42.862 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:36:44.323 +03:00 [INF] (10/38) Uploading images to telegraph
2023-04-26 10:36:44.334 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:36:44.337 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:44.344 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:44.649 +03:00 [INF] Received HTTP response headers after 302.066ms - 200
2023-04-26 10:36:44.653 +03:00 [INF] End processing HTTP request after 315.792ms - 200
2023-04-26 10:36:44.656 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:36:46.200 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:36:46.209 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:46.212 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:46.469 +03:00 [INF] Received HTTP response headers after 249.6554ms - 200
2023-04-26 10:36:46.473 +03:00 [INF] End processing HTTP request after 264.5103ms - 200
2023-04-26 10:36:46.477 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:36:47.810 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:36:47.814 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:47.824 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:48.155 +03:00 [INF] Received HTTP response headers after 326.9676ms - 200
2023-04-26 10:36:48.158 +03:00 [INF] End processing HTTP request after 344.4261ms - 200
2023-04-26 10:36:48.161 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:36:49.598 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:36:49.603 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:49.613 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:50.111 +03:00 [INF] Received HTTP response headers after 494.4296ms - 200
2023-04-26 10:36:50.115 +03:00 [INF] End processing HTTP request after 512.889ms - 200
2023-04-26 10:36:50.120 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:36:51.522 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:36:51.527 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:51.531 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:51.834 +03:00 [INF] Received HTTP response headers after 298.0408ms - 200
2023-04-26 10:36:51.840 +03:00 [INF] End processing HTTP request after 313.4812ms - 200
2023-04-26 10:36:51.849 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:36:53.790 +03:00 [INF] (15/38) Uploading images to telegraph
2023-04-26 10:36:53.801 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:36:53.805 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:53.808 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:54.089 +03:00 [INF] Received HTTP response headers after 274.1493ms - 200
2023-04-26 10:36:54.093 +03:00 [INF] End processing HTTP request after 288.223ms - 200
2023-04-26 10:36:54.103 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:36:55.526 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:36:55.529 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:55.533 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:55.806 +03:00 [INF] Received HTTP response headers after 270.6042ms - 200
2023-04-26 10:36:55.810 +03:00 [INF] End processing HTTP request after 280.2806ms - 200
2023-04-26 10:36:55.817 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:36:57.505 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:36:57.510 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:57.514 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:57.792 +03:00 [INF] Received HTTP response headers after 273.8879ms - 200
2023-04-26 10:36:57.795 +03:00 [INF] End processing HTTP request after 285.0187ms - 200
2023-04-26 10:36:57.800 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:36:59.392 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:36:59.394 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:59.396 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:36:59.624 +03:00 [INF] Received HTTP response headers after 225.2967ms - 200
2023-04-26 10:36:59.628 +03:00 [INF] End processing HTTP request after 233.3537ms - 200
2023-04-26 10:36:59.632 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:37:01.021 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:37:01.026 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:01.030 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:01.352 +03:00 [INF] Received HTTP response headers after 317.4335ms - 200
2023-04-26 10:37:01.356 +03:00 [INF] End processing HTTP request after 330.1961ms - 200
2023-04-26 10:37:01.360 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:37:02.833 +03:00 [INF] (20/38) Uploading images to telegraph
2023-04-26 10:37:02.838 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:37:02.841 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:02.844 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:03.106 +03:00 [INF] Received HTTP response headers after 258.9513ms - 200
2023-04-26 10:37:03.110 +03:00 [INF] End processing HTTP request after 269.4929ms - 200
2023-04-26 10:37:03.114 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:37:04.493 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:37:04.496 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:04.497 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:04.842 +03:00 [INF] Received HTTP response headers after 341.931ms - 200
2023-04-26 10:37:04.845 +03:00 [INF] End processing HTTP request after 349.9005ms - 200
2023-04-26 10:37:04.849 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:37:06.278 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:37:06.282 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:06.283 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:06.636 +03:00 [INF] Received HTTP response headers after 351.492ms - 200
2023-04-26 10:37:06.639 +03:00 [INF] End processing HTTP request after 356.9274ms - 200
2023-04-26 10:37:06.642 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:37:08.014 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:37:08.018 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:08.022 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:08.305 +03:00 [INF] Received HTTP response headers after 274.7956ms - 200
2023-04-26 10:37:08.309 +03:00 [INF] End processing HTTP request after 290.8073ms - 200
2023-04-26 10:37:08.318 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:37:09.846 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:37:09.851 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:09.859 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:10.110 +03:00 [INF] Received HTTP response headers after 247.8464ms - 200
2023-04-26 10:37:10.114 +03:00 [INF] End processing HTTP request after 262.5834ms - 200
2023-04-26 10:37:10.121 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:37:11.460 +03:00 [INF] (25/38) Uploading images to telegraph
2023-04-26 10:37:11.465 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:37:11.469 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:11.476 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:11.816 +03:00 [INF] Received HTTP response headers after 331.4702ms - 200
2023-04-26 10:37:11.820 +03:00 [INF] End processing HTTP request after 351.6006ms - 200
2023-04-26 10:37:11.824 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:37:12.075 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:37:12" 101225
2023-04-26 10:37:12.079 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:37:12.089 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:37:12.104 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:37:12.112 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:12.129 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:37:12.154 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:37:12.180 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 72.0457ms.
2023-04-26 10:37:12.191 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:37:12.203 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 104.5197ms
2023-04-26 10:37:12.209 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:37:12.220 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:37:12" 101225 - 200 232 application/json;+charset=utf-8 145.2456ms
2023-04-26 10:37:12.735 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:37:12" 205780
2023-04-26 10:37:12.740 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:37:12.743 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:37:12.755 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:37:12.771 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:12.784 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:37:12.801 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:37:12.815 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 55.6259ms.
2023-04-26 10:37:12.821 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:37:12.828 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 77.1572ms
2023-04-26 10:37:12.832 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:37:12.837 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:37:12" 205780 - 200 232 application/json;+charset=utf-8 101.9175ms
2023-04-26 10:37:13.200 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:37:13.204 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:13.209 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:13.432 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:37:13" 84145
2023-04-26 10:37:13.436 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:37:13.442 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:37:13.457 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:37:13.465 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:13.480 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:37:13.499 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:37:13.516 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 53.0699ms.
2023-04-26 10:37:13.530 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:37:13.537 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 83.6988ms
2023-04-26 10:37:13.543 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:37:13.547 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:37:13" 84145 - 200 232 application/json;+charset=utf-8 115.4106ms
2023-04-26 10:37:13.587 +03:00 [INF] Received HTTP response headers after 375.31ms - 200
2023-04-26 10:37:13.591 +03:00 [INF] End processing HTTP request after 386.9927ms - 200
2023-04-26 10:37:13.595 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:37:13.935 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:37:13" 94230
2023-04-26 10:37:13.940 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:37:13.943 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:37:13.960 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:37:13.968 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:13.981 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:37:13.994 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:37:14.017 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 51.6285ms.
2023-04-26 10:37:14.023 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:37:14.028 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 71.4094ms
2023-04-26 10:37:14.032 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:37:14.036 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:37:13" 94230 - 200 232 application/json;+charset=utf-8 100.6970ms
2023-04-26 10:37:14.497 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:37:14" 137757
2023-04-26 10:37:14.499 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:37:14.502 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:37:14.509 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:37:14.515 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:14.524 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:37:14.539 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:37:14.550 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 38.2939ms.
2023-04-26 10:37:14.556 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:37:14.559 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 52.4995ms
2023-04-26 10:37:14.562 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:37:14.565 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:37:14" 137757 - 200 232 application/json;+charset=utf-8 68.3140ms
2023-04-26 10:37:15.038 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:37:15.041 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:15.045 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:15.101 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:37:15" 89894
2023-04-26 10:37:15.106 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:37:15.110 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:37:15.123 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:37:15.128 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:15.139 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:37:15.149 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:37:15.169 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 42.757ms.
2023-04-26 10:37:15.173 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:37:15.175 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 54.7578ms
2023-04-26 10:37:15.185 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:37:15.187 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:37:15" 89894 - 200 232 application/json;+charset=utf-8 86.3100ms
2023-04-26 10:37:15.441 +03:00 [INF] Received HTTP response headers after 392.4839ms - 200
2023-04-26 10:37:15.452 +03:00 [INF] End processing HTTP request after 410.0242ms - 200
2023-04-26 10:37:15.482 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:37:15.904 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:37:15" 115279
2023-04-26 10:37:15.909 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:37:15.913 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:37:15.923 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:37:15.935 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:15.944 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:37:15.953 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:37:15.965 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 32.2928ms.
2023-04-26 10:37:15.969 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:37:15.975 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 55.8051ms
2023-04-26 10:37:15.982 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:37:15.984 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:37:15" 115279 - 200 232 application/json;+charset=utf-8 80.7199ms
2023-04-26 10:37:16.504 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:37:16" 135431
2023-04-26 10:37:16.509 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:37:16.512 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:37:16.522 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:37:16.537 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:16.552 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:37:16.568 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:37:16.594 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 60.3621ms.
2023-04-26 10:37:16.602 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:37:16.607 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 88.7169ms
2023-04-26 10:37:16.611 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:37:16.616 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:37:16" 135431 - 200 232 application/json;+charset=utf-8 112.3205ms
2023-04-26 10:37:17.034 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:37:17" 113144
2023-04-26 10:37:17.038 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:37:17.042 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:37:17.050 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:37:17.058 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:17.075 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:37:17.080 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:37:17.086 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:17.090 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:37:17.099 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:17.115 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 59.9204ms.
2023-04-26 10:37:17.122 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:37:17.127 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 79.8915ms
2023-04-26 10:37:17.132 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:37:17.145 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:37:17" 113144 - 200 232 application/json;+charset=utf-8 111.2801ms
2023-04-26 10:37:17.422 +03:00 [INF] Received HTTP response headers after 310.7087ms - 200
2023-04-26 10:37:17.427 +03:00 [INF] End processing HTTP request after 340.7919ms - 200
2023-04-26 10:37:17.439 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:37:17.778 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:37:17" 126220
2023-04-26 10:37:17.783 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:37:17.789 +03:00 [INF] Route matched with {action = "Create", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Microsoft.AspNetCore.Http.IFormFile) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:37:17.801 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.Create (Nude.API) - Validation state: "Valid"
2023-04-26 10:37:17.809 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:17.832 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:37:17.855 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO images (content_key, created_at, external_meta_id, owner_id, updated_at, url)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2023-04-26 10:37:17.873 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.Create (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 67.3561ms.
2023-04-26 10:37:17.886 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse'.
2023-04-26 10:37:17.894 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.Create (Nude.API) in 97.1129ms
2023-04-26 10:37:17.900 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.Create (Nude.API)'
2023-04-26 10:37:17.904 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/images/new multipart/form-data;+boundary="Upload----04/26/2023+10:37:17" 126220 - 200 232 application/json;+charset=utf-8 126.3157ms
2023-04-26 10:37:18.838 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:37:18.842 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:18.845 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:19.106 +03:00 [INF] Received HTTP response headers after 250.2781ms - 200
2023-04-26 10:37:19.112 +03:00 [INF] End processing HTTP request after 269.9603ms - 200
2023-04-26 10:37:19.116 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:37:20.600 +03:00 [INF] (30/38) Uploading images to telegraph
2023-04-26 10:37:20.605 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:37:20.609 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:20.613 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:20.914 +03:00 [INF] Received HTTP response headers after 298.1482ms - 200
2023-04-26 10:37:20.918 +03:00 [INF] End processing HTTP request after 308.746ms - 200
2023-04-26 10:37:20.921 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:37:22.449 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:37:22.458 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:22.462 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:22.760 +03:00 [INF] Received HTTP response headers after 291.4889ms - 200
2023-04-26 10:37:22.764 +03:00 [INF] End processing HTTP request after 306.0454ms - 200
2023-04-26 10:37:22.768 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:37:25.182 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:37:25.186 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:25.189 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:25.585 +03:00 [INF] Received HTTP response headers after 392.0554ms - 200
2023-04-26 10:37:25.588 +03:00 [INF] End processing HTTP request after 402.5771ms - 200
2023-04-26 10:37:25.593 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:37:27.421 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:37:27.425 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:27.429 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:27.834 +03:00 [INF] Received HTTP response headers after 401.3229ms - 200
2023-04-26 10:37:27.842 +03:00 [INF] End processing HTTP request after 416.7739ms - 200
2023-04-26 10:37:27.845 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:37:30.441 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:37:30.445 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:30.450 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:30.762 +03:00 [INF] Received HTTP response headers after 303.9276ms - 200
2023-04-26 10:37:30.772 +03:00 [INF] End processing HTTP request after 327.7168ms - 200
2023-04-26 10:37:30.777 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:37:32.086 +03:00 [INF] (35/38) Uploading images to telegraph
2023-04-26 10:37:32.091 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:37:32.094 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:32.098 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:32.538 +03:00 [INF] Received HTTP response headers after 436.0924ms - 200
2023-04-26 10:37:32.547 +03:00 [INF] End processing HTTP request after 453.0527ms - 200
2023-04-26 10:37:32.551 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:37:33.720 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:37:33.727 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:33.728 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:33.955 +03:00 [INF] Received HTTP response headers after 224.5674ms - 200
2023-04-26 10:37:33.960 +03:00 [INF] End processing HTTP request after 233.2557ms - 200
2023-04-26 10:37:33.969 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:37:35.335 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:37:35.340 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:35.348 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:35.641 +03:00 [INF] Received HTTP response headers after 290.0592ms - 200
2023-04-26 10:37:35.644 +03:00 [INF] End processing HTTP request after 304.7056ms - 200
2023-04-26 10:37:35.647 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:37:36.912 +03:00 [INF] (38/38) Uploading images to telegraph
2023-04-26 10:37:36.918 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:37:36.921 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:36.925 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:37.202 +03:00 [INF] Received HTTP response headers after 266.1061ms - 200
2023-04-26 10:37:37.206 +03:00 [INF] End processing HTTP request after 285.666ms - 200
2023-04-26 10:37:37.210 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:37:37.219 +03:00 [INF] Images uploaded success
2023-04-26 10:37:37.222 +03:00 [INF] Creating tgh page titled 'Takabisha na Seitokaichou o Appli de Juujun Choukyou / Обучение послушанию великого и могущественного президента студенческого совета с помощью приложения' with 38 images
2023-04-26 10:37:37.594 +03:00 [INF] Created tgh page success (https://telegra.ph/Takabisha-na-Seitokaichou-o-Appli-de-Juujun-Choukyou--Obuchenie-poslushaniyu-velikogo-i-mogushchestvennogo-prezidenta-studenches-04-26-2)
2023-04-26 10:37:37.609 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO formats (discriminator, image_collection_id, manga_entry_id, type, url)
VALUES (@p0, @p1, @p2, @p3, @p4)
RETURNING id;
2023-04-26 10:37:37.632 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:37:37.643 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:37.650 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:37:37.704 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-5FA28FE5197EB8F53433F86A89E077E3AE9EF3809BFB4F5FF359BFE76E89D2C0&format= - -
2023-04-26 10:37:37.707 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:37:37.710 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:37:37.714 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.FindBy (Nude.API) - Validation state: "Valid"
2023-04-26 10:37:37.717 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:37.735 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:37:37.767 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.FindBy (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 50.9194ms.
2023-04-26 10:37:37.772 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:37:37.775 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 61.1312ms
2023-04-26 10:37:37.778 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:37:37.781 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-5FA28FE5197EB8F53433F86A89E077E3AE9EF3809BFB4F5FF359BFE76E89D2C0&format= - - - 200 7522 application/json;+charset=utf-8 76.4084ms
2023-04-26 10:37:38.088 +03:00 [INF] Received HTTP response headers after 433.5613ms - 200
2023-04-26 10:37:38.091 +03:00 [INF] End processing HTTP request after 448.0155ms - 200
2023-04-26 10:37:38.095 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:37:38.098 +03:00 [INF] FormatsWorker completed in 00:01:12.71
2023-04-26 10:37:40.116 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:40.124 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:40.127 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:37:40.145 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:37:40.161 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:37:42.192 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:42.202 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:42.203 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:37:42.224 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:37:42.232 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:37:44.239 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:44.248 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:44.251 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:37:44.259 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:37:44.266 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:37:46.296 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:46.309 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:46.314 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:37:46.324 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:37:46.346 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:37:48.358 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:48.367 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:48.370 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:37:48.386 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:37:48.400 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:37:50.423 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:50.438 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:50.441 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:37:50.456 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:37:50.472 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:37:52.484 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:52.495 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:52.500 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:37:52.506 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:37:52.511 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:37:54.526 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:54.540 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:54.543 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:37:54.555 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:37:54.574 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:37:56.588 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:56.596 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:56.599 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:37:56.610 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:37:56.629 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:37:58.645 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:58.653 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:37:58.656 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:37:58.675 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:37:58.690 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:00.702 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:00.709 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:00.713 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:00.731 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:00.742 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:02.762 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:02.770 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:02.773 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:02.784 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:02.805 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:04.829 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:04.843 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:04.847 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:04.857 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:04.877 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:06.896 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:06.905 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:06.908 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:06.924 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:06.938 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:08.960 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:08.967 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:08.970 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:08.981 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:09.002 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:11.026 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:11.033 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:11.036 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:11.049 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:11.068 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:13.087 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:13.122 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:13.131 +03:00 [INF] Executed DbCommand (31ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:13.156 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:13.163 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:15.181 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:15.189 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:15.192 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:15.207 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:15.221 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:17.233 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:17.242 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:17.245 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:17.262 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:17.276 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:19.300 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:19.308 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:19.311 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:19.321 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:19.343 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:21.356 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:21.368 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:21.372 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:21.383 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:21.402 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:23.412 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:23.425 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:23.429 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:23.439 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:23.461 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:23.584 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:38:23.592 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:23.596 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:38:23.605 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:38:23.610 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:23.629 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:38:23.648 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (3, 5, 24, 1, 21)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:38:23.663 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 53.1446ms.
2023-04-26 10:38:23.669 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:38:23.674 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 70.1492ms
2023-04-26 10:38:23.680 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:23.685 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1245 application/json;+charset=utf-8 100.6721ms
2023-04-26 10:38:23.697 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/2d2ba7660f7742e3974a89db40f0661d.jpeg - -
2023-04-26 10:38:23.703 +03:00 [INF] Sending file. Request path: '/data/files/2d2ba7660f7742e3974a89db40f0661d.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\2d2ba7660f7742e3974a89db40f0661d.jpeg'
2023-04-26 10:38:23.707 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/2d2ba7660f7742e3974a89db40f0661d.jpeg - - - 200 101012 image/jpeg 10.7772ms
2023-04-26 10:38:23.713 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/ec093be32cc44e9db831f00ccdbee0b3.jpeg - -
2023-04-26 10:38:23.717 +03:00 [INF] Sending file. Request path: '/data/files/ec093be32cc44e9db831f00ccdbee0b3.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\ec093be32cc44e9db831f00ccdbee0b3.jpeg'
2023-04-26 10:38:23.722 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/ec093be32cc44e9db831f00ccdbee0b3.jpeg - - - 200 94017 image/jpeg 9.4415ms
2023-04-26 10:38:25.471 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:25.480 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:25.483 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:25.495 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:25.514 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:25.934 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:38:25.938 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:25.942 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:38:25.952 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:38:25.957 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:25.978 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:38:25.993 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (20, 1, 25, 7, 2)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:38:26.007 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 50.5223ms.
2023-04-26 10:38:26.015 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:38:26.019 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 68.3896ms
2023-04-26 10:38:26.025 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:26.028 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1245 application/json;+charset=utf-8 93.6074ms
2023-04-26 10:38:26.043 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/6a3e975e21cc4976943e55d57d96c87e.jpeg - -
2023-04-26 10:38:26.047 +03:00 [INF] Sending file. Request path: '/data/files/6a3e975e21cc4976943e55d57d96c87e.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\6a3e975e21cc4976943e55d57d96c87e.jpeg'
2023-04-26 10:38:26.052 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/6a3e975e21cc4976943e55d57d96c87e.jpeg - - - 200 64977 image/jpeg 8.3500ms
2023-04-26 10:38:26.058 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/f1fe3ec2feb148b7961612efd25db910.jpeg - -
2023-04-26 10:38:26.063 +03:00 [INF] Sending file. Request path: '/data/files/f1fe3ec2feb148b7961612efd25db910.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\f1fe3ec2feb148b7961612efd25db910.jpeg'
2023-04-26 10:38:26.068 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/f1fe3ec2feb148b7961612efd25db910.jpeg - - - 200 137544 image/jpeg 9.9161ms
2023-04-26 10:38:27.532 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:27.540 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:27.542 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:38:27.543 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:27.557 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:27.559 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:27.565 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:38:27.574 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:27.574 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:38:27.582 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:27.591 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:38:27.608 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (2, 24, 9, 21, 11)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:38:27.614 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 32.0309ms.
2023-04-26 10:38:27.617 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:38:27.620 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 46.6727ms
2023-04-26 10:38:27.625 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:27.628 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1246 application/json;+charset=utf-8 86.2326ms
2023-04-26 10:38:28.889 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:38:28.893 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:28.896 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:38:28.902 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:38:28.908 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:28.919 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:38:28.935 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (4, 16, 27, 15, 29)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:38:28.943 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 36.1588ms.
2023-04-26 10:38:28.949 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:38:28.956 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 55.446ms
2023-04-26 10:38:28.960 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:28.964 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1247 application/json;+charset=utf-8 75.6878ms
2023-04-26 10:38:28.980 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/c2e4aa2d3840475bba7632671201dadf.jpeg - -
2023-04-26 10:38:28.988 +03:00 [INF] Sending file. Request path: '/data/files/c2e4aa2d3840475bba7632671201dadf.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\c2e4aa2d3840475bba7632671201dadf.jpeg'
2023-04-26 10:38:28.993 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/c2e4aa2d3840475bba7632671201dadf.jpeg - - - 200 98243 image/jpeg 12.9703ms
2023-04-26 10:38:28.997 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/6c2ee18b515a45c5aac358ccf928a8fb.jpeg - -
2023-04-26 10:38:29.002 +03:00 [INF] Sending file. Request path: '/data/files/6c2ee18b515a45c5aac358ccf928a8fb.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\6c2ee18b515a45c5aac358ccf928a8fb.jpeg'
2023-04-26 10:38:29.007 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/6c2ee18b515a45c5aac358ccf928a8fb.jpeg - - - 200 115066 image/jpeg 10.0231ms
2023-04-26 10:38:29.011 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/bf2b88d1f4424697b3c15687e3889d8c.jpeg - -
2023-04-26 10:38:29.023 +03:00 [INF] Sending file. Request path: '/data/files/bf2b88d1f4424697b3c15687e3889d8c.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\bf2b88d1f4424697b3c15687e3889d8c.jpeg'
2023-04-26 10:38:29.028 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/bf2b88d1f4424697b3c15687e3889d8c.jpeg - - - 200 112931 image/jpeg 17.7167ms
2023-04-26 10:38:29.582 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:29.592 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:29.596 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:29.613 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:29.629 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:30.470 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:38:30.480 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:30.484 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:38:30.493 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:38:30.498 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:30.511 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:38:30.528 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (30, 19, 25, 8, 29)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:38:30.536 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 39.4485ms.
2023-04-26 10:38:30.542 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:38:30.546 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 54.1721ms
2023-04-26 10:38:30.554 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:30.562 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1247 application/json;+charset=utf-8 92.3707ms
2023-04-26 10:38:30.565 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/92234536a9f94776915a968bffb4d539.jpeg - -
2023-04-26 10:38:30.571 +03:00 [INF] Sending file. Request path: '/data/files/92234536a9f94776915a968bffb4d539.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\92234536a9f94776915a968bffb4d539.jpeg'
2023-04-26 10:38:30.577 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/92234536a9f94776915a968bffb4d539.jpeg - - - 200 126007 image/jpeg 11.4699ms
2023-04-26 10:38:31.647 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:31.654 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:31.658 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:31.669 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:31.692 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:32.455 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:38:32.460 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:32.464 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:38:32.474 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:38:32.480 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:32.499 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:38:32.521 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (15, 21, 27, 1, 10)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:38:32.538 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 59.0346ms.
2023-04-26 10:38:32.545 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:38:32.550 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 76.3828ms
2023-04-26 10:38:32.556 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:32.560 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1247 application/json;+charset=utf-8 105.2840ms
2023-04-26 10:38:33.712 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:33.726 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:33.729 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:33.742 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:33.756 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:33.818 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:38:33.821 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:33.826 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:38:33.833 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:38:33.840 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:33.857 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:38:33.870 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (6, 18, 13, 29, 27)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:38:33.881 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 41.3584ms.
2023-04-26 10:38:33.889 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:38:33.894 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 61.5332ms
2023-04-26 10:38:33.898 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:33.911 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1247 application/json;+charset=utf-8 93.4079ms
2023-04-26 10:38:33.914 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/a41fab9f7d2a42fb8e4253306772c2bf.jpeg - -
2023-04-26 10:38:33.921 +03:00 [INF] Sending file. Request path: '/data/files/a41fab9f7d2a42fb8e4253306772c2bf.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\a41fab9f7d2a42fb8e4253306772c2bf.jpeg'
2023-04-26 10:38:33.926 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/a41fab9f7d2a42fb8e4253306772c2bf.jpeg - - - 200 66627 image/jpeg 11.9920ms
2023-04-26 10:38:35.153 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:38:35.155 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:35.157 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:38:35.161 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:38:35.163 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:35.176 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:38:35.186 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (13, 28, 3, 7, 19)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:38:35.191 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 28.2772ms.
2023-04-26 10:38:35.194 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:38:35.198 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 37.2951ms
2023-04-26 10:38:35.206 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:35.208 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1246 application/json;+charset=utf-8 54.5598ms
2023-04-26 10:38:35.211 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/6654af09072941c185ecdcf110baae1c.jpeg - -
2023-04-26 10:38:35.215 +03:00 [INF] Sending file. Request path: '/data/files/6654af09072941c185ecdcf110baae1c.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\6654af09072941c185ecdcf110baae1c.jpeg'
2023-04-26 10:38:35.218 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/6654af09072941c185ecdcf110baae1c.jpeg - - - 200 135218 image/jpeg 7.0447ms
2023-04-26 10:38:35.784 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:35.797 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:35.801 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:35.812 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:35.831 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:36.812 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:38:36.817 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:36.821 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:38:36.828 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:38:36.832 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:36.844 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:38:36.867 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (4, 29, 14, 13, 23)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:38:36.876 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 44.9597ms.
2023-04-26 10:38:36.883 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:38:36.888 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 60.9266ms
2023-04-26 10:38:36.897 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:36.905 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1247 application/json;+charset=utf-8 92.3137ms
2023-04-26 10:38:36.909 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/c7ad1a57d3e348388658520b2801acae.jpeg - -
2023-04-26 10:38:36.914 +03:00 [INF] Sending file. Request path: '/data/files/c7ad1a57d3e348388658520b2801acae.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\c7ad1a57d3e348388658520b2801acae.jpeg'
2023-04-26 10:38:36.919 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/c7ad1a57d3e348388658520b2801acae.jpeg - - - 200 68831 image/jpeg 10.1458ms
2023-04-26 10:38:36.922 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/daa73fdc0f1c4b858a10b01261791fc0.jpeg - -
2023-04-26 10:38:36.928 +03:00 [INF] Sending file. Request path: '/data/files/daa73fdc0f1c4b858a10b01261791fc0.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\daa73fdc0f1c4b858a10b01261791fc0.jpeg'
2023-04-26 10:38:36.933 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/daa73fdc0f1c4b858a10b01261791fc0.jpeg - - - 200 83932 image/jpeg 11.5239ms
2023-04-26 10:38:37.847 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:37.860 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:37.863 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:37.875 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:37.897 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:38.408 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:38:38.412 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:38.417 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:38:38.425 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:38:38.429 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:38.444 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:38:38.461 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (9, 19, 7, 23, 20)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:38:38.471 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 41.6356ms.
2023-04-26 10:38:38.476 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:38:38.480 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 56.1329ms
2023-04-26 10:38:38.494 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:38.500 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1246 application/json;+charset=utf-8 91.2776ms
2023-04-26 10:38:39.911 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:39.919 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:39.922 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:39.937 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:39.940 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:38:39.956 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:39.958 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:39.962 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:38:39.976 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:38:39.982 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:39.998 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:38:40.014 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (8, 21, 22, 15, 3)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:38:40.023 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 41.9523ms.
2023-04-26 10:38:40.028 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:38:40.033 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 56.8849ms
2023-04-26 10:38:40.045 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:40.049 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1246 application/json;+charset=utf-8 109.0221ms
2023-04-26 10:38:40.053 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/data/files/6839e03c3f4149b8a09d52f48864ec29.jpeg - -
2023-04-26 10:38:40.058 +03:00 [INF] Sending file. Request path: '/data/files/6839e03c3f4149b8a09d52f48864ec29.jpeg'. Physical path: 'C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\wwwroot\data\files\6839e03c3f4149b8a09d52f48864ec29.jpeg'
2023-04-26 10:38:40.064 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/data/files/6839e03c3f4149b8a09d52f48864ec29.jpeg - - - 200 205567 image/jpeg 10.2614ms
2023-04-26 10:38:41.819 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:38:41.822 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:41.832 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:38:41.840 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:38:41.846 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:41.859 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:38:41.880 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (12, 25, 5, 24, 18)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:38:41.889 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 43.3162ms.
2023-04-26 10:38:41.895 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:38:41.899 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 59.9866ms
2023-04-26 10:38:41.912 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:41.915 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1247 application/json;+charset=utf-8 96.5357ms
2023-04-26 10:38:41.982 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:41.996 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:41.999 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:42.011 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:42.031 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:43.084 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:38:43.087 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:43.089 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:38:43.092 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:38:43.095 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:43.102 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:38:43.111 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (11, 2, 28, 3, 18)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:38:43.123 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 28.8362ms.
2023-04-26 10:38:43.127 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:38:43.130 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 38.6993ms
2023-04-26 10:38:43.132 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:43.134 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1246 application/json;+charset=utf-8 49.7152ms
2023-04-26 10:38:44.047 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:44.055 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:44.059 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:44.070 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:44.090 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:44.408 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:38:44.412 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:44.414 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:38:44.420 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:38:44.424 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:44.446 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:38:44.467 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (22, 3, 25, 6, 15)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:38:44.476 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 52.4546ms.
2023-04-26 10:38:44.482 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:38:44.487 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 68.414ms
2023-04-26 10:38:44.493 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:44.496 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1246 application/json;+charset=utf-8 87.7250ms
2023-04-26 10:38:46.008 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:38:46.012 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:46.016 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:38:46.031 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:38:46.035 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:46.051 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:38:46.073 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (23, 21, 5, 12, 27)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:38:46.082 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 46.9277ms.
2023-04-26 10:38:46.089 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:38:46.093 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 63.6026ms
2023-04-26 10:38:46.098 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:46.110 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1247 application/json;+charset=utf-8 101.8893ms
2023-04-26 10:38:46.115 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:46.125 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:46.128 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:46.138 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:46.150 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:47.547 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 10:38:47.551 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:47.555 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 10:38:47.565 +03:00 [INF] Executing action method Nude.API.Controllers.ImageController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:38:47.574 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:47.589 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 10:38:47.611 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (30, 14, 20, 7, 29)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 10:38:47.621 +03:00 [INF] Executed action method Nude.API.Controllers.ImageController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 47.1848ms.
2023-04-26 10:38:47.629 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 10:38:47.633 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 68.556ms
2023-04-26 10:38:47.638 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 10:38:47.652 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1247 application/json;+charset=utf-8 104.6097ms
2023-04-26 10:38:48.166 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:48.179 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:48.183 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:48.195 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:48.218 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:50.241 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:50.249 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:50.251 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:50.262 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:50.284 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:52.307 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:52.315 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:52.318 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:52.331 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:52.345 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:52.979 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - -
2023-04-26 10:38:52.983 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-26 10:38:52.987 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:38:52.998 +03:00 [INF] Executing action method Nude.API.Controllers.MangaController.GetRandom (Nude.API) - Validation state: "Valid"
2023-04-26 10:38:53.003 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:53.026 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__format_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT m.id
FROM mangas AS m
WHERE EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_0))
2023-04-26 10:38:53.046 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:38:53.060 +03:00 [INF] Executed action method Nude.API.Controllers.MangaController.GetRandom (Nude.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 57.0014ms.
2023-04-26 10:38:53.066 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:38:53.072 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.GetRandom (Nude.API) in 74.5046ms
2023-04-26 10:38:53.076 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.GetRandom (Nude.API)'
2023-04-26 10:38:53.079 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga/random?format=Telegraph - - - 200 2841 application/json;+charset=utf-8 99.6095ms
2023-04-26 10:38:54.361 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:54.374 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:54.378 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:54.388 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:54.407 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:56.423 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:56.437 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:56.440 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:56.452 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:56.465 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:38:58.487 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:58.492 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:38:58.494 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:38:58.499 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:38:58.512 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:39:00.528 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:39:00.533 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:39:00.534 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:39:00.539 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:39:00.546 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:39:02.563 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:39:02.571 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:39:02.572 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:39:02.577 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:39:02.585 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:39:04.593 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:39:04.600 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:39:04.601 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:39:04.606 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:39:04.614 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:39:06.573 +03:00 [INF] Application is shutting down...
2023-04-26 10:57:12.754 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:13.320 +03:00 [INF] Executed DbCommand (125ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-04-26 10:57:13.370 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-04-26 10:57:13.409 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT migration_id, product_version
FROM "__EFMigrationsHistory"
ORDER BY migration_id;
2023-04-26 10:57:13.454 +03:00 [INF] No migrations were applied. The database is already up to date.
2023-04-26 10:57:13.463 +03:00 [INF] Seeding default admin users
2023-04-26 10:57:13.471 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:14.063 +03:00 [INF] Executed DbCommand (20ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.discriminator, a.owner_id, a.username, u.id
FROM accounts AS a
INNER JOIN users AS u ON a.owner_id = u.id
WHERE a.username = @__username_0
LIMIT 1
2023-04-26 10:57:14.334 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-04-26 10:57:14.358 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:57:14.395 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.discriminator, a.owner_id, a.username, u.id
FROM accounts AS a
INNER JOIN users AS u ON a.owner_id = u.id
WHERE a.username = @__username_0
LIMIT 1
2023-04-26 10:57:14.401 +03:00 [INF] Found 1 users in DB. Setting claim.role.administrator claims them
2023-04-26 10:57:14.600 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM claims
WHERE id = @p0;
2023-04-26 10:57:14.732 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?', @p2='?' (DbType = Int32), @p3='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO claims (issuer, type, user_id, value)
VALUES (@p0, @p1, @p2, @p3)
RETURNING id;
2023-04-26 10:57:14.919 +03:00 [INF] User profile is available. Using 'C:\Users\ilyao\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-04-26 10:57:15.074 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:15.093 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:57:15.100 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:15.174 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:57:15.191 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:57:15.225 +03:00 [INF] Now listening on: http://localhost:3001
2023-04-26 10:57:15.227 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-04-26 10:57:15.229 +03:00 [INF] Hosting environment: Production
2023-04-26 10:57:15.230 +03:00 [INF] Content root path: C:\Users\ilyao\OneDrive\Desktop\Development\Projects\Nude\src\Nude.API\
2023-04-26 10:57:17.208 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:17.217 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:17.220 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:57:17.256 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:57:17.272 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:57:18.901 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://xxxxx.hentaichan.live/manga/45502-oppai-ni-makete-shimau-master-master-cant-win-against-boobs.html&format=Telegraph - -
2023-04-26 10:57:19.034 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:57:19.071 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:57:19.122 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:19.223 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-04-26 10:57:19.248 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__url_0='?', @__format_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f0.id, f0.discriminator, f0.image_collection_id, f0.manga_entry_id, f0.type, f0.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE (e.source_url = @__url_0) AND EXISTS (
        SELECT 1
        FROM formats AS f
        WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_1))
    LIMIT 1
) AS t
LEFT JOIN formats AS f0 ON t.id = f0.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f0.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:57:19.270 +03:00 [INF] Executing ObjectResult, writing value of type 'Nude.API.Contracts.Errors.Responses.ErrorResponse'.
2023-04-26 10:57:19.302 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:19.312 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:19.314 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:57:19.325 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:57:19.336 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:57:19.513 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 426.9183ms
2023-04-26 10:57:19.519 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:57:19.527 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://xxxxx.hentaichan.live/manga/45502-oppai-ni-makete-shimau-master-master-cant-win-against-boobs.html&format=Telegraph - - - 404 175 application/json;+charset=utf-8 633.0020ms
2023-04-26 10:57:19.545 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 129
2023-04-26 10:57:19.790 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-26 10:57:19.800 +03:00 [INF] Route matched with {action = "Create", controller = "ContentTicket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Nude.API.Contracts.Tickets.Requests.ContentTicketRequest) on controller Nude.API.Controllers.ContentTicketController (Nude.API).
2023-04-26 10:57:19.885 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:19.896 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:57:19.911 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:57:19.948 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id, u.id
FROM content_tickets AS c
INNER JOIN users AS u ON c.user_id = u.id
WHERE u.id = @__userId_0
2023-04-26 10:57:20.002 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?', @p1='?', @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO content_tickets (content_key, content_url, user_id)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-26 10:57:20.042 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tickets.Responses.ContentTicketResponse'.
2023-04-26 10:57:20.051 +03:00 [INF] Executed action Nude.API.Controllers.ContentTicketController.Create (Nude.API) in 245.6862ms
2023-04-26 10:57:20.054 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-26 10:57:20.058 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 129 - 200 239 application/json;+charset=utf-8 512.7199ms
2023-04-26 10:57:21.353 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:21.359 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:21.361 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:57:21.368 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:57:21.378 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:57:21.381 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ticket_ContentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
WHERE c.content_key = @__ticket_ContentKey_0
2023-04-26 10:57:21.423 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-04-26 10:57:21.445 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:57:21.459 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:57:21.492 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:57:21.497 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:57:22.265 +03:00 [INF] Received HTTP response headers after 759.099ms - 200
2023-04-26 10:57:22.271 +03:00 [INF] End processing HTTP request after 781.7724ms - 200
2023-04-26 10:57:22.279 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:57:25.702 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO external_metas (source_id, source_url)
VALUES (@p0, @p1)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p2)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p3)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p4)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p5)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p6)
RETURNING id;
2023-04-26 10:57:25.723 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p7='?', @p8='?' (DbType = DateTime), @p9='?', @p10='?' (DbType = Int32), @p11='?', @p12='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO mangas (content_key, created_at, description, external_meta_id, title, updated_at)
VALUES (@p7, @p8, @p9, @p10, @p11, @p12)
RETURNING id;
2023-04-26 10:57:25.736 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p13='?' (DbType = Int32), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32), @p18='?' (DbType = Int32), @p19='?' (DbType = Int32), @p20='?' (DbType = Int32), @p21='?' (DbType = Int32), @p22='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p13, @p14)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p15, @p16)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p17, @p18)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p19, @p20)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p21, @p22)
RETURNING id;
2023-04-26 10:57:25.802 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@__normalizedTags_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.normalize_value, t.type, t.value
FROM tags AS t
WHERE t.normalize_value = ANY (@__normalizedTags_0) OR (((t.normalize_value IS NULL)) AND ((array_position(@__normalizedTags_0, NULL) IS NOT NULL)))
2023-04-26 10:57:25.853 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Int32), @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?', @p9='?', @p10='?' (DbType = Int32), @p11='?', @p12='?', @p13='?' (DbType = Int32), @p14='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO tags (normalize_value, type, value)
VALUES (@p0, @p1, @p2)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p3, @p4, @p5)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p6, @p7, @p8)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p9, @p10, @p11)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p12, @p13, @p14)
RETURNING id;
2023-04-26 10:57:25.878 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedTags_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.normalize_value, t.type, t.value
FROM tags AS t
WHERE t.normalize_value = ANY (@__normalizedTags_0) OR (((t.normalize_value IS NULL)) AND ((array_position(@__normalizedTags_0, NULL) IS NOT NULL)))
2023-04-26 10:57:25.888 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO tags (normalize_value, type, value)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-26 10:57:25.965 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t0.id, t0.normalize_value, t0.type, t0.value, m.id, t0.mangas_id, t0.tags_id, t1.mangas_id, t1.tags_id, t1.id, t1.content_key, t1.created_at, t1.description, t1.external_meta_id, t1.title, t1.updated_at
FROM mangas AS m
INNER JOIN (
    SELECT t.id, t.normalize_value, t.type, t.value, m0.mangas_id, m0.tags_id
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t ON m0.tags_id = t.id
) AS t0 ON m.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.mangas_id, m1.tags_id, m2.id, m2.content_key, m2.created_at, m2.description, m2.external_meta_id, m2.title, m2.updated_at
    FROM manga_entry_tag AS m1
    INNER JOIN mangas AS m2 ON m1.mangas_id = m2.id
    WHERE m2.id = @__p_0
) AS t1 ON t0.id = t1.tags_id
WHERE m.id = @__p_0
ORDER BY m.id, t0.mangas_id, t0.tags_id, t0.id, t1.mangas_id, t1.tags_id
2023-04-26 10:57:26.018 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (DbType = Int32), @p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p0, @p1);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p2, @p3);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p4, @p5);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p6, @p7);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p8, @p9);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p10, @p11);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p12, @p13);
2023-04-26 10:57:26.034 +03:00 [INF] Content stolen success
2023-04-26 10:57:26.037 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:57:26.039 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:57:26.041 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:57:26.086 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-E4E041566BCF8AA861E96D0177A50F7B9BAA48391566BFE90994A71ABC0866A2&format= - -
2023-04-26 10:57:26.091 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:57:26.094 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:57:26.100 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:26.109 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:57:26.150 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:57:26.170 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 73.0795ms
2023-04-26 10:57:26.174 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:57:26.179 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-E4E041566BCF8AA861E96D0177A50F7B9BAA48391566BFE90994A71ABC0866A2&format= - - - 200 1812 application/json;+charset=utf-8 92.7801ms
2023-04-26 10:57:26.298 +03:00 [INF] Received HTTP response headers after 255.252ms - 200
2023-04-26 10:57:26.303 +03:00 [INF] End processing HTTP request after 263.5868ms - 200
2023-04-26 10:57:26.310 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:57:26.332 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM content_tickets
WHERE id = @p0;
2023-04-26 10:57:28.367 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:28.378 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:28.382 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:57:28.392 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:57:28.409 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:57:28.427 +03:00 [INF] Diagnostics of the FormatsWorker is stated
2023-04-26 10:57:28.435 +03:00 [INF] Starting upload 5 images to tgh
2023-04-26 10:57:31.026 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:57:31.034 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:57:31.038 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:57:31.227 +03:00 [INF] Received HTTP response headers after 187.4692ms - 200
2023-04-26 10:57:31.233 +03:00 [INF] End processing HTTP request after 198.906ms - 200
2023-04-26 10:57:31.242 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:57:32.716 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:57:32.719 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:57:32.721 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:57:32.879 +03:00 [INF] Received HTTP response headers after 157.2753ms - 200
2023-04-26 10:57:32.884 +03:00 [INF] End processing HTTP request after 165.491ms - 200
2023-04-26 10:57:32.890 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:57:34.301 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:57:34.305 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:57:34.310 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:57:34.552 +03:00 [INF] Received HTTP response headers after 237.9786ms - 200
2023-04-26 10:57:34.557 +03:00 [INF] End processing HTTP request after 251.9458ms - 200
2023-04-26 10:57:34.562 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:57:36.015 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:57:36.019 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:57:36.023 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:57:36.192 +03:00 [INF] Received HTTP response headers after 163.3586ms - 200
2023-04-26 10:57:36.195 +03:00 [INF] End processing HTTP request after 176.5607ms - 200
2023-04-26 10:57:36.199 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:57:37.222 +03:00 [INF] (5/5) Uploading images to telegraph
2023-04-26 10:57:37.226 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:57:37.229 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:57:37.233 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:57:37.398 +03:00 [INF] Received HTTP response headers after 160.8614ms - 200
2023-04-26 10:57:37.403 +03:00 [INF] End processing HTTP request after 174.16ms - 200
2023-04-26 10:57:37.409 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:57:37.415 +03:00 [INF] Images uploaded success
2023-04-26 10:57:37.421 +03:00 [INF] Creating tgh page titled 'Oppai ni Makete Shimau Master/ Master can't win against boobs (Мастер не может победить сиськи)' with 5 images
2023-04-26 10:57:37.895 +03:00 [INF] Created tgh page success (https://telegra.ph/Oppai-ni-Makete-Shimau-Master-Master-cant-win-against-boobs-Master-ne-mozhet-pobedit-siski-04-26)
2023-04-26 10:57:37.964 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO formats (discriminator, image_collection_id, manga_entry_id, type, url)
VALUES (@p0, @p1, @p2, @p3, @p4)
RETURNING id;
2023-04-26 10:57:37.991 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:57:37.996 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:57:37.999 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:57:38.041 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-E4E041566BCF8AA861E96D0177A50F7B9BAA48391566BFE90994A71ABC0866A2&format= - -
2023-04-26 10:57:38.044 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:57:38.048 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:57:38.054 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:38.064 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:57:38.078 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:57:38.087 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 33.8641ms
2023-04-26 10:57:38.091 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:57:38.093 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-E4E041566BCF8AA861E96D0177A50F7B9BAA48391566BFE90994A71ABC0866A2&format= - - - 200 1980 application/json;+charset=utf-8 52.5497ms
2023-04-26 10:57:38.374 +03:00 [INF] Received HTTP response headers after 372.4796ms - 200
2023-04-26 10:57:38.377 +03:00 [INF] End processing HTTP request after 380.7512ms - 200
2023-04-26 10:57:38.381 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:57:38.384 +03:00 [INF] FormatsWorker completed in 00:00:09.95
2023-04-26 10:57:40.396 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:40.405 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:40.409 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:57:40.419 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:57:40.432 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:57:42.449 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:42.458 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:42.461 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:57:42.472 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:57:42.487 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:57:44.521 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:44.530 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:44.532 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:57:44.544 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:57:44.557 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:57:46.580 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:46.589 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:46.592 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:57:46.603 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:57:46.623 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:57:48.662 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:48.672 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:48.677 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:57:48.686 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:57:48.702 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:57:50.715 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:50.723 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:50.726 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:57:50.740 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:57:50.760 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:57:52.773 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:52.780 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:52.783 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:57:52.793 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:57:52.814 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:57:54.847 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:54.856 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:54.859 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:57:54.871 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:57:54.889 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:57:56.910 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:56.919 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:56.922 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:57:56.936 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:57:56.948 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:57:58.966 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:58.975 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:57:58.985 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:57:59.006 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:57:59.014 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:58:01.026 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:01.036 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:01.039 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:58:01.051 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:58:01.070 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:58:03.097 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:03.104 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:03.107 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:58:03.122 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:58:03.143 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:58:05.157 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:05.166 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:05.169 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:58:05.181 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:58:05.195 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:58:07.211 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:07.229 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:07.231 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:58:07.241 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:58:07.249 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:58:09.258 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:09.266 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:09.269 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:58:09.291 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:58:09.308 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:58:11.320 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:11.334 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:11.336 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:58:11.348 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:58:11.362 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:58:13.383 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:13.393 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:13.396 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:58:13.409 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:58:13.429 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:58:14.764 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://xxxxx.hentaichan.live/manga/45489-mito-to-sao-oji.html&format=Telegraph - -
2023-04-26 10:58:14.770 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:58:14.779 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:58:14.788 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:14.811 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__url_0='?', @__format_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f0.id, f0.discriminator, f0.image_collection_id, f0.manga_entry_id, f0.type, f0.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE (e.source_url = @__url_0) AND EXISTS (
        SELECT 1
        FROM formats AS f
        WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_1))
    LIMIT 1
) AS t
LEFT JOIN formats AS f0 ON t.id = f0.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f0.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:58:14.817 +03:00 [INF] Executing ObjectResult, writing value of type 'Nude.API.Contracts.Errors.Responses.ErrorResponse'.
2023-04-26 10:58:14.820 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 32.6198ms
2023-04-26 10:58:14.823 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:58:14.825 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://xxxxx.hentaichan.live/manga/45489-mito-to-sao-oji.html&format=Telegraph - - - 404 175 application/json;+charset=utf-8 61.0215ms
2023-04-26 10:58:14.829 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 85
2023-04-26 10:58:14.833 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-26 10:58:14.838 +03:00 [INF] Route matched with {action = "Create", controller = "ContentTicket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Nude.API.Contracts.Tickets.Requests.ContentTicketRequest) on controller Nude.API.Controllers.ContentTicketController (Nude.API).
2023-04-26 10:58:14.844 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:14.854 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:58:14.866 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:58:14.876 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id, u.id
FROM content_tickets AS c
INNER JOIN users AS u ON c.user_id = u.id
WHERE u.id = @__userId_0
2023-04-26 10:58:14.890 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?', @p1='?', @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO content_tickets (content_key, content_url, user_id)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-26 10:58:14.908 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tickets.Responses.ContentTicketResponse'.
2023-04-26 10:58:14.911 +03:00 [INF] Executed action Nude.API.Controllers.ContentTicketController.Create (Nude.API) in 69.4164ms
2023-04-26 10:58:14.915 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-26 10:58:14.917 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 85 - 200 195 application/json;+charset=utf-8 87.5783ms
2023-04-26 10:58:15.442 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:15.451 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:15.454 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:58:15.466 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:58:15.476 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ticket_ContentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
WHERE c.content_key = @__ticket_ContentKey_0
2023-04-26 10:58:15.487 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:58:15.501 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:58:15.518 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:58:15.529 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:15.534 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:15.760 +03:00 [INF] Received HTTP response headers after 215.7544ms - 200
2023-04-26 10:58:15.765 +03:00 [INF] End processing HTTP request after 236.0967ms - 200
2023-04-26 10:58:15.769 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:58:17.306 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?', @p12='?', @p13='?', @p14='?', @p15='?', @p16='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO external_metas (source_id, source_url)
VALUES (@p0, @p1)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p2)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p3)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p4)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p5)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p6)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p7)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p8)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p9)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p10)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p11)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p12)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p13)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p14)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p15)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p16)
RETURNING id;
2023-04-26 10:58:17.323 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p17='?', @p18='?' (DbType = DateTime), @p19='?', @p20='?' (DbType = Int32), @p21='?', @p22='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO mangas (content_key, created_at, description, external_meta_id, title, updated_at)
VALUES (@p17, @p18, @p19, @p20, @p21, @p22)
RETURNING id;
2023-04-26 10:58:17.335 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p23='?' (DbType = Int32), @p24='?' (DbType = Int32), @p25='?' (DbType = Int32), @p26='?' (DbType = Int32), @p27='?' (DbType = Int32), @p28='?' (DbType = Int32), @p29='?' (DbType = Int32), @p30='?' (DbType = Int32), @p31='?' (DbType = Int32), @p32='?' (DbType = Int32), @p33='?' (DbType = Int32), @p34='?' (DbType = Int32), @p35='?' (DbType = Int32), @p36='?' (DbType = Int32), @p37='?' (DbType = Int32), @p38='?' (DbType = Int32), @p39='?' (DbType = Int32), @p40='?' (DbType = Int32), @p41='?' (DbType = Int32), @p42='?' (DbType = Int32), @p43='?' (DbType = Int32), @p44='?' (DbType = Int32), @p45='?' (DbType = Int32), @p46='?' (DbType = Int32), @p47='?' (DbType = Int32), @p48='?' (DbType = Int32), @p49='?' (DbType = Int32), @p50='?' (DbType = Int32), @p51='?' (DbType = Int32), @p52='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p23, @p24)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p25, @p26)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p27, @p28)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p29, @p30)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p31, @p32)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p33, @p34)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p35, @p36)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p37, @p38)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p39, @p40)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p41, @p42)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p43, @p44)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p45, @p46)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p47, @p48)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p49, @p50)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p51, @p52)
RETURNING id;
2023-04-26 10:58:17.353 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedTags_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.normalize_value, t.type, t.value
FROM tags AS t
WHERE t.normalize_value = ANY (@__normalizedTags_0) OR (((t.normalize_value IS NULL)) AND ((array_position(@__normalizedTags_0, NULL) IS NOT NULL)))
2023-04-26 10:58:17.363 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Int32), @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?', @p9='?', @p10='?' (DbType = Int32), @p11='?', @p12='?', @p13='?' (DbType = Int32), @p14='?', @p15='?', @p16='?' (DbType = Int32), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO tags (normalize_value, type, value)
VALUES (@p0, @p1, @p2)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p3, @p4, @p5)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p6, @p7, @p8)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p9, @p10, @p11)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p12, @p13, @p14)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p15, @p16, @p17)
RETURNING id;
2023-04-26 10:58:17.378 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedTags_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.normalize_value, t.type, t.value
FROM tags AS t
WHERE t.normalize_value = ANY (@__normalizedTags_0) OR (((t.normalize_value IS NULL)) AND ((array_position(@__normalizedTags_0, NULL) IS NOT NULL)))
2023-04-26 10:58:17.388 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO tags (normalize_value, type, value)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-26 10:58:17.408 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t0.id, t0.normalize_value, t0.type, t0.value, m.id, t0.mangas_id, t0.tags_id, t1.mangas_id, t1.tags_id, t1.id, t1.content_key, t1.created_at, t1.description, t1.external_meta_id, t1.title, t1.updated_at
FROM mangas AS m
INNER JOIN (
    SELECT t.id, t.normalize_value, t.type, t.value, m0.mangas_id, m0.tags_id
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t ON m0.tags_id = t.id
) AS t0 ON m.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.mangas_id, m1.tags_id, m2.id, m2.content_key, m2.created_at, m2.description, m2.external_meta_id, m2.title, m2.updated_at
    FROM manga_entry_tag AS m1
    INNER JOIN mangas AS m2 ON m1.mangas_id = m2.id
    WHERE m2.id = @__p_0
) AS t1 ON t0.id = t1.tags_id
WHERE m.id = @__p_0
ORDER BY m.id, t0.mangas_id, t0.tags_id, t0.id, t1.mangas_id, t1.tags_id
2023-04-26 10:58:17.422 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (DbType = Int32), @p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (DbType = Int32), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32), @p18='?' (DbType = Int32), @p19='?' (DbType = Int32), @p20='?' (DbType = Int32), @p21='?' (DbType = Int32), @p22='?' (DbType = Int32), @p23='?' (DbType = Int32), @p24='?' (DbType = Int32), @p25='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p0, @p1);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p2, @p3);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p4, @p5);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p6, @p7);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p8, @p9);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p10, @p11);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p12, @p13);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p14, @p15);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p16, @p17);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p18, @p19);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p20, @p21);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p22, @p23);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p24, @p25);
2023-04-26 10:58:17.435 +03:00 [INF] Content stolen success
2023-04-26 10:58:17.437 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:58:17.445 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:17.448 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:17.488 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-3D5F91AD4EEF7B6564ABC7BDF1A709A9D7B54302D10723D937A61A405E4D71F1&format= - -
2023-04-26 10:58:17.491 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:58:17.493 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:58:17.497 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:17.511 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:58:17.522 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:58:17.526 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 29.8849ms
2023-04-26 10:58:17.529 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:58:17.531 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-3D5F91AD4EEF7B6564ABC7BDF1A709A9D7B54302D10723D937A61A405E4D71F1&format= - - - 200 3150 application/json;+charset=utf-8 42.9829ms
2023-04-26 10:58:17.664 +03:00 [INF] Received HTTP response headers after 213.5825ms - 200
2023-04-26 10:58:17.668 +03:00 [INF] End processing HTTP request after 222.2062ms - 200
2023-04-26 10:58:17.674 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:58:17.685 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM content_tickets
WHERE id = @p0;
2023-04-26 10:58:19.719 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:19.727 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:19.730 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:58:19.741 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:58:19.768 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:58:19.781 +03:00 [INF] Diagnostics of the FormatsWorker is stated
2023-04-26 10:58:19.792 +03:00 [INF] Starting upload 15 images to tgh
2023-04-26 10:58:21.624 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:58:21.633 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:21.638 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:21.800 +03:00 [INF] Received HTTP response headers after 157.8385ms - 200
2023-04-26 10:58:21.804 +03:00 [INF] End processing HTTP request after 170.8794ms - 200
2023-04-26 10:58:21.810 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:58:23.192 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:58:23.196 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:23.205 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:23.371 +03:00 [INF] Received HTTP response headers after 162.3328ms - 200
2023-04-26 10:58:23.375 +03:00 [INF] End processing HTTP request after 179.2392ms - 200
2023-04-26 10:58:23.380 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:58:25.116 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:58:25.120 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:25.128 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:25.329 +03:00 [INF] Received HTTP response headers after 197.7977ms - 200
2023-04-26 10:58:25.333 +03:00 [INF] End processing HTTP request after 213.5301ms - 200
2023-04-26 10:58:25.340 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:58:27.107 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:58:27.111 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:27.115 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:27.302 +03:00 [INF] Received HTTP response headers after 183.2352ms - 200
2023-04-26 10:58:27.307 +03:00 [INF] End processing HTTP request after 195.7452ms - 200
2023-04-26 10:58:27.312 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:58:28.072 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://xxxxx.hentaichan.live/manga/45488-milking-kaya.html&format=Telegraph - -
2023-04-26 10:58:28.079 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:58:28.081 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:58:28.085 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:28.101 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__url_0='?', @__format_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f0.id, f0.discriminator, f0.image_collection_id, f0.manga_entry_id, f0.type, f0.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE (e.source_url = @__url_0) AND EXISTS (
        SELECT 1
        FROM formats AS f
        WHERE (m.id = f.manga_entry_id) AND (f.type = @__format_1))
    LIMIT 1
) AS t
LEFT JOIN formats AS f0 ON t.id = f0.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f0.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:58:28.111 +03:00 [INF] Executing ObjectResult, writing value of type 'Nude.API.Contracts.Errors.Responses.ErrorResponse'.
2023-04-26 10:58:28.114 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 30.0954ms
2023-04-26 10:58:28.117 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:58:28.119 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?sourceUrl=https://xxxxx.hentaichan.live/manga/45488-milking-kaya.html&format=Telegraph - - - 404 175 application/json;+charset=utf-8 46.3401ms
2023-04-26 10:58:28.123 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 82
2023-04-26 10:58:28.128 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-26 10:58:28.130 +03:00 [INF] Route matched with {action = "Create", controller = "ContentTicket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Nude.API.Contracts.Tickets.Requests.ContentTicketRequest) on controller Nude.API.Controllers.ContentTicketController (Nude.API).
2023-04-26 10:58:28.146 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:28.157 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:58:28.166 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 10:58:28.176 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id, u.id
FROM content_tickets AS c
INNER JOIN users AS u ON c.user_id = u.id
WHERE u.id = @__userId_0
2023-04-26 10:58:28.184 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?', @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO content_tickets (content_key, content_url, user_id)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-26 10:58:28.201 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tickets.Responses.ContentTicketResponse'.
2023-04-26 10:58:28.204 +03:00 [INF] Executed action Nude.API.Controllers.ContentTicketController.Create (Nude.API) in 69.7416ms
2023-04-26 10:58:28.206 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ContentTicketController.Create (Nude.API)'
2023-04-26 10:58:28.208 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/content-tickets application/json;+charset=utf-8 82 - 200 192 application/json;+charset=utf-8 84.9902ms
2023-04-26 10:58:28.900 +03:00 [INF] (5/15) Uploading images to telegraph
2023-04-26 10:58:28.905 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:58:28.907 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:28.912 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:29.085 +03:00 [INF] Received HTTP response headers after 164.5432ms - 200
2023-04-26 10:58:29.089 +03:00 [INF] End processing HTTP request after 182.0418ms - 200
2023-04-26 10:58:29.093 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:58:31.020 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:58:31.024 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:31.026 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:31.195 +03:00 [INF] Received HTTP response headers after 165.1088ms - 200
2023-04-26 10:58:31.197 +03:00 [INF] End processing HTTP request after 173.5559ms - 200
2023-04-26 10:58:31.201 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:58:32.902 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:58:32.906 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:32.911 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:33.094 +03:00 [INF] Received HTTP response headers after 179.6265ms - 200
2023-04-26 10:58:33.099 +03:00 [INF] End processing HTTP request after 192.3366ms - 200
2023-04-26 10:58:33.107 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:58:34.875 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:58:34.879 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:34.884 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:35.046 +03:00 [INF] Received HTTP response headers after 157.349ms - 200
2023-04-26 10:58:35.050 +03:00 [INF] End processing HTTP request after 171.2608ms - 200
2023-04-26 10:58:35.056 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:58:36.698 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:58:36.702 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:36.707 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:37.022 +03:00 [INF] Received HTTP response headers after 311.4644ms - 200
2023-04-26 10:58:37.025 +03:00 [INF] End processing HTTP request after 322.6481ms - 200
2023-04-26 10:58:37.028 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:58:38.689 +03:00 [INF] (10/15) Uploading images to telegraph
2023-04-26 10:58:38.694 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:58:38.697 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:38.700 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:38.846 +03:00 [INF] Received HTTP response headers after 143.3209ms - 200
2023-04-26 10:58:38.854 +03:00 [INF] End processing HTTP request after 157.8976ms - 200
2023-04-26 10:58:38.858 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:58:40.532 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:58:40.539 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:40.543 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:40.719 +03:00 [INF] Received HTTP response headers after 173.1357ms - 200
2023-04-26 10:58:40.727 +03:00 [INF] End processing HTTP request after 187.765ms - 200
2023-04-26 10:58:40.732 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:58:42.571 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:58:42.576 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:42.580 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:42.757 +03:00 [INF] Received HTTP response headers after 170.3023ms - 200
2023-04-26 10:58:42.761 +03:00 [INF] End processing HTTP request after 185.2054ms - 200
2023-04-26 10:58:42.769 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:58:44.399 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:58:44.403 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:44.407 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:44.612 +03:00 [INF] Received HTTP response headers after 195.4488ms - 200
2023-04-26 10:58:44.615 +03:00 [INF] End processing HTTP request after 212.3791ms - 200
2023-04-26 10:58:44.618 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:58:46.315 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:58:46.318 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:46.326 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:46.479 +03:00 [INF] Received HTTP response headers after 148.4265ms - 200
2023-04-26 10:58:46.484 +03:00 [INF] End processing HTTP request after 165.8564ms - 200
2023-04-26 10:58:46.490 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:58:47.791 +03:00 [INF] (15/15) Uploading images to telegraph
2023-04-26 10:58:47.809 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:58:47.811 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:47.813 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:47.971 +03:00 [INF] Received HTTP response headers after 156.4886ms - 200
2023-04-26 10:58:47.974 +03:00 [INF] End processing HTTP request after 162.8567ms - 200
2023-04-26 10:58:47.979 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:58:47.982 +03:00 [INF] Images uploaded success
2023-04-26 10:58:47.986 +03:00 [INF] Creating tgh page titled 'Mito to Sao Oji (Мито и дядюшка прутик)' with 15 images
2023-04-26 10:58:48.287 +03:00 [INF] Created tgh page success (https://telegra.ph/Mito-to-Sao-Oji-Mito-i-dyadyushka-prutik-04-26)
2023-04-26 10:58:48.298 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO formats (discriminator, image_collection_id, manga_entry_id, type, url)
VALUES (@p0, @p1, @p2, @p3, @p4)
RETURNING id;
2023-04-26 10:58:48.321 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:58:48.328 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:48.333 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:48.388 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-3D5F91AD4EEF7B6564ABC7BDF1A709A9D7B54302D10723D937A61A405E4D71F1&format= - -
2023-04-26 10:58:48.391 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:58:48.392 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:58:48.400 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:48.412 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:58:48.421 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:58:48.424 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 24.8816ms
2023-04-26 10:58:48.428 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:58:48.431 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-3D5F91AD4EEF7B6564ABC7BDF1A709A9D7B54302D10723D937A61A405E4D71F1&format= - - - 200 3268 application/json;+charset=utf-8 42.5968ms
2023-04-26 10:58:48.596 +03:00 [INF] Received HTTP response headers after 258.9883ms - 200
2023-04-26 10:58:48.601 +03:00 [INF] End processing HTTP request after 273.2715ms - 200
2023-04-26 10:58:48.609 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:58:48.613 +03:00 [INF] FormatsWorker completed in 00:00:28.83
2023-04-26 10:58:50.627 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:50.634 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:50.637 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:58:50.650 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:58:50.664 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ticket_ContentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
WHERE c.content_key = @__ticket_ContentKey_0
2023-04-26 10:58:50.674 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:58:50.684 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:58:50.701 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:58:50.710 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:50.715 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:50.894 +03:00 [INF] Received HTTP response headers after 173.2325ms - 200
2023-04-26 10:58:50.899 +03:00 [INF] End processing HTTP request after 188.672ms - 200
2023-04-26 10:58:50.904 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:58:53.245 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?', @p12='?', @p13='?', @p14='?', @p15='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO external_metas (source_id, source_url)
VALUES (@p0, @p1)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p2)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p3)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p4)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p5)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p6)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p7)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p8)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p9)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p10)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p11)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p12)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p13)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p14)
RETURNING id;
INSERT INTO urls (value)
VALUES (@p15)
RETURNING id;
2023-04-26 10:58:53.264 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p16='?', @p17='?' (DbType = DateTime), @p18='?', @p19='?' (DbType = Int32), @p20='?', @p21='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO mangas (content_key, created_at, description, external_meta_id, title, updated_at)
VALUES (@p16, @p17, @p18, @p19, @p20, @p21)
RETURNING id;
2023-04-26 10:58:53.282 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p22='?' (DbType = Int32), @p23='?' (DbType = Int32), @p24='?' (DbType = Int32), @p25='?' (DbType = Int32), @p26='?' (DbType = Int32), @p27='?' (DbType = Int32), @p28='?' (DbType = Int32), @p29='?' (DbType = Int32), @p30='?' (DbType = Int32), @p31='?' (DbType = Int32), @p32='?' (DbType = Int32), @p33='?' (DbType = Int32), @p34='?' (DbType = Int32), @p35='?' (DbType = Int32), @p36='?' (DbType = Int32), @p37='?' (DbType = Int32), @p38='?' (DbType = Int32), @p39='?' (DbType = Int32), @p40='?' (DbType = Int32), @p41='?' (DbType = Int32), @p42='?' (DbType = Int32), @p43='?' (DbType = Int32), @p44='?' (DbType = Int32), @p45='?' (DbType = Int32), @p46='?' (DbType = Int32), @p47='?' (DbType = Int32), @p48='?' (DbType = Int32), @p49='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p22, @p23)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p24, @p25)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p26, @p27)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p28, @p29)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p30, @p31)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p32, @p33)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p34, @p35)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p36, @p37)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p38, @p39)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p40, @p41)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p42, @p43)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p44, @p45)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p46, @p47)
RETURNING id;
INSERT INTO manga_images (manga_entry_id, url_id)
VALUES (@p48, @p49)
RETURNING id;
2023-04-26 10:58:53.315 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedTags_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.normalize_value, t.type, t.value
FROM tags AS t
WHERE t.normalize_value = ANY (@__normalizedTags_0) OR (((t.normalize_value IS NULL)) AND ((array_position(@__normalizedTags_0, NULL) IS NOT NULL)))
2023-04-26 10:58:53.327 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Int32), @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?', @p9='?', @p10='?' (DbType = Int32), @p11='?', @p12='?', @p13='?' (DbType = Int32), @p14='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO tags (normalize_value, type, value)
VALUES (@p0, @p1, @p2)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p3, @p4, @p5)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p6, @p7, @p8)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p9, @p10, @p11)
RETURNING id;
INSERT INTO tags (normalize_value, type, value)
VALUES (@p12, @p13, @p14)
RETURNING id;
2023-04-26 10:58:53.345 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedTags_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.normalize_value, t.type, t.value
FROM tags AS t
WHERE t.normalize_value = ANY (@__normalizedTags_0) OR (((t.normalize_value IS NULL)) AND ((array_position(@__normalizedTags_0, NULL) IS NOT NULL)))
2023-04-26 10:58:53.357 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO tags (normalize_value, type, value)
VALUES (@p0, @p1, @p2)
RETURNING id;
2023-04-26 10:58:53.377 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t0.id, t0.normalize_value, t0.type, t0.value, m.id, t0.mangas_id, t0.tags_id, t1.mangas_id, t1.tags_id, t1.id, t1.content_key, t1.created_at, t1.description, t1.external_meta_id, t1.title, t1.updated_at
FROM mangas AS m
INNER JOIN (
    SELECT t.id, t.normalize_value, t.type, t.value, m0.mangas_id, m0.tags_id
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t ON m0.tags_id = t.id
) AS t0 ON m.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.mangas_id, m1.tags_id, m2.id, m2.content_key, m2.created_at, m2.description, m2.external_meta_id, m2.title, m2.updated_at
    FROM manga_entry_tag AS m1
    INNER JOIN mangas AS m2 ON m1.mangas_id = m2.id
    WHERE m2.id = @__p_0
) AS t1 ON t0.id = t1.tags_id
WHERE m.id = @__p_0
ORDER BY m.id, t0.mangas_id, t0.tags_id, t0.id, t1.mangas_id, t1.tags_id
2023-04-26 10:58:53.389 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (DbType = Int32), @p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (DbType = Int32), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32), @p18='?' (DbType = Int32), @p19='?' (DbType = Int32), @p20='?' (DbType = Int32), @p21='?' (DbType = Int32), @p22='?' (DbType = Int32), @p23='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p0, @p1);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p2, @p3);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p4, @p5);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p6, @p7);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p8, @p9);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p10, @p11);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p12, @p13);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p14, @p15);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p16, @p17);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p18, @p19);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p20, @p21);
INSERT INTO manga_entry_tag (mangas_id, tags_id)
VALUES (@p22, @p23);
2023-04-26 10:58:53.405 +03:00 [INF] Content stolen success
2023-04-26 10:58:53.407 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:58:53.409 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:53.411 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:53.449 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-D4ADEAF64F3B3E5C4EB56BE82A78604EB92FBDB878F15B2E202EB9B01790E260&format= - -
2023-04-26 10:58:53.452 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:58:53.454 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:58:53.460 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:53.473 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:58:53.481 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:58:53.491 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 31.9855ms
2023-04-26 10:58:53.494 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:58:53.496 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-D4ADEAF64F3B3E5C4EB56BE82A78604EB92FBDB878F15B2E202EB9B01790E260&format= - - - 200 2738 application/json;+charset=utf-8 46.9240ms
2023-04-26 10:58:53.601 +03:00 [INF] Received HTTP response headers after 188.6525ms - 200
2023-04-26 10:58:53.605 +03:00 [INF] End processing HTTP request after 196.4759ms - 200
2023-04-26 10:58:53.608 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:58:53.620 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM content_tickets
WHERE id = @p0;
2023-04-26 10:58:55.654 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:55.661 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:58:55.665 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:58:55.680 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:58:55.702 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:58:55.714 +03:00 [INF] Diagnostics of the FormatsWorker is stated
2023-04-26 10:58:55.726 +03:00 [INF] Starting upload 14 images to tgh
2023-04-26 10:58:58.107 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:58:58.115 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:58.120 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:58.293 +03:00 [INF] Received HTTP response headers after 170.16ms - 200
2023-04-26 10:58:58.302 +03:00 [INF] End processing HTTP request after 186.9151ms - 200
2023-04-26 10:58:58.306 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:58:59.746 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:58:59.750 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:59.755 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:58:59.935 +03:00 [INF] Received HTTP response headers after 170.4947ms - 200
2023-04-26 10:58:59.937 +03:00 [INF] End processing HTTP request after 186.4589ms - 200
2023-04-26 10:58:59.939 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:59:01.624 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:59:01.632 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:01.636 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:01.828 +03:00 [INF] Received HTTP response headers after 186.3101ms - 200
2023-04-26 10:59:01.833 +03:00 [INF] End processing HTTP request after 200.5021ms - 200
2023-04-26 10:59:01.838 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:59:03.613 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:59:03.615 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:03.617 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:03.780 +03:00 [INF] Received HTTP response headers after 161.2943ms - 200
2023-04-26 10:59:03.783 +03:00 [INF] End processing HTTP request after 167.9941ms - 200
2023-04-26 10:59:03.790 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:59:05.564 +03:00 [INF] (5/14) Uploading images to telegraph
2023-04-26 10:59:05.568 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:59:05.571 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:05.574 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:05.802 +03:00 [INF] Received HTTP response headers after 223.7879ms - 200
2023-04-26 10:59:05.806 +03:00 [INF] End processing HTTP request after 235.2915ms - 200
2023-04-26 10:59:05.810 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:59:07.728 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:59:07.734 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:07.738 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:07.906 +03:00 [INF] Received HTTP response headers after 164.3098ms - 200
2023-04-26 10:59:07.915 +03:00 [INF] End processing HTTP request after 181.0221ms - 200
2023-04-26 10:59:07.920 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:59:09.614 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:59:09.618 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:09.626 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:09.787 +03:00 [INF] Received HTTP response headers after 157.214ms - 200
2023-04-26 10:59:09.792 +03:00 [INF] End processing HTTP request after 173.7332ms - 200
2023-04-26 10:59:09.798 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:59:11.448 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:59:11.451 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:11.454 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:11.730 +03:00 [INF] Received HTTP response headers after 272.6558ms - 200
2023-04-26 10:59:11.732 +03:00 [INF] End processing HTTP request after 280.6154ms - 200
2023-04-26 10:59:11.733 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:59:13.449 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:59:13.452 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:13.454 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:13.604 +03:00 [INF] Received HTTP response headers after 148.072ms - 200
2023-04-26 10:59:13.607 +03:00 [INF] End processing HTTP request after 155.0572ms - 200
2023-04-26 10:59:13.610 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:59:15.323 +03:00 [INF] (10/14) Uploading images to telegraph
2023-04-26 10:59:15.327 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:59:15.330 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:15.333 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:15.502 +03:00 [INF] Received HTTP response headers after 160.1151ms - 200
2023-04-26 10:59:15.507 +03:00 [INF] End processing HTTP request after 176.3849ms - 200
2023-04-26 10:59:15.512 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:59:17.075 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:59:17.082 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:17.086 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:17.248 +03:00 [INF] Received HTTP response headers after 159.7128ms - 200
2023-04-26 10:59:17.253 +03:00 [INF] End processing HTTP request after 170.8334ms - 200
2023-04-26 10:59:17.258 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:59:18.985 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:59:18.993 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:18.996 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:19.175 +03:00 [INF] Received HTTP response headers after 175.6752ms - 200
2023-04-26 10:59:19.184 +03:00 [INF] End processing HTTP request after 190.9813ms - 200
2023-04-26 10:59:19.189 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:59:20.804 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:59:20.807 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:20.811 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:21.063 +03:00 [INF] Received HTTP response headers after 249.1128ms - 200
2023-04-26 10:59:21.071 +03:00 [INF] End processing HTTP request after 264.0723ms - 200
2023-04-26 10:59:21.076 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:59:23.147 +03:00 [INF] (14/14) Uploading images to telegraph
2023-04-26 10:59:23.151 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:59:23.154 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:23.157 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:23.325 +03:00 [INF] Received HTTP response headers after 165.5519ms - 200
2023-04-26 10:59:23.330 +03:00 [INF] End processing HTTP request after 176.4447ms - 200
2023-04-26 10:59:23.340 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:59:23.343 +03:00 [INF] Images uploaded success
2023-04-26 10:59:23.348 +03:00 [INF] Creating tgh page titled 'Milking Kaya (Доение Кайи)' with 14 images
2023-04-26 10:59:23.643 +03:00 [INF] Created tgh page success (https://telegra.ph/Milking-Kaya-Doenie-Kaji-04-26)
2023-04-26 10:59:23.656 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO formats (discriminator, image_collection_id, manga_entry_id, type, url)
VALUES (@p0, @p1, @p2, @p3, @p4)
RETURNING id;
2023-04-26 10:59:23.680 +03:00 [INF] Send ticket processed request for url http://127.0.0.1:5000/callback
2023-04-26 10:59:23.685 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:23.690 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:5000/callback"
2023-04-26 10:59:23.741 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-D4ADEAF64F3B3E5C4EB56BE82A78604EB92FBDB878F15B2E202EB9B01790E260&format= - -
2023-04-26 10:59:23.745 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:59:23.750 +03:00 [INF] Route matched with {action = "FindBy", controller = "Manga"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FindBy(System.String, System.String, System.Nullable`1[Nude.API.Models.Formats.FormatType]) on controller Nude.API.Controllers.MangaController (Nude.API).
2023-04-26 10:59:23.764 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:23.786 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__contentKey_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.content_key, t.created_at, t.description, t.external_meta_id, t.title, t.updated_at, t.id0, f.id, f.discriminator, f.image_collection_id, f.manga_entry_id, f.type, f.url, t0.mangas_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value, t2.id, t2.manga_entry_id, t2.url_id, t2.id0, t2.value, t.source_id, t.source_url
FROM (
    SELECT m.id, m.content_key, m.created_at, m.description, m.external_meta_id, m.title, m.updated_at, e.id AS id0, e.source_id, e.source_url
    FROM mangas AS m
    LEFT JOIN external_metas AS e ON m.external_meta_id = e.id
    WHERE m.content_key = @__contentKey_0
    LIMIT 1
) AS t
LEFT JOIN formats AS f ON t.id = f.manga_entry_id
LEFT JOIN (
    SELECT m0.mangas_id, m0.tags_id, t1.id, t1.normalize_value, t1.type, t1.value
    FROM manga_entry_tag AS m0
    INNER JOIN tags AS t1 ON m0.tags_id = t1.id
) AS t0 ON t.id = t0.mangas_id
LEFT JOIN (
    SELECT m1.id, m1.manga_entry_id, m1.url_id, u.id AS id0, u.value
    FROM manga_images AS m1
    INNER JOIN urls AS u ON m1.url_id = u.id
) AS t2 ON t.id = t2.manga_entry_id
ORDER BY t.id, t.id0, f.id, t0.mangas_id, t0.tags_id, t0.id, t2.id
2023-04-26 10:59:23.799 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Manga.Responses.MangaResponse'.
2023-04-26 10:59:23.804 +03:00 [INF] Executed action Nude.API.Controllers.MangaController.FindBy (Nude.API) in 40.7698ms
2023-04-26 10:59:23.808 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.MangaController.FindBy (Nude.API)'
2023-04-26 10:59:23.813 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/manga?contentKey=MangaEntry-D4ADEAF64F3B3E5C4EB56BE82A78604EB92FBDB878F15B2E202EB9B01790E260&format= - - - 200 2840 application/json;+charset=utf-8 71.5256ms
2023-04-26 10:59:23.956 +03:00 [INF] Received HTTP response headers after 263.0175ms - 200
2023-04-26 10:59:23.960 +03:00 [INF] End processing HTTP request after 274.8447ms - 200
2023-04-26 10:59:23.967 +03:00 [INF] Callback response status '"OK"'
2023-04-26 10:59:23.974 +03:00 [INF] FormatsWorker completed in 00:00:28.25
2023-04-26 10:59:25.989 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:25.997 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:25.999 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:59:26.010 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:59:26.031 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:59:28.048 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:28.061 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:28.067 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:59:28.083 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:59:28.095 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:59:30.110 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:30.118 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:30.121 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:59:30.133 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:59:30.154 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:59:32.168 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:32.173 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:32.177 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:59:32.191 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:59:32.206 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:59:34.222 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:34.233 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:34.236 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:59:34.250 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:59:34.272 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:59:36.297 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:36.309 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:36.317 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:59:36.327 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:59:36.349 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:59:38.357 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:38.369 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:38.376 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:59:38.389 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:59:38.400 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:59:40.410 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:40.418 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:40.421 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:59:40.432 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:59:40.453 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:59:42.467 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:42.475 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:42.477 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:59:42.489 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:59:42.510 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:59:44.526 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:44.534 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:44.537 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:59:44.548 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:59:44.569 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:59:46.583 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:46.596 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:46.603 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:59:46.614 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:59:46.635 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:59:48.657 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:48.668 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:48.671 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:59:48.683 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:59:48.706 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:59:50.729 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:50.740 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:50.761 +03:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:59:50.768 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:59:50.776 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:59:52.785 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:52.797 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:52.800 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:59:52.811 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:59:52.829 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:59:54.843 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:54.850 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:54.853 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:59:54.864 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:59:54.885 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:59:56.916 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:56.927 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:56.931 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:59:56.942 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:59:56.964 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 10:59:58.989 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:58.996 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 10:59:58.998 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 10:59:59.008 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 10:59:59.031 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:01.045 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:01.054 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:01.058 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:01.077 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:01.089 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:03.113 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:03.125 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:03.134 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:03.152 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:03.177 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:05.183 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:05.192 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:05.195 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:05.207 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:05.228 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:07.240 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:07.248 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:07.251 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:07.264 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:07.289 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:09.313 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:09.320 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:09.323 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:09.334 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:09.353 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:10.285 +03:00 [INF] Request starting HTTP/1.1 POST http://127.0.0.1:3001/v2/auth?username=sprw1488 application/json;+charset=utf-8 2
2023-04-26 11:00:10.298 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API)'
2023-04-26 11:00:10.309 +03:00 [INF] Route matched with {action = "SignInTelegram", controller = "Authorization"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SignInTelegram(System.String) on controller Nude.API.Controllers.AuthorizationController (Nude.API).
2023-04-26 11:00:10.321 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:10.332 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.discriminator, a.owner_id, a.username, u.id
FROM accounts AS a
INNER JOIN users AS u ON a.owner_id = u.id
WHERE a.username = @__username_0
LIMIT 1
2023-04-26 11:00:10.341 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, a.id, a.discriminator, a.owner_id, a.username, c.id, c.issuer, c.type, c.user_id, c.value
FROM (
    SELECT u.id
    FROM users AS u
    WHERE u.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN accounts AS a ON t.id = a.owner_id
LEFT JOIN claims AS c ON t.id = c.user_id
ORDER BY t.id, a.id
2023-04-26 11:00:10.426 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Tokens.Responses.JwtTokenResponse'.
2023-04-26 11:00:10.432 +03:00 [INF] Executed action Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API) in 115.0644ms
2023-04-26 11:00:10.439 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.AuthorizationController.SignInTelegram (Nude.API)'
2023-04-26 11:00:10.441 +03:00 [INF] Request finished HTTP/1.1 POST http://127.0.0.1:3001/v2/auth?username=sprw1488 application/json;+charset=utf-8 2 - 200 605 application/json;+charset=utf-8 156.3320ms
2023-04-26 11:00:11.377 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:11.385 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:11.388 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:11.404 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:11.420 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:13.435 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:13.443 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:13.446 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:13.463 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:13.481 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:15.501 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:15.515 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:15.517 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:15.525 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:15.533 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:17.553 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:17.568 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:17.573 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:17.584 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:17.599 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:19.610 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:19.624 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:19.626 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:19.637 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:19.663 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:21.128 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 11:00:21.136 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 11:00:21.147 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 11:00:21.162 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:21.205 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 11:00:21.278 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (7, 13, 16, 6, 17)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 11:00:21.337 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 11:00:21.347 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 189.6706ms
2023-04-26 11:00:21.352 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 11:00:21.360 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1246 application/json;+charset=utf-8 231.6276ms
2023-04-26 11:00:21.683 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:21.692 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:21.695 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:21.716 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:21.732 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:23.686 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 11:00:23.692 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 11:00:23.696 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 11:00:23.706 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:23.720 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 11:00:23.733 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (10, 27, 25, 5, 6)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 11:00:23.738 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 11:00:23.741 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 36.8254ms
2023-04-26 11:00:23.745 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 11:00:23.747 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1246 application/json;+charset=utf-8 60.0946ms
2023-04-26 11:00:23.747 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:23.756 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:23.758 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:23.772 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:23.783 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:25.437 +03:00 [INF] Request starting HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - -
2023-04-26 11:00:25.441 +03:00 [INF] Executing endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 11:00:25.445 +03:00 [INF] Route matched with {action = "GetRandom", controller = "Image"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandom(Int32) on controller Nude.API.Controllers.ImageController (Nude.API).
2023-04-26 11:00:25.456 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:25.472 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id
FROM images AS i
LEFT JOIN users AS u ON i.owner_id = u.id
WHERE (u.id IS NOT NULL)
2023-04-26 11:00:25.490 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.id, i.content_key, i.created_at, i.external_meta_id, i.owner_id, i.updated_at, i.url, e.id, e.source_id, e.source_url, t0.images_id, t0.tags_id, t0.id, t0.normalize_value, t0.type, t0.value
FROM images AS i
LEFT JOIN external_metas AS e ON i.external_meta_id = e.id
LEFT JOIN (
    SELECT i0.images_id, i0.tags_id, t.id, t.normalize_value, t.type, t.value
    FROM image_entry_tag AS i0
    INNER JOIN tags AS t ON i0.tags_id = t.id
) AS t0 ON i.id = t0.images_id
WHERE i.id IN (3, 20, 23, 15, 10)
ORDER BY i.id, e.id, t0.images_id, t0.tags_id
2023-04-26 11:00:25.500 +03:00 [INF] Executing OkObjectResult, writing value of type 'Nude.API.Contracts.Images.Responses.ImageResponse[]'.
2023-04-26 11:00:25.505 +03:00 [INF] Executed action Nude.API.Controllers.ImageController.GetRandom (Nude.API) in 52.909ms
2023-04-26 11:00:25.508 +03:00 [INF] Executed endpoint 'Nude.API.Controllers.ImageController.GetRandom (Nude.API)'
2023-04-26 11:00:25.510 +03:00 [INF] Request finished HTTP/1.1 GET http://127.0.0.1:3001/v2/images/random?count=5 - - - 200 1247 application/json;+charset=utf-8 72.6892ms
2023-04-26 11:00:25.811 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:25.819 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:25.822 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:25.839 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:25.857 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:27.881 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:27.899 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:27.902 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:27.913 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:27.940 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:29.959 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:29.972 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:29.976 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:29.987 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:30.007 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:32.026 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:32.039 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:32.042 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:32.053 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:32.073 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:34.098 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:34.113 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:34.116 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:34.126 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:34.146 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:36.168 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:36.179 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:36.189 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:36.203 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:36.218 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:38.253 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:38.261 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:38.264 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:38.277 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:38.297 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:40.309 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:40.316 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:40.319 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:40.330 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:40.352 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:42.369 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:42.377 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:42.380 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:42.398 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:42.414 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:44.430 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:44.448 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:44.449 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:44.461 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:44.472 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:46.491 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:46.536 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:46.538 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:46.543 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:46.551 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:48.571 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:48.578 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:48.581 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:48.601 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:48.614 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:50.642 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:50.649 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:50.652 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:50.674 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:50.688 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:52.703 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:52.719 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:52.722 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:52.734 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:52.755 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:54.778 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:54.802 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:54.805 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:54.815 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:54.822 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:56.833 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:56.837 +03:00 [INF] Entity Framework Core 6.0.16 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.8+e68dfe8b5cbe4a26d20acc36def6187aa1cfdda3' with options: MigrationsAssembly=Nude.API using snake-case naming  (culture=)
2023-04-26 11:00:56.839 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.content_key, c.content_url, c.user_id
FROM content_tickets AS c
ORDER BY c.id
LIMIT 1
2023-04-26 11:00:56.858 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m.content_key
FROM mangas AS m
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (m.id = f.manga_entry_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM manga_images AS m0
    WHERE m.id = m0.manga_entry_id) <= 45)
LIMIT 1
2023-04-26 11:00:56.865 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i.content_key
FROM image_collections AS i
WHERE NOT (EXISTS (
    SELECT 1
    FROM formats AS f
    WHERE (i.id = f.image_collection_id) AND (f.type = 0))) AND ((
    SELECT COUNT(*)::INT
    FROM collection_image AS c
    WHERE i.id = c.collection_id) <= 45)
LIMIT 1
2023-04-26 11:00:57.914 +03:00 [INF] Application is shutting down...
